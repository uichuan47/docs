{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs \u4eba\u751f\u6ca1\u6709\u767d\u8d70\u7684\u8def\uff0c\u6bcf\u4e00\u6b65\u90fd\u7b97\u6570","title":"Home"},{"location":"#welcome-to-mkdocs","text":"","title":"Welcome to MkDocs"},{"location":"#_1","text":"","title":"\u4eba\u751f\u6ca1\u6709\u767d\u8d70\u7684\u8def\uff0c\u6bcf\u4e00\u6b65\u90fd\u7b97\u6570"},{"location":"BadBoy/sb_token_92a71bc83842e2f97576375067d415a4/","text":"","title":"Sb token 92a71bc83842e2f97576375067d415a4"},{"location":"Dev_documents/HTML/reference/","text":"4.references HTML https://www.w3school.com.cn/tags/tag_html.asp CSS\u624b\u518c https://www.w3school.com.cn/css/index.asp?file=index.asp JS\u624b\u518c https://www.w3school.com.cn/js/index.asp markdown\u8bed\u6cd5 https://markdown.com.cn/basic-syntax/","title":"4.references"},{"location":"Dev_documents/HTML/reference/#4references","text":"HTML https://www.w3school.com.cn/tags/tag_html.asp CSS\u624b\u518c https://www.w3school.com.cn/css/index.asp?file=index.asp JS\u624b\u518c https://www.w3school.com.cn/js/index.asp markdown\u8bed\u6cd5 https://markdown.com.cn/basic-syntax/","title":"4.references"},{"location":"Dev_documents/about_git/git/","text":"1.\u5173\u4e8eGit \u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u8f6f\u4ef6 1.\u524d\u620f \u4e2a\u4eba\u4fe1\u606f\u914d\u7f6e git config --global user.email \"you@example.com\" git config --global user.name \"Your Name\" 1.1 \u8fdb\u5165\u6587\u4ef6\u5939\u521d\u59cb\u5316 cd folder git init \u6267\u884c\u4e24\u6b65\u547d\u4ee4\u540e\uff0cgit\u4f1a\u5728folder\u6587\u4ef6\u5939\u4e2d\u521b\u5efa\u4e00\u4e2a\u9690\u85cf\u6587\u4ef6\u5939 .git (base) uichuan@wangyichuansMBP learn_git % git init hint: Using 'master' as the name for the initial branch. This default branch name hint: is subject to change. To configure the initial branch name to use in all hint: of your new repositories, which will suppress this warning, call: hint: hint: git config --global init.defaultBranch <name> hint: hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and hint: 'development'. The just-created branch can be renamed via this command: hint: hint: git branch -m <name> 1.2 \u6587\u4ef6\u7684\u72b6\u6001\u68c0\u67e5 git status (base) uichuan@wangyichuansMBP learn_git % git status On branch master No commits yet Untracked files: (use \"git add <file>...\" to include in what will be committed) index.txt nothing added to commit but untracked files present (use \"git add\" to track) 1.3 \u5c06\u6587\u4ef6\u7531git\u7ba1\u7406 git add . . \u4ee3\u8868\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u7684\u6240\u6709\u6587\u4ef6 (base) uichuan@wangyichuansMBP learn_git % git add . (base) uichuan@wangyichuansMBP learn_git % git status On branch master No commits yet Changes to be committed: (use \"git rm --cached <file>...\" to unstage) new file: index.txt 1.4 \u63d0\u4ea4 git commmit -m \"v1\" \u5176\u4e2d -m \u540e\u8ddf\u968f\u7684\u5b57\u7b26\u4e32\u4ee3\u8868\u63d0\u4ea4\u662f\u7684\u6ce8\u91ca\uff0c\u53ef\u4ee5\u662f\u5bf9\u5f53\u524d\u7248\u672c\u7684\u63cf\u8ff0 (base) uichuan@wangyichuansMBP learn_git % git commit -m \"v1\" [master (root-commit) 08e6f5f] v1 1 file changed, 2 insertions(+) create mode 100644 index.txt \u603b\u7ed3 1.5 \u67e5\u770b\u63d0\u4ea4\u8bb0\u5f55 git log (base) uichuan@wangyichuansMBP learn_git % git log commit a7654edb461c503d777b6db0297c8bf9061731e6 (HEAD -> master) Author: uichuan <uichuan_47@163.com> Date: Sun Sep 4 18:17:42 2022 +0800 v2 commit 08e6f5f3d62c92692718554251cc53519c00d939 Author: uichuan <uichuan_47@163.com> Date: Sun Sep 4 18:15:38 2022 +0800 v1 1.6 \u56de\u6eda git reset --hard version_id (base) uichuan@wangyichuansMBP learn_git % git reset --hard a7654edb461c503d777b6db0297c8bf9061731e6 HEAD is now at a7654ed v2 1.7 git reflog \u67e5\u770b\u5305\u62ec\u56de\u6eda\u4e4b\u524d\u7684\u63d0\u4ea4\u8bb0\u5f55 (base) uichuan@wangyichuansMBP learn_git % git reflog a7654ed (HEAD -> master) HEAD@{0}: reset: moving to a7654edb461c503d777b6db0297c8bf9061731e6 12a8a0c HEAD@{1}: commit: \u65b0\u589e\u7ea6\u996d\u529f\u80fd a7654ed (HEAD -> master) HEAD@{2}: commit: v2 08e6f5f HEAD@{3}: commit (initial): v1 (base) uichuan@wangyichuansMBP learn_git % 1.8 git checkout \u5df2\u7ecf\u4fee\u6539\u7684\u6587\u4ef6\uff0c\u4f46\u662f\u5c1a\u672aadd\u5230\u6682\u5b58\u533a\uff0c\u5e0c\u671b\u53d6\u6d88\u5bf9\u6587\u4ef6\u7684\u4fee\u6539 git checkout -- \u6587\u4ef6\u540d 1.9 git reset HEAD \u9488\u5bf9\u5df2\u7ecf\u63d0\u4ea4\u5230\u6682\u5b58\u533a\u7684\u7248\u672c \u901a\u8fc7 git reset HEAD \u6587\u4ef6\u540d \u8fd4\u56de\u5230\u5de5\u4f5c\u533a\u7684 \u65b0\u6587\u4ef6/\u6587\u4ef6\u53d8\u52a8 \u72b6\u6001 2.\u5206\u652f \u80cc\u666f \u5982\u679c\u751f\u6210\u7684\u7b2c\u4e8c\u4e2a\u7248\u672c\u76f8\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u7248\u672c\u53d8\u5316\u4e0d\u5927 \u4f8b\u5982\uff1a\u7b2c\u4e8c\u4e2a\u7248\u672c\u5728\u7b2c\u4e00\u4e2a\u7248\u672c\u7684\u57fa\u7840\u4e0a\u65b0\u589e\u4e8610\u4e2a\u6587\u4ef6 \u90a3\u4e48\u5728\u751f\u6210\u7684\u7b2c\u4e8c\u4e2a\u7248\u672c\u4e2d\uff0c\u53ea\u4f1a\u5b58\u50a8\u6709\u53d8\u5316\u7684\u90e8\u5206 \u5176\u4f59\u90e8\u5206\u901a\u8fc7\u4e00\u4e2a\u6307\u9488\u6307\u5411\u4e4b\u524d\u7684\u7248\u672c 2.1 \u751f\u6210\u65b0\u7684\u5206\u652f \u4f8b\u5982\uff1a\u751f\u6210\u65b0\u7684\u5206\u652fdev git branch dev (base) uichuan@wangyichuansMBP learn_git % git branch dev * master (base) uichuan@wangyichuansMBP learn_git % \u5207\u6362\u5230dev\u5206\u652f (base) uichuan@wangyichuansMBP learn_git % git checkout dev Switched to branch 'dev' \u5728dev\u5206\u652f\u5199\u4ee3\u7801\uff0c\u4e0d\u4f1a\u5f71\u54cdmaster\u5206\u652f dev\u5206\u652f\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u73af\u5883 (base) uichuan@wangyichuansMBP learn_git % git status On branch dev Changes not staged for commit: (use \"git add <file>...\" to update what will be committed) (use \"git restore <file>...\" to discard changes in working directory) modified: index.txt no changes added to commit (use \"git add\" and/or \"git commit -a\") On branch dev \u8fdb\u884c\u63d0\u4ea4 (base) uichuan@wangyichuansMBP learn_git % git add . (base) uichuan@wangyichuansMBP learn_git % git commit -m \"C4\" [dev ea90a75] C4 1 file changed, 2 insertions(+), 1 deletion(-) \u67e5\u770b\u65b0\u5206\u652f\u7684\u63d0\u4ea4\u8bb0\u5f55 (base) uichuan@wangyichuansMBP learn_git % git log commit ea90a751d5d68640e7495c0c2f9ca0a8b1d062ac (HEAD -> dev) Author: uichuan <uichuan_47@163.com> Date: Sun Sep 4 23:32:58 2022 +0800 C4 commit 12a8a0ce41b4f9b5ae9112e861f57202d74d2a77 (master) Author: uichuan <uichuan_47@163.com> Date: Sun Sep 4 18:52:14 2022 +0800 \u65b0\u589e\u7ea6\u996d\u529f\u80fd commit a7654edb461c503d777b6db0297c8bf9061731e6 Author: uichuan <uichuan_47@163.com> Date: Sun Sep 4 18:17:42 2022 +0800 v2 commit 08e6f5f3d62c92692718554251cc53519c00d939 Author: uichuan <uichuan_47@163.com> Date: Sun Sep 4 18:15:38 2022 +0800 v1 2.2 \u5207\u6362\u56de\u539f\u6765\u5206\u652f git checkout master \u5207\u6362\u56de\u539f\u6765\u5206\u652f\u540e\uff0c\u5728dev\u5206\u652f\u4e2d\u505a\u7684\u4fee\u6539\u5728master\u5206\u652f\u4e2d\u4e0d\u4f1a\u51fa\u73b0 \u5206\u652f\u548c\u5206\u652f\u4e4b\u95f4\u505a\u4e86\u4ee3\u7801\u7684\u9694\u79bb 2.3 \u5728\u53e6\u4e00\u4e2a\u5206\u652f\u7d27\u6025\u4fee\u590dbug \u65b0\u5efa\u5206\u652fbug\uff0c\u7528\u4e8e\u4fee\u590d git branch bug (base) uichuan@wangyichuansMBP learn_git % git branch bug (base) uichuan@wangyichuansMBP learn_git % git branch bug dev * master (base) uichuan@wangyichuansMBP learn_git % 2.4 \u94fe\u63a5\u4fee\u590d\u5b8c\u7684bug\u5206\u652f\u5230master git merge bug (base) uichuan@wangyichuansMBP learn_git % git merge bug Updating 12a8a0c..c17091e Fast-forward index.txt | 2 +- 1 file changed, 1 insertion(+), 1 deletion(-) (base) uichuan@wangyichuansMBP learn_git % git log commit c17091e02171ae5549e0047754145c9b181daeab (HEAD -> master, bug) Author: uichuan <uichuan_47@163.com> Date: Sun Sep 4 23:39:57 2022 +0800 fix bug \u94fe\u63a5\u5230master\u4e4b\u540e\uff0cbug\u5206\u652f\u5931\u53bb\u4f5c\u7528 2.5\u5220\u9664bug\u5206\u652f git branch -d bug (base) uichuan@wangyichuansMBP learn_git % git branch -d bug Deleted branch bug (was c17091e). (base) uichuan@wangyichuansMBP learn_git % git branch dev * master \u5220\u9664\u4e4b\u540ebug\u5206\u652f\u6d88\u5931 2.6 \u51fa\u73b0\u51b2\u7a81\u7684\u6807\u5fd7 (base) uichuan@wangyichuansMBP learn_git % git merge dev Auto-merging index.txt CONFLICT (content): Merge conflict in index.txt Automatic merge failed; fix conflicts and then commit the result. 2.7 \u547d\u4ee4\u603b\u7ed3 \u67e5\u770b\u5206\u652f git branch \u521b\u5efa\u5206\u652f git branch \u5206\u652f\u540d\u79f0 \u5207\u6362\u5206\u652f git checkout \u5206\u652f\u540d\u79f0 \u5206\u652f\u5408\u5e76 git merge \u8981\u5408\u5e76\u7684\u5206\u652f \u5728\u5206\u652f\u5408\u5e76\u65f6\uff0c\u5f53\u524d\u9700\u8981\u5904\u5728master\u5206\u652f \u5220\u9664\u5206\u652f git branch -d \u5206\u652f\u540d\u79f0 \u7c7b\u4f3c\u4e8ebug\u4fee\u590d\u7684\u5206\u652f\uff0c\u5728merge\u5230master\u5206\u652f\u4e4b\u540e \u53ef\u4ee5\u9009\u62e9\u5220\u9664\u6539\u5206\u652f 2.8 \u5de5\u4f5c\u6d41 \u9ed8\u8ba4\u5206\u652fmaster \uff08\u4fdd\u7559\u6b63\u5f0f\u7248\u672c\uff0c\u7a33\u5b9a\uff09 \u5728dev\uff08develop\uff09\u5206\u652f\u4e0a\u8fdb\u884c\u5f00\u53d1","title":"1.\u5173\u4e8eGit"},{"location":"Dev_documents/about_git/git/#1git","text":"\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u8f6f\u4ef6","title":"1.\u5173\u4e8eGit"},{"location":"Dev_documents/about_git/git/#1","text":"\u4e2a\u4eba\u4fe1\u606f\u914d\u7f6e git config --global user.email \"you@example.com\" git config --global user.name \"Your Name\"","title":"1.\u524d\u620f"},{"location":"Dev_documents/about_git/git/#11","text":"cd folder git init \u6267\u884c\u4e24\u6b65\u547d\u4ee4\u540e\uff0cgit\u4f1a\u5728folder\u6587\u4ef6\u5939\u4e2d\u521b\u5efa\u4e00\u4e2a\u9690\u85cf\u6587\u4ef6\u5939 .git (base) uichuan@wangyichuansMBP learn_git % git init hint: Using 'master' as the name for the initial branch. This default branch name hint: is subject to change. To configure the initial branch name to use in all hint: of your new repositories, which will suppress this warning, call: hint: hint: git config --global init.defaultBranch <name> hint: hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and hint: 'development'. The just-created branch can be renamed via this command: hint: hint: git branch -m <name>","title":"1.1 \u8fdb\u5165\u6587\u4ef6\u5939\u521d\u59cb\u5316"},{"location":"Dev_documents/about_git/git/#12","text":"git status (base) uichuan@wangyichuansMBP learn_git % git status On branch master No commits yet Untracked files: (use \"git add <file>...\" to include in what will be committed) index.txt nothing added to commit but untracked files present (use \"git add\" to track)","title":"1.2 \u6587\u4ef6\u7684\u72b6\u6001\u68c0\u67e5"},{"location":"Dev_documents/about_git/git/#13-git","text":"git add . . \u4ee3\u8868\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u7684\u6240\u6709\u6587\u4ef6 (base) uichuan@wangyichuansMBP learn_git % git add . (base) uichuan@wangyichuansMBP learn_git % git status On branch master No commits yet Changes to be committed: (use \"git rm --cached <file>...\" to unstage) new file: index.txt","title":"1.3 \u5c06\u6587\u4ef6\u7531git\u7ba1\u7406"},{"location":"Dev_documents/about_git/git/#14","text":"git commmit -m \"v1\" \u5176\u4e2d -m \u540e\u8ddf\u968f\u7684\u5b57\u7b26\u4e32\u4ee3\u8868\u63d0\u4ea4\u662f\u7684\u6ce8\u91ca\uff0c\u53ef\u4ee5\u662f\u5bf9\u5f53\u524d\u7248\u672c\u7684\u63cf\u8ff0 (base) uichuan@wangyichuansMBP learn_git % git commit -m \"v1\" [master (root-commit) 08e6f5f] v1 1 file changed, 2 insertions(+) create mode 100644 index.txt","title":"1.4 \u63d0\u4ea4"},{"location":"Dev_documents/about_git/git/#_1","text":"","title":"\u603b\u7ed3"},{"location":"Dev_documents/about_git/git/#15","text":"git log (base) uichuan@wangyichuansMBP learn_git % git log commit a7654edb461c503d777b6db0297c8bf9061731e6 (HEAD -> master) Author: uichuan <uichuan_47@163.com> Date: Sun Sep 4 18:17:42 2022 +0800 v2 commit 08e6f5f3d62c92692718554251cc53519c00d939 Author: uichuan <uichuan_47@163.com> Date: Sun Sep 4 18:15:38 2022 +0800 v1","title":"1.5 \u67e5\u770b\u63d0\u4ea4\u8bb0\u5f55"},{"location":"Dev_documents/about_git/git/#16","text":"git reset --hard version_id (base) uichuan@wangyichuansMBP learn_git % git reset --hard a7654edb461c503d777b6db0297c8bf9061731e6 HEAD is now at a7654ed v2","title":"1.6 \u56de\u6eda"},{"location":"Dev_documents/about_git/git/#17-git-reflog","text":"\u67e5\u770b\u5305\u62ec\u56de\u6eda\u4e4b\u524d\u7684\u63d0\u4ea4\u8bb0\u5f55 (base) uichuan@wangyichuansMBP learn_git % git reflog a7654ed (HEAD -> master) HEAD@{0}: reset: moving to a7654edb461c503d777b6db0297c8bf9061731e6 12a8a0c HEAD@{1}: commit: \u65b0\u589e\u7ea6\u996d\u529f\u80fd a7654ed (HEAD -> master) HEAD@{2}: commit: v2 08e6f5f HEAD@{3}: commit (initial): v1 (base) uichuan@wangyichuansMBP learn_git %","title":"1.7 git reflog"},{"location":"Dev_documents/about_git/git/#18-git-checkout","text":"\u5df2\u7ecf\u4fee\u6539\u7684\u6587\u4ef6\uff0c\u4f46\u662f\u5c1a\u672aadd\u5230\u6682\u5b58\u533a\uff0c\u5e0c\u671b\u53d6\u6d88\u5bf9\u6587\u4ef6\u7684\u4fee\u6539 git checkout -- \u6587\u4ef6\u540d","title":"1.8 git checkout"},{"location":"Dev_documents/about_git/git/#19-git-reset-head","text":"\u9488\u5bf9\u5df2\u7ecf\u63d0\u4ea4\u5230\u6682\u5b58\u533a\u7684\u7248\u672c \u901a\u8fc7 git reset HEAD \u6587\u4ef6\u540d \u8fd4\u56de\u5230\u5de5\u4f5c\u533a\u7684 \u65b0\u6587\u4ef6/\u6587\u4ef6\u53d8\u52a8 \u72b6\u6001","title":"1.9 git reset HEAD"},{"location":"Dev_documents/about_git/git/#2","text":"\u80cc\u666f \u5982\u679c\u751f\u6210\u7684\u7b2c\u4e8c\u4e2a\u7248\u672c\u76f8\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u7248\u672c\u53d8\u5316\u4e0d\u5927 \u4f8b\u5982\uff1a\u7b2c\u4e8c\u4e2a\u7248\u672c\u5728\u7b2c\u4e00\u4e2a\u7248\u672c\u7684\u57fa\u7840\u4e0a\u65b0\u589e\u4e8610\u4e2a\u6587\u4ef6 \u90a3\u4e48\u5728\u751f\u6210\u7684\u7b2c\u4e8c\u4e2a\u7248\u672c\u4e2d\uff0c\u53ea\u4f1a\u5b58\u50a8\u6709\u53d8\u5316\u7684\u90e8\u5206 \u5176\u4f59\u90e8\u5206\u901a\u8fc7\u4e00\u4e2a\u6307\u9488\u6307\u5411\u4e4b\u524d\u7684\u7248\u672c","title":"2.\u5206\u652f"},{"location":"Dev_documents/about_git/git/#21","text":"\u4f8b\u5982\uff1a\u751f\u6210\u65b0\u7684\u5206\u652fdev git branch dev (base) uichuan@wangyichuansMBP learn_git % git branch dev * master (base) uichuan@wangyichuansMBP learn_git % \u5207\u6362\u5230dev\u5206\u652f (base) uichuan@wangyichuansMBP learn_git % git checkout dev Switched to branch 'dev' \u5728dev\u5206\u652f\u5199\u4ee3\u7801\uff0c\u4e0d\u4f1a\u5f71\u54cdmaster\u5206\u652f dev\u5206\u652f\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u73af\u5883 (base) uichuan@wangyichuansMBP learn_git % git status On branch dev Changes not staged for commit: (use \"git add <file>...\" to update what will be committed) (use \"git restore <file>...\" to discard changes in working directory) modified: index.txt no changes added to commit (use \"git add\" and/or \"git commit -a\") On branch dev \u8fdb\u884c\u63d0\u4ea4 (base) uichuan@wangyichuansMBP learn_git % git add . (base) uichuan@wangyichuansMBP learn_git % git commit -m \"C4\" [dev ea90a75] C4 1 file changed, 2 insertions(+), 1 deletion(-) \u67e5\u770b\u65b0\u5206\u652f\u7684\u63d0\u4ea4\u8bb0\u5f55 (base) uichuan@wangyichuansMBP learn_git % git log commit ea90a751d5d68640e7495c0c2f9ca0a8b1d062ac (HEAD -> dev) Author: uichuan <uichuan_47@163.com> Date: Sun Sep 4 23:32:58 2022 +0800 C4 commit 12a8a0ce41b4f9b5ae9112e861f57202d74d2a77 (master) Author: uichuan <uichuan_47@163.com> Date: Sun Sep 4 18:52:14 2022 +0800 \u65b0\u589e\u7ea6\u996d\u529f\u80fd commit a7654edb461c503d777b6db0297c8bf9061731e6 Author: uichuan <uichuan_47@163.com> Date: Sun Sep 4 18:17:42 2022 +0800 v2 commit 08e6f5f3d62c92692718554251cc53519c00d939 Author: uichuan <uichuan_47@163.com> Date: Sun Sep 4 18:15:38 2022 +0800 v1","title":"2.1 \u751f\u6210\u65b0\u7684\u5206\u652f"},{"location":"Dev_documents/about_git/git/#22","text":"git checkout master \u5207\u6362\u56de\u539f\u6765\u5206\u652f\u540e\uff0c\u5728dev\u5206\u652f\u4e2d\u505a\u7684\u4fee\u6539\u5728master\u5206\u652f\u4e2d\u4e0d\u4f1a\u51fa\u73b0 \u5206\u652f\u548c\u5206\u652f\u4e4b\u95f4\u505a\u4e86\u4ee3\u7801\u7684\u9694\u79bb","title":"2.2 \u5207\u6362\u56de\u539f\u6765\u5206\u652f"},{"location":"Dev_documents/about_git/git/#23-bug","text":"\u65b0\u5efa\u5206\u652fbug\uff0c\u7528\u4e8e\u4fee\u590d git branch bug (base) uichuan@wangyichuansMBP learn_git % git branch bug (base) uichuan@wangyichuansMBP learn_git % git branch bug dev * master (base) uichuan@wangyichuansMBP learn_git %","title":"2.3 \u5728\u53e6\u4e00\u4e2a\u5206\u652f\u7d27\u6025\u4fee\u590dbug"},{"location":"Dev_documents/about_git/git/#24-bugmaster","text":"git merge bug (base) uichuan@wangyichuansMBP learn_git % git merge bug Updating 12a8a0c..c17091e Fast-forward index.txt | 2 +- 1 file changed, 1 insertion(+), 1 deletion(-) (base) uichuan@wangyichuansMBP learn_git % git log commit c17091e02171ae5549e0047754145c9b181daeab (HEAD -> master, bug) Author: uichuan <uichuan_47@163.com> Date: Sun Sep 4 23:39:57 2022 +0800 fix bug \u94fe\u63a5\u5230master\u4e4b\u540e\uff0cbug\u5206\u652f\u5931\u53bb\u4f5c\u7528","title":"2.4 \u94fe\u63a5\u4fee\u590d\u5b8c\u7684bug\u5206\u652f\u5230master"},{"location":"Dev_documents/about_git/git/#25bug","text":"git branch -d bug (base) uichuan@wangyichuansMBP learn_git % git branch -d bug Deleted branch bug (was c17091e). (base) uichuan@wangyichuansMBP learn_git % git branch dev * master \u5220\u9664\u4e4b\u540ebug\u5206\u652f\u6d88\u5931","title":"2.5\u5220\u9664bug\u5206\u652f"},{"location":"Dev_documents/about_git/git/#26","text":"(base) uichuan@wangyichuansMBP learn_git % git merge dev Auto-merging index.txt CONFLICT (content): Merge conflict in index.txt Automatic merge failed; fix conflicts and then commit the result.","title":"2.6 \u51fa\u73b0\u51b2\u7a81\u7684\u6807\u5fd7"},{"location":"Dev_documents/about_git/git/#27","text":"\u67e5\u770b\u5206\u652f git branch \u521b\u5efa\u5206\u652f git branch \u5206\u652f\u540d\u79f0 \u5207\u6362\u5206\u652f git checkout \u5206\u652f\u540d\u79f0 \u5206\u652f\u5408\u5e76 git merge \u8981\u5408\u5e76\u7684\u5206\u652f \u5728\u5206\u652f\u5408\u5e76\u65f6\uff0c\u5f53\u524d\u9700\u8981\u5904\u5728master\u5206\u652f \u5220\u9664\u5206\u652f git branch -d \u5206\u652f\u540d\u79f0 \u7c7b\u4f3c\u4e8ebug\u4fee\u590d\u7684\u5206\u652f\uff0c\u5728merge\u5230master\u5206\u652f\u4e4b\u540e \u53ef\u4ee5\u9009\u62e9\u5220\u9664\u6539\u5206\u652f","title":"2.7 \u547d\u4ee4\u603b\u7ed3"},{"location":"Dev_documents/about_git/git/#28","text":"\u9ed8\u8ba4\u5206\u652fmaster \uff08\u4fdd\u7559\u6b63\u5f0f\u7248\u672c\uff0c\u7a33\u5b9a\uff09 \u5728dev\uff08develop\uff09\u5206\u652f\u4e0a\u8fdb\u884c\u5f00\u53d1","title":"2.8 \u5de5\u4f5c\u6d41"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/","text":"6.CSS \u57fa\u7840\u8bed\u6cd5 CSS \u89c4\u5219\u96c6\uff08rule-set\uff09\u7531\u9009\u62e9\u5668\u548c\u58f0\u660e\u5757\u7ec4\u6210\uff1a \u9009\u62e9\u5668\u6307\u5411\u60a8\u9700\u8981\u8bbe\u7f6e\u6837\u5f0f\u7684 HTML \u5143\u7d20\u3002 \u58f0\u660e\u5757\u5305\u542b\u4e00\u6761\u6216\u591a\u6761\u7528\u5206\u53f7\u5206\u9694\u7684\u58f0\u660e\u3002 \u6bcf\u6761\u58f0\u660e\u90fd\u5305\u542b\u4e00\u4e2a CSS \u5c5e\u6027\u540d\u79f0\u548c\u4e00\u4e2a\u503c\uff0c\u4ee5\u5192\u53f7\u5206\u9694\u3002 \u591a\u6761 CSS \u58f0\u660e\u7528\u5206\u53f7\u5206\u9694\uff0c\u58f0\u660e\u5757\u7528\u82b1\u62ec\u53f7\u62ec\u8d77\u6765\u3002 1.1 CSS \u9009\u62e9\u5668 \u5143\u7d20\u9009\u62e9\u5668 \u5143\u7d20\u9009\u62e9\u5668\u6839\u636e\u5143\u7d20\u540d\u79f0\u6765\u9009\u62e9 HTML \u5143\u7d20\u3002 \u5728\u8fd9\u91cc\uff0c\u9875\u9762\u4e0a\u7684\u6240\u6709p\u5143\u7d20\u90fd\u5c06\u5c45\u4e2d\u5bf9\u9f50\uff0c\u5e76\u5e26\u6709\u7ea2\u8272\u6587\u672c\u989c\u8272\uff1a css p { text-align: center; color: red; } id\u9009\u62e9\u5668 \u5143\u7d20\u7684 id \u5728\u9875\u9762\u4e2d\u662f\u552f\u4e00\u7684\uff0c\u56e0\u6b64 id \u9009\u62e9\u5668\u7528\u4e8e\u9009\u62e9\u4e00\u4e2a\u552f\u4e00\u7684\u5143\u7d20\uff01 \u8981\u9009\u62e9\u5177\u6709\u7279\u5b9a id \u7684\u5143\u7d20\uff0c \u8bf7\u5199\u4e00\u4e2a\u4e95\u53f7\uff08\uff03\uff09 \uff0c\u540e\u8ddf\u8be5\u5143\u7d20\u7684 id\u3002 \u8fd9\u6761 CSS \u89c4\u5219\u5c06\u5e94\u7528\u4e8e id=\"para1\" \u7684 HTML \u5143\u7d20\uff1a \u7c7b\u9009\u62e9\u5668 \u7c7b\u9009\u62e9\u5668\u9009\u62e9\u6709\u7279\u5b9a class \u5c5e\u6027\u7684 HTML \u5143\u7d20\u3002 \u5982\u9700\u9009\u62e9\u62e5\u6709\u7279\u5b9a class \u7684\u5143\u7d20\uff0c\u8bf7 \u5199\u4e00\u4e2a\u53e5\u70b9\uff08.\uff09\u5b57\u7b26 \uff0c\u540e\u9762\u8ddf\u7c7b\u540d\u3002 \u5728\u6b64\u4f8b\u4e2d\uff0c\u6240\u6709\u5e26\u6709 class=\"center\" \u7684 HTML \u5143\u7d20\u5c06\u4e3a\u7ea2\u8272\u4e14\u5c45\u4e2d\u5bf9\u9f50\uff1a css .center { text-align: center; color: red; } \u901a\u7528\u9009\u62e9\u5668 \u901a\u7528\u9009\u62e9\u5668\uff08*\uff09\u9009\u62e9\u9875\u9762\u4e0a\u7684\u6240\u6709\u7684 HTML \u5143\u7d20\u3002 \u4e0b\u9762\u7684 CSS \u89c4\u5219\u4f1a\u5f71\u54cd\u9875\u9762\u4e0a\u7684\u6bcf\u4e2a HTML \u5143\u7d20\uff1a css * { text-align: center; color: blue; } \u5206\u7ec4\u9009\u62e9\u5668 \u9009\u53d6\u6240\u6709\u5177\u6709\u76f8\u540c\u6837\u5f0f\u5b9a\u4e49\u7684 HTML \u5143\u7d20\u3002 ```css h1 { text-align: center; color: red; } h2 { text-align: center; color: red; } p { text-align: center; color: red; } ``` 1.CSS \u57fa\u7840\u8bed\u6cd5 CSS \u89c4\u5219\u96c6\uff08rule-set\uff09\u7531\u9009\u62e9\u5668\u548c\u58f0\u660e\u5757\u7ec4\u6210\uff1a \u9009\u62e9\u5668\u6307\u5411\u60a8\u9700\u8981\u8bbe\u7f6e\u6837\u5f0f\u7684 HTML \u5143\u7d20\u3002 \u58f0\u660e\u5757\u5305\u542b\u4e00\u6761\u6216\u591a\u6761\u7528\u5206\u53f7\u5206\u9694\u7684\u58f0\u660e\u3002 \u6bcf\u6761\u58f0\u660e\u90fd\u5305\u542b\u4e00\u4e2a CSS \u5c5e\u6027\u540d\u79f0\u548c\u4e00\u4e2a\u503c\uff0c\u4ee5\u5192\u53f7\u5206\u9694\u3002 \u591a\u6761 CSS \u58f0\u660e\u7528\u5206\u53f7\u5206\u9694\uff0c\u58f0\u660e\u5757\u7528\u82b1\u62ec\u53f7\u62ec\u8d77\u6765\u3002 1.1 CSS \u9009\u62e9\u5668 \u5143\u7d20\u9009\u62e9\u5668 \u5143\u7d20\u9009\u62e9\u5668\u6839\u636e\u5143\u7d20\u540d\u79f0\u6765\u9009\u62e9 HTML \u5143\u7d20\u3002 \u5728\u8fd9\u91cc\uff0c\u9875\u9762\u4e0a\u7684\u6240\u6709p\u5143\u7d20\u90fd\u5c06\u5c45\u4e2d\u5bf9\u9f50\uff0c\u5e76\u5e26\u6709\u7ea2\u8272\u6587\u672c\u989c\u8272\uff1a css p { text-align: center; color: red; } id\u9009\u62e9\u5668 \u5143\u7d20\u7684 id \u5728\u9875\u9762\u4e2d\u662f\u552f\u4e00\u7684\uff0c\u56e0\u6b64 id \u9009\u62e9\u5668\u7528\u4e8e\u9009\u62e9\u4e00\u4e2a\u552f\u4e00\u7684\u5143\u7d20\uff01 \u8981\u9009\u62e9\u5177\u6709\u7279\u5b9a id \u7684\u5143\u7d20\uff0c \u8bf7\u5199\u4e00\u4e2a\u4e95\u53f7\uff08\uff03\uff09 \uff0c\u540e\u8ddf\u8be5\u5143\u7d20\u7684 id\u3002 \u8fd9\u6761 CSS \u89c4\u5219\u5c06\u5e94\u7528\u4e8e id=\"para1\" \u7684 HTML \u5143\u7d20\uff1a \u7c7b\u9009\u62e9\u5668 \u7c7b\u9009\u62e9\u5668\u9009\u62e9\u6709\u7279\u5b9a class \u5c5e\u6027\u7684 HTML \u5143\u7d20\u3002 \u5982\u9700\u9009\u62e9\u62e5\u6709\u7279\u5b9a class \u7684\u5143\u7d20\uff0c\u8bf7 \u5199\u4e00\u4e2a\u53e5\u70b9\uff08.\uff09\u5b57\u7b26 \uff0c\u540e\u9762\u8ddf\u7c7b\u540d\u3002 \u5728\u6b64\u4f8b\u4e2d\uff0c\u6240\u6709\u5e26\u6709 class=\"center\" \u7684 HTML \u5143\u7d20\u5c06\u4e3a\u7ea2\u8272\u4e14\u5c45\u4e2d\u5bf9\u9f50\uff1a css .center { text-align: center; color: red; } \u901a\u7528\u9009\u62e9\u5668 \u901a\u7528\u9009\u62e9\u5668\uff08*\uff09\u9009\u62e9\u9875\u9762\u4e0a\u7684\u6240\u6709\u7684 HTML \u5143\u7d20\u3002 \u4e0b\u9762\u7684 CSS \u89c4\u5219\u4f1a\u5f71\u54cd\u9875\u9762\u4e0a\u7684\u6bcf\u4e2a HTML \u5143\u7d20\uff1a css * { text-align: center; color: blue; } \u5206\u7ec4\u9009\u62e9\u5668 \u9009\u53d6\u6240\u6709\u5177\u6709\u76f8\u540c\u6837\u5f0f\u5b9a\u4e49\u7684 HTML \u5143\u7d20\u3002 ```css h1 { text-align: center; color: red; } h2 { text-align: center; color: red; } p { text-align: center; color: red; } ``` 1.2 css\u7684\u5f15\u5165 \u5916\u90e8CSS \u5185\u90e8CSS \u884c\u5185CSS \u5916\u90e8CSS <link rel=\"stylesheet\" type=\"text/css\" href=\"mystyle.css\"> <!DOCTYPE html> <html> <head> <link rel=\"stylesheet\" type=\"text/css\" href=\"mystyle.css\"> </head> <body> <h1>This is a heading</h1> <p>This is a paragraph.</p> </body> </html> \u5185\u90e8CSS \u5185\u90e8\u6837\u5f0f\u5728html\u9875\u9762\u4e2dhead\u90e8\u5206\u5185\u7684style\u5143\u7d20\u5185\u8fdb\u884c\u5b9a\u4e49 <!DOCTYPE html> <html> <head> <style> body { background-color: linen; } h1 { color: maroon; margin-left: 40px; } </style> </head> <body> <h1>This is a heading</h1> <p>This is a paragraph.</p> </body> </html> \u884c\u5185CSS \u4f7f\u7528\u884c\u5185\u6837\u5f0f\uff0c\u4e3a\u5355\u4e2a\u5143\u7d20\u5e94\u7528\u552f\u4e00\u6837\u5f0f \u5c06style\u5c5e\u6027\u6dfb\u52a0\u5230\u76f8\u5173\u5143\u7d20 <!DOCTYPE html> <html> <body> <h1 style=\"color:blue;text-align:center;\">This is a heading</h1> <p style=\"color:red;\">This is a paragraph.</p> </body> </html> 1.3 \u989c\u8272 CSS\u4e2d\u53ef\u4ee5\u4f7f\u7528\u989c\u8272\u540d\u6765\u5236\u5b9a\u989c\u8272 \u80cc\u666f\u8272 background-color <h1 style=\"background-color:DodgerBlue;\">China</h1> <p style=\"background-color:Tomato;\">China is a great country!</p> \u6587\u672c\u989c\u8272 html <h1 style=\"color:Tomato;\">China</h1> <p style=\"color:DodgerBlue;\">China is a great country!</p> <p style=\"color:MediumSeaGreen;\">China, officially the People's Republic of China...</p> \u8fb9\u6846\u989c\u8272 <h1 style=\"border:2px solid Tomato;\">Hello World</h1> <h1 style=\"border:2px solid DodgerBlue;\">Hello World</h1> <h1 style=\"border:2px solid Violet;\">Hello World</h1> 1.4 \u80cc\u666f background-color background-image background-repeat background-attachment background-position 1.4.1 background-color \u8be5\u5c5e\u6027\u6307\u5b9a\u5143\u7d20\u7684\u80cc\u666f\u8272 body { background-color: lightblue; } opacity\u5c5e\u6027\uff0c\u8c03\u6574\u4e0d\u900f\u660e\u5ea6 css div { background-color: green; opacity: 0.3; } 1.4.2 background-image \u8be5\u5c5e\u6027\u6307\u5b9a\u5143\u7d20\u80cc\u666f\u7684\u56fe\u50cf body { background-image: url(\"paper.gif\"); } \u4f7f\u7528\u80cc\u666f\u56fe\u50cf\u65f6\uff0c\u8bf7\u4f7f\u7528\u4e0d\u4f1a\u5e72\u6270\u6587\u672c\u7684\u56fe\u50cf\u3002 \u8fd8\u53ef\u4ee5\u4e3a\u7279\u5b9a\u5143\u7d20\u8bbe\u7f6e\u80cc\u666f\u56fe\u50cf\uff0c\u4f8b\u5982 p \u5143\u7d20\uff1a 1.4.3background-repeat \u8be5\u5c5e\u6027\u5728\u6c34\u5e73\u548c\u5782\u76f4\u65b9\u5411\u4e0a\u90fd\u91cd\u590d\u56fe\u50cf \u5206\u522b\u5728x\uff0cy\u65b9\u5411\u4e0a\u91cd\u590d body { background-image: url(\"gradient_bg.png\"); background-repeat: repeat-x; } body { background-image: url(\"gradient_bg.png\"); } 1.4.4background-position \u8bbe\u7f6e\u56fe\u50cf\u7684\u4f4d\u7f6e\u5c5e\u6027 body { background-image: url(\"tree.png\"); background-repeat: no-repeat; background-position: right top; } 1.4.5 background-attachment \u5c5e\u6027\u6307\u5b9a\u80cc\u666f\u56fe\u50cf\u662f\u5e94\u8be5\u6eda\u52a8\u8fd8\u662f\u56fa\u5b9a\u7684\uff08\u4e0d\u4f1a\u968f\u9875\u9762\u7684\u5176\u4f59\u90e8\u5206\u4e00\u8d77\u6eda\u52a8\uff09 body { background-image: url(\"tree.png\"); background-repeat: no-repeat; background-position: right top; background-attachment: fixed; } \u6307\u5b9a\u80cc\u666f\u56fe\u50cf\u5e94\u968f\u9875\u9762\u7684\u5176\u4f59\u90e8\u5206\u4e00\u8d77\u6eda\u52a8\uff1a body { background-image: url(\"tree.png\"); background-repeat: no-repeat; background-position: right top; background-attachment: scroll; } 1.5 \u8fb9\u6846 \u8fb9\u6846\u5c5e\u6027\u5141\u8bb8\u6307\u5b9a \u6837\u5f0f \u5bbd\u5ea6 \u989c\u8272 1.5.1 \u8fb9\u6846\u6837\u5f0f dotted - \u5b9a\u4e49\u70b9\u7ebf\u8fb9\u6846 dashed \u865a\u7ebf\u8fb9\u6846 solid \u5b9e\u7ebf double \u53cc\u8fb9\u6846 groove 3d\u8fb9\u6846 \u5761\u53e3 ridge 3d\u8fb9\u6846 \u810a\u7ebf inset 3d inset\u8fb9\u6846 outset 3d outset none \u65e0\u8fb9\u6846 hidden \u9690\u85cf\u8fb9\u6846 border-style \u5c5e\u6027\u53ef\u4ee5\u8bbe\u7f6e1-4\u4e2a\u503c\uff08\u7528\u4e8e\u4e0a\u4e0b\u5de6\u53f3\uff09 p.dotted {border-style: dotted;} p.dashed {border-style: dashed;} p.solid {border-style: solid;} p.double {border-style: double;} p.groove {border-style: groove;} p.ridge {border-style: ridge;} p.inset {border-style: inset;} p.outset {border-style: outset;} p.none {border-style: none;} p.hidden {border-style: hidden;} p.mix {border-style: dotted dashed solid double;} 1.5.2 \u8fb9\u6846\u5bbd\u5ea6 border-width \u5c5e\u6027\u6307\u5b9a\u56db\u4e2a\u8fb9\u6846\u7684\u5bbd\u5ea6 p.one { border-style: solid; border-width: 5px; } p.two { border-style: solid; border-width: medium; } p.three { border-style: dotted; border-width: 2px; } p.four { border-style: dotted; border-width: thick; } 1.5.3 \u8fb9\u6846\u989c\u8272 border-color \u5c5e\u6027\u7528\u4e8e\u8bbe\u7f6e\u56db\u4e2a\u8fb9\u6846\u7684\u989c\u8272 \u5982\u679c\u672a\u8bbe\u7f6e border-color \uff0c\u5b83\u5c06\u7ee7\u627f\u5143\u7d20\u7684\u989c\u8272 p.one { border-style: solid; border-color: red; } p.two { border-style: solid; border-color: green; } p.three { border-style: dotted; border-color: blue; } \u989c\u8272\u7684\u8bbe\u7f6e\u4e5f\u53ef\u4ee5\u7528\u4ee5\u4e0b\u6807\u51c6 HEX RGB HSL 1.5.4 \u5706\u89d2\u8fb9\u6846 border-dadius \u5c5e\u6027\u7528\u4e8e\u5411\u5143\u7d20\u6dfb\u52a0\u5706\u89d2\u8fb9\u6846 \u66f4\u591a \u8fb9\u6846\u5404\u8fb9 https://www.w3school.com.cn/css/css_border_sides.asp \u7b80\u5199\u8fb9\u6846\u5c5e\u6027 https://www.w3school.com.cn/css/css_border_shorthand.asp 1.6 \u5916\u8fb9\u8ddd margin \u5c5e\u6027\u7528\u6765\u5728\u4efb\u4f55\u5b9a\u4e49\u7684\u8fb9\u6846\u4e4b\u5916\uff0c\u4e3a\u5143\u7d20\u5468\u56f4\u521b\u9020\u7a7a\u95f4 \u7528 margin \u4e3a\u6bcf\u4e00\u4fa7\u6307\u5b9a\u5916\u8fb9\u8ddd\u7684\u5c5e\u6027 margin-top margin-right margin-bottom margin-left \u6240\u6709\u5916\u8fb9\u8ddd\u5c5e\u6027\u90fd\u53ef\u4ee5\u8bbe\u7f6e\u4ee5\u4e0b\u503c auto \u6d4f\u89c8\u5668\u6765\u81ea\u52a8\u8ba1\u7b97\u5916\u8fb9\u8ddd\uff0c\u5143\u7d20\u5728\u5176\u5bb9\u5668\u4e2d\u6c34\u5e73\u5c45\u4e2d length \u4ee5px\uff0cpt\uff0ccm\u7b49\u5355\u4f4d\u6307\u5b9a\u5916\u8fb9\u8ddd % \u5305\u542b\u5143\u7d20\u5bbd\u5ea6\u7684\u767e\u5206\u6bd4\u8ba1\u7b97\u7684\u5916\u8fb9\u8ddd inherit \u4ece\u7236\u5143\u7d20\u7ee7\u627f\u5916\u8fb9\u8ddd 1.7 \u5916\u8fb9\u8ddd\u5408\u5e76 \u5f53\u4e24\u4e2a\u5782\u76f4\u5916\u8fb9\u8ddd\u76f8\u9047\u65f6\uff0c\u4ed6\u4eec\u5c06\u5f62\u6210\u4e00\u4e2a\u5916\u8fb9\u8ddd\uff0c \u5408\u5e76\u540e\u7684\u5916\u8fb9\u8ddd\u7684\u9ad8\u5ea6\u7b49\u4e8e\u53d1\u751f\u4e24\u4e2a\u5408\u5e76\u7684\u5916\u8fb9\u8ddd\u7684\u9ad8\u5ea6\u4e2d\u7684\u8f83\u5927\u8005 \u5f53\u4e00\u4e2a\u5143\u7d20\u5305\u6db5\u5728\u53e6\u4e00\u4e2a\u5143\u7d20\u4e2d\u65f6\uff0c\u4ed6\u4eec\u7684\u4e0a\u6216\u4e0b\u5916\u8fb9\u8ddd\u4e5f\u4f1a\u53d1\u751f\u5408\u5e76 \u66f4\u591a\u5173\u4e8e\u8fb9\u8ddd\u5408\u5e76 1.8 \u5185\u8fb9\u8ddd padding \u5c5e\u6027\u7528\u4e8e\u5b9a\u4e49\u8fb9\u754c\u5185\u7684\u5143\u7d20\u5468\u56f4\u751f\u6210\u7a7a\u95f4 css\u62e5\u6709\u7528\u4e8e\u4e3a\u5143\u7d20\u7684\u6bcf\u4e00\u4fa7\u6307\u5b9a\u5185\u8fb9\u8ddd\u7684\u5c5e\u6027 padding-top padding-right padding-bottom padding-left \u7b80\u5199 div { padding: 25px 50px 75px 100px; } \u5185\u8fb9\u8ddd\u548c\u5143\u7d20\u5bbd\u5ea6 width \u5c5e\u6027\u6307\u5b9a\u5143\u7d20\u5185\u5bb9\u533a\u57df\u7684\u5bbd\u5ea6\uff0c\u5185\u5bb9\u533a\u57df\u662f\u5143\u7d20\uff08\u76d2\u6a21\u578b\uff09\u7684\u5185\u8fb9\u8ddd\u3001\u8fb9\u6846\u548c\u5916\u8fb9\u8ddd\u5185\u7684\u90e8\u5206\u3002 1.9 \u5bbd\u5ea6\u548c\u9ad8\u5ea6 height \u548c width \u5c5e\u6027\u7528\u6765\u8bbe\u7f6e\u5143\u7d20\u7684\u9ad8\u5ea6\u548c\u5bbd\u5ea6 height \u548c width \u5c5e\u6027\u4e0d\u5305\u62ec\u5185\u8fb9\u8ddd\u3001\u8fb9\u6846\u6216\u5916\u8fb9\u8ddd\u3002\u5b83\u8bbe\u7f6e\u7684\u662f\u5143\u7d20\u5185\u8fb9\u8ddd\u3001\u8fb9\u6846\u4ee5\u53ca\u5916\u8fb9\u8ddd\u5185\u7684\u533a\u57df\u7684\u9ad8\u5ea6\u6216\u5bbd\u5ea6\u3002 height \u548c width \u5c5e\u6027\u53ef\u4ee5\u8bbe\u7f6e\u4ee5\u4e0b\u7684\u503c auto length % initial inherit 1.10 \u6846\u6a21\u5c42 \u6240\u6709 HTML \u5143\u7d20\u90fd\u53ef\u4ee5\u89c6\u4e3a\u65b9\u6846\u3002\u5728 CSS \u4e2d\uff0c\u5728\u8c08\u8bba\u8bbe\u8ba1\u548c\u5e03\u5c40\u65f6\uff0c\u4f1a\u4f7f\u7528\u672f\u8bed\u201c\u76d2\u6a21\u578b\u201d\u6216\u201c\u6846\u6a21\u578b\u201d\u3002 CSS \u6846\u6a21\u578b\u5b9e\u8d28\u4e0a\u662f\u4e00\u4e2a\u5305\u56f4\u6bcf\u4e2a HTML \u5143\u7d20\u7684\u6846\u3002\u5b83\u5305\u62ec\uff1a\u5916\u8fb9\u8ddd\u3001\u8fb9\u6846\u3001\u5185\u8fb9\u8ddd\u4ee5\u53ca\u5b9e\u9645\u7684\u5185\u5bb9\u3002 \u5185\u5bb9 \u5185\u8fb9\u8ddd \u8fb9\u6846 \u5916\u8fb9\u8ddd 1.11 CSS\u8f6e\u5ed3 \u8f6e\u5ed3\u662f\u5728\u5143\u7d20\u5468\u56f4\u7ed8\u5236\u7684\u4e00\u6761\u7ebf\uff0c\u5728\u8fb9\u6846\u4e4b\u5916\uff0c\u4ee5\u51f8\u663e\u5143\u7d20\u3002 \u26a0\ufe0f\u6ce8\u610f\uff1a \u8f6e\u5ed3\u4e0e\u8fb9\u6846\u4e0d\u540c \u8f6e\u5ed3\u662f\u5728\u5143\u7d20\u8fb9\u6846\u4e4b\u5916\u7ed8\u5236\u7684\uff0c\u53ef\u80fd\u4e0e\u5176\u4ed6\u5185\u5bb9\u91cd\u53e0\uff0c \u8f6e\u5ed3\u4e5f\u4e0d\u662f\u5143\u7d20\u5c3a\u5bf8\u7684\u4e00\u90e8\u5206 \u5143\u7d20\u7684\u603b\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u4e0d\u53d7\u8f6e\u5ed3\u7ebf\u5bbd\u5ea6\u7684\u5f71\u54cd \u4f7f\u7528 outline-style \u5c5e\u6027\u6307\u5b9a\u8f6e\u5ed3\u7684\u6837\u5b50 1.12 CSS\u8f6e\u5ed3\u504f\u79fb outline-offset \u5c5e\u6027\u5728\u5143\u7d20\u7684\u8f6e\u5ed3\u4e0e\u8fb9\u6846\u4e4b\u95f4\u6dfb\u52a0\u7a7a\u95f4 \u5143\u7d20\u4ee5\u53ca\u8f6e\u5ed3\u4e4b\u95f4\u7684\u7a7a\u95f4\u662f\u900f\u660e\u7684 1.13 CSS\u6587\u672c \u6587\u672c\u989c\u8272 color \u5c5e\u6027\u7528\u4e8e\u8bbe\u7f6e\u6587\u672c\u7684\u989c\u8272 \u989c\u8272\u540d \u5341\u516d\u8fdb\u5236 RGB \u6587\u672c\u989c\u8272\u548c\u80cc\u666f\u8272 background-color \u548c color \u5c5e\u6027 1.14 CSS \u6587\u672c\u5bf9\u9f50 text-align \u5c5e\u6027\u7528\u4e8e\u8bbe\u7f6e\u6587\u672c\u7684\u6c34\u5e73\u5bf9\u9f50\u65b9\u5f0f \u6587\u672c\u53ef\u4ee5\u5de6\u5bf9\u9f50\u6216\u53f3\u5bf9\u9f50\uff0c\u6216\u5c45\u4e2d\u5bf9\u9f50\u3002 h1 { text-align: center; } h2 { text-align: left; } h3 { text-align: right; } justify \u5f53 text-align \u5c5e\u6027\u7684\u503c\u8bbe\u7f6e\u4e3a justfy \u540e\uff0c \u5c06\u62c9\u4f38\u6bcf\u4e00\u884c\uff0c\u4f7f\u6bcf\u4e00\u884c\u5177\u6709\u76f8\u7b49\u7684\u5bbd\u5ea6 \u6587\u672c\u65b9\u5411 direction \u548c unicode-bidi \u5c5e\u6027\u53ef\u4ee5\u7528\u4e8e\u66f4\u6539\u5143\u7d20\u7684\u6587\u672c\u65b9\u5411 \u5782\u76f4\u5bf9\u9f50 vertical-align \u5c5e\u6027\u8bbe\u7f6e\u5143\u7d20\u7684\u5782\u76f4\u5bf9\u9f50\u65b9\u5f0f 1.15 CSS\u6587\u5b57\u88c5\u9970 text-decoration \u5c5e\u6027\u7528\u4e8e\u8bbe\u7f6e\u6216\u5220\u9664\u6587\u672c\u88c5\u9970 text-decoration:none; \u901a\u5e38\u7528\u4e8e\u4ece\u94fe\u63a5\u4e0a\u5220\u9664\u4e0b\u5212\u7ebf a { text-decoration: none; } \u4e00\u4e9b text-decoration \u5c5e\u6027\u7684\u503c h1 { text-decoration: overline; } h2 { text-decoration: line-through; } h3 { text-decoration: underline; } 1.16 CSS \u6587\u672c\u8f6c\u6362 text-transform \u5c5e\u6027\u7528\u6765\u6307\u5b9a\u6587\u672c\u4e2d\u7684\u5927\u5c0f\u5199\u8f6c\u6362\u00b7 p.uppercase { text-transform: uppercase; } p.lowercase { text-transform: lowercase; } p.capitalize { text-transform: capitalize; } 1.17 \u6587\u5b57\u95f4\u8ddd text-indent \u5c5e\u6027\u7528\u4e8e\u6307\u5b9a\u6587\u672c\u7b2c\u4e00\u884c\u7684\u7f29\u8fdb p { text-indent: 50px; } letter-spacing \u5c5e\u6027\u7528\u4e8e\u6307\u5b9a\u6587\u672c\u4e2d\u5b57\u7b26\u7684\u95f4\u8ddd h1 { letter-spacing: 3px; } h2 { letter-spacing: -3px; } line-height \u5c5e\u6027\u7528\u4e8e\u6307\u5b9a\u884c\u4e4b\u95f4\u7684\u95f4\u8ddd p.small { line-height: 0.8; } p.big { line-height: 1.8; } word-spacing \u5c5e\u6027\u7528\u4e8e\u6307\u5b9a\u6587\u672c\u4e2d\u5355\u8bcd\u4e4b\u95f4\u7684\u95f4\u8ddd h1 { word-spacing: 10px; } h2 { word-spacing: -5px; } white-space \u5c5e\u6027\u6307\u5b9a\u5143\u7d20\u5185\u90e8\u7a7a\u767d\u7684\u5904\u7406\u65b9\u5f0f p { white-space: nowrap; } 1.18 \u5b57\u4f53 font-family \u5c5e\u6027 .p1 { font-family: \"Times New Roman\", Times, serif; } .p2 { font-family: Arial, Helvetica, sans-serif; } .p3 { font-family: \"Lucida Console\", \"Courier New\", monospace; } 1.18.1 \u5b57\u4f53\u6837\u5f0f font-style nomal italic \u659c\u4f53 oblique \u503e\u659c p.normal { font-style: normal; } p.italic { font-style: italic; } p.oblique { font-style: oblique; } font-weight \u5b57\u4f53\u7c97\u7ec6 p.normal { font-weight: normal; } p.thick { font-weight: bold; } font-size \u5b57\u4f53\u5927\u5c0f \u7edd\u5bf9\u5c3a\u5bf8 \u8bbe\u7f6e\u4e3a\u6307\u5b9a\u5927\u5c0f \u4e0d\u5141\u8bb8\u66f4\u6539\uff08\u5728\u6d4f\u89c8\u5668\u7aef\uff09 \u76f8\u5bf9\u5c3a\u5bf8 \u8bbe\u7f6e\u76f8\u5bf9\u4e8e\u5468\u56f4\u5143\u7d20\u7684\u5927\u5c0f \u5141\u8bb8\u7528\u6237\u5728\u6d4f\u89c8\u5668\u4e2d\u4fee\u6539\u5927\u5c0f h1 { font-size: 40px; } h2 { font-size: 30px; } p { font-size: 14px; } 1.18.2 Google\u5b57\u4f53 <!DOCTYPE html> <html> <head> <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Sofia\"> <style> body { font-family: \"Sofia\"; font-size: 22px; } </style> </head> <body> <h1>Sofia Font</h1> <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</p> </body> </html> 1.18.3 \u5b57\u4f53\u5c5e\u6027 font \u5c5e\u6027\u662f\u4ee5\u4e0b\u5c5e\u6027\u7684\u7b80\u5199 font-style font-variant font-weight font-size font-family 1.19 CSS \u56fe\u6807 Font Awesome \u5982\u9700\u4f7f\u7528 Font Awesome \u56fe\u6807\uff0c\u8bf7\u8bbf\u95ee fontawesome.com\uff0c\u767b\u5f55\u5e76\u83b7\u53d6\u4ee3\u7801\u6dfb\u52a0\u5230 HTML \u9875\u9762\u7684 head\u90e8\u5206 1.20 CSS \u94fe\u63a5\u6837\u5f0f \u94fe\u63a5\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55 CSS \u5c5e\u6027\uff08\u4f8b\u5982 color \u3001 font-family \u3001 background \u7b49\uff09\u6765\u8bbe\u7f6e\u6837\u5f0f\u3002 a { color: hotpink; } \u51e0\u79cd\u94fe\u63a5\u72b6\u6001 /* \u672a\u88ab\u8bbf\u95ee\u7684\u94fe\u63a5 */ a:link { color: red; } /* \u5df2\u88ab\u8bbf\u95ee\u7684\u94fe\u63a5 */ a:visited { color: green; } /* \u5c06\u9f20\u6807\u60ac\u505c\u5728\u94fe\u63a5\u4e0a */ a:hover { color: hotpink; } /* \u88ab\u9009\u62e9\u7684\u94fe\u63a5 */ a:active { color: blue; } 1.21 CSS \u5217\u8868 HTML\u4e2d\u6709\u4e24\u79cd\u5217\u8868 \u65e0\u5e8f\u5217\u8868ul \u6709\u5e8f\u5217\u8868ol \u8be6\u60c5\u731b\u6233\u8fd9\u91cc\ud83c\udf88 1.22 CSS\u8868\u683c \u4f7f\u7528CSS\u53ef\u4ee5\u6781\u5927\u7684\u6539\u5584HTML\u8868\u683c\u7684\u5916\u89c2 border \u5c5e\u6027 table, th, td { border: 1px solid black; } boder-collapse \u5408\u5e76\u8868\u683c\u8fb9\u6846\uff0c\u8bbe\u7f6e\u662f\u5426\u5c06\u8868\u683c\u8fb9\u6846\u6298\u53e0\u4e3a\u5355\u4e00\u8fb9\u6846 table { border-collapse: collapse; } table, th, td { border: 1px solid black; } width \u548c height \u8bbe\u7f6e\u8868\u683c\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6 table { width: 100%; } th { height: 50px; } table { width: 50%; } th { height: 70px; } text-align \u8bbe\u7f6e\u8868\u683c\u5185\u5bb9\u7684\u6c34\u5e73\u5bf9\u9f50\u65b9\u5f0f th { text-align: center; } vertical-align \u8bbe\u7f6e\u5782\u76f4\u5bf9\u9f50\u65b9\u5f0f td { height: 50px; vertical-align: bottom; } padding \u5c5e\u6027\u7528\u6765\u63a7\u5236\u8fb9\u6846\u548c\u8868\u683c\u5185\u5bb9\u4e4b\u95f4\u7684\u5185\u8fb9\u8ddd th, td { padding: 15px; text-align: left; } border-bottom \u6c34\u5e73\u5206\u5272\u7ebf th, td { border-bottom: 1px solid #ddd; } :hover \u60ac\u505c\u6548\u679c tr:hover {background-color: #f5f5f5;} \u8868\u683c\u989c\u8272 th { background-color: #4CAF50; color: white; } overflow-x:auto \u54cd\u5e94\u5f0f\u8868\u683c \u5982\u679c\u5c4f\u5e55\u592a\u5c0f\u800c\u65e0\u6cd5\u663e\u793a\u5168\u90e8\u5185\u5bb9\uff0c\u5219\u54cd\u5e94\u5f0f\u8868\u683c\u4f1a\u663e\u793a\u6c34\u5e73\u6eda\u52a8\u6761\uff1a <div style=\"overflow-x:auto;\"> <table> ... table content ... </table> </div> \u66f4\u591a\u7ec6\u8282\u731b\u6233\u8fd9\u91cc\ud83c\udf88","title":"6.CSS \u57fa\u7840\u8bed\u6cd5"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#6css","text":"CSS \u89c4\u5219\u96c6\uff08rule-set\uff09\u7531\u9009\u62e9\u5668\u548c\u58f0\u660e\u5757\u7ec4\u6210\uff1a \u9009\u62e9\u5668\u6307\u5411\u60a8\u9700\u8981\u8bbe\u7f6e\u6837\u5f0f\u7684 HTML \u5143\u7d20\u3002 \u58f0\u660e\u5757\u5305\u542b\u4e00\u6761\u6216\u591a\u6761\u7528\u5206\u53f7\u5206\u9694\u7684\u58f0\u660e\u3002 \u6bcf\u6761\u58f0\u660e\u90fd\u5305\u542b\u4e00\u4e2a CSS \u5c5e\u6027\u540d\u79f0\u548c\u4e00\u4e2a\u503c\uff0c\u4ee5\u5192\u53f7\u5206\u9694\u3002 \u591a\u6761 CSS \u58f0\u660e\u7528\u5206\u53f7\u5206\u9694\uff0c\u58f0\u660e\u5757\u7528\u82b1\u62ec\u53f7\u62ec\u8d77\u6765\u3002","title":"6.CSS \u57fa\u7840\u8bed\u6cd5"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#11-css","text":"\u5143\u7d20\u9009\u62e9\u5668 \u5143\u7d20\u9009\u62e9\u5668\u6839\u636e\u5143\u7d20\u540d\u79f0\u6765\u9009\u62e9 HTML \u5143\u7d20\u3002 \u5728\u8fd9\u91cc\uff0c\u9875\u9762\u4e0a\u7684\u6240\u6709p\u5143\u7d20\u90fd\u5c06\u5c45\u4e2d\u5bf9\u9f50\uff0c\u5e76\u5e26\u6709\u7ea2\u8272\u6587\u672c\u989c\u8272\uff1a css p { text-align: center; color: red; } id\u9009\u62e9\u5668 \u5143\u7d20\u7684 id \u5728\u9875\u9762\u4e2d\u662f\u552f\u4e00\u7684\uff0c\u56e0\u6b64 id \u9009\u62e9\u5668\u7528\u4e8e\u9009\u62e9\u4e00\u4e2a\u552f\u4e00\u7684\u5143\u7d20\uff01 \u8981\u9009\u62e9\u5177\u6709\u7279\u5b9a id \u7684\u5143\u7d20\uff0c \u8bf7\u5199\u4e00\u4e2a\u4e95\u53f7\uff08\uff03\uff09 \uff0c\u540e\u8ddf\u8be5\u5143\u7d20\u7684 id\u3002 \u8fd9\u6761 CSS \u89c4\u5219\u5c06\u5e94\u7528\u4e8e id=\"para1\" \u7684 HTML \u5143\u7d20\uff1a \u7c7b\u9009\u62e9\u5668 \u7c7b\u9009\u62e9\u5668\u9009\u62e9\u6709\u7279\u5b9a class \u5c5e\u6027\u7684 HTML \u5143\u7d20\u3002 \u5982\u9700\u9009\u62e9\u62e5\u6709\u7279\u5b9a class \u7684\u5143\u7d20\uff0c\u8bf7 \u5199\u4e00\u4e2a\u53e5\u70b9\uff08.\uff09\u5b57\u7b26 \uff0c\u540e\u9762\u8ddf\u7c7b\u540d\u3002 \u5728\u6b64\u4f8b\u4e2d\uff0c\u6240\u6709\u5e26\u6709 class=\"center\" \u7684 HTML \u5143\u7d20\u5c06\u4e3a\u7ea2\u8272\u4e14\u5c45\u4e2d\u5bf9\u9f50\uff1a css .center { text-align: center; color: red; } \u901a\u7528\u9009\u62e9\u5668 \u901a\u7528\u9009\u62e9\u5668\uff08*\uff09\u9009\u62e9\u9875\u9762\u4e0a\u7684\u6240\u6709\u7684 HTML \u5143\u7d20\u3002 \u4e0b\u9762\u7684 CSS \u89c4\u5219\u4f1a\u5f71\u54cd\u9875\u9762\u4e0a\u7684\u6bcf\u4e2a HTML \u5143\u7d20\uff1a css * { text-align: center; color: blue; } \u5206\u7ec4\u9009\u62e9\u5668 \u9009\u53d6\u6240\u6709\u5177\u6709\u76f8\u540c\u6837\u5f0f\u5b9a\u4e49\u7684 HTML \u5143\u7d20\u3002 ```css h1 { text-align: center; color: red; } h2 { text-align: center; color: red; } p { text-align: center; color: red; } ```","title":"1.1 CSS \u9009\u62e9\u5668"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#1css","text":"CSS \u89c4\u5219\u96c6\uff08rule-set\uff09\u7531\u9009\u62e9\u5668\u548c\u58f0\u660e\u5757\u7ec4\u6210\uff1a \u9009\u62e9\u5668\u6307\u5411\u60a8\u9700\u8981\u8bbe\u7f6e\u6837\u5f0f\u7684 HTML \u5143\u7d20\u3002 \u58f0\u660e\u5757\u5305\u542b\u4e00\u6761\u6216\u591a\u6761\u7528\u5206\u53f7\u5206\u9694\u7684\u58f0\u660e\u3002 \u6bcf\u6761\u58f0\u660e\u90fd\u5305\u542b\u4e00\u4e2a CSS \u5c5e\u6027\u540d\u79f0\u548c\u4e00\u4e2a\u503c\uff0c\u4ee5\u5192\u53f7\u5206\u9694\u3002 \u591a\u6761 CSS \u58f0\u660e\u7528\u5206\u53f7\u5206\u9694\uff0c\u58f0\u660e\u5757\u7528\u82b1\u62ec\u53f7\u62ec\u8d77\u6765\u3002","title":"1.CSS \u57fa\u7840\u8bed\u6cd5"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#11-css_1","text":"\u5143\u7d20\u9009\u62e9\u5668 \u5143\u7d20\u9009\u62e9\u5668\u6839\u636e\u5143\u7d20\u540d\u79f0\u6765\u9009\u62e9 HTML \u5143\u7d20\u3002 \u5728\u8fd9\u91cc\uff0c\u9875\u9762\u4e0a\u7684\u6240\u6709p\u5143\u7d20\u90fd\u5c06\u5c45\u4e2d\u5bf9\u9f50\uff0c\u5e76\u5e26\u6709\u7ea2\u8272\u6587\u672c\u989c\u8272\uff1a css p { text-align: center; color: red; } id\u9009\u62e9\u5668 \u5143\u7d20\u7684 id \u5728\u9875\u9762\u4e2d\u662f\u552f\u4e00\u7684\uff0c\u56e0\u6b64 id \u9009\u62e9\u5668\u7528\u4e8e\u9009\u62e9\u4e00\u4e2a\u552f\u4e00\u7684\u5143\u7d20\uff01 \u8981\u9009\u62e9\u5177\u6709\u7279\u5b9a id \u7684\u5143\u7d20\uff0c \u8bf7\u5199\u4e00\u4e2a\u4e95\u53f7\uff08\uff03\uff09 \uff0c\u540e\u8ddf\u8be5\u5143\u7d20\u7684 id\u3002 \u8fd9\u6761 CSS \u89c4\u5219\u5c06\u5e94\u7528\u4e8e id=\"para1\" \u7684 HTML \u5143\u7d20\uff1a \u7c7b\u9009\u62e9\u5668 \u7c7b\u9009\u62e9\u5668\u9009\u62e9\u6709\u7279\u5b9a class \u5c5e\u6027\u7684 HTML \u5143\u7d20\u3002 \u5982\u9700\u9009\u62e9\u62e5\u6709\u7279\u5b9a class \u7684\u5143\u7d20\uff0c\u8bf7 \u5199\u4e00\u4e2a\u53e5\u70b9\uff08.\uff09\u5b57\u7b26 \uff0c\u540e\u9762\u8ddf\u7c7b\u540d\u3002 \u5728\u6b64\u4f8b\u4e2d\uff0c\u6240\u6709\u5e26\u6709 class=\"center\" \u7684 HTML \u5143\u7d20\u5c06\u4e3a\u7ea2\u8272\u4e14\u5c45\u4e2d\u5bf9\u9f50\uff1a css .center { text-align: center; color: red; } \u901a\u7528\u9009\u62e9\u5668 \u901a\u7528\u9009\u62e9\u5668\uff08*\uff09\u9009\u62e9\u9875\u9762\u4e0a\u7684\u6240\u6709\u7684 HTML \u5143\u7d20\u3002 \u4e0b\u9762\u7684 CSS \u89c4\u5219\u4f1a\u5f71\u54cd\u9875\u9762\u4e0a\u7684\u6bcf\u4e2a HTML \u5143\u7d20\uff1a css * { text-align: center; color: blue; } \u5206\u7ec4\u9009\u62e9\u5668 \u9009\u53d6\u6240\u6709\u5177\u6709\u76f8\u540c\u6837\u5f0f\u5b9a\u4e49\u7684 HTML \u5143\u7d20\u3002 ```css h1 { text-align: center; color: red; } h2 { text-align: center; color: red; } p { text-align: center; color: red; } ```","title":"1.1 CSS \u9009\u62e9\u5668"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#12-css","text":"\u5916\u90e8CSS \u5185\u90e8CSS \u884c\u5185CSS \u5916\u90e8CSS <link rel=\"stylesheet\" type=\"text/css\" href=\"mystyle.css\"> <!DOCTYPE html> <html> <head> <link rel=\"stylesheet\" type=\"text/css\" href=\"mystyle.css\"> </head> <body> <h1>This is a heading</h1> <p>This is a paragraph.</p> </body> </html> \u5185\u90e8CSS \u5185\u90e8\u6837\u5f0f\u5728html\u9875\u9762\u4e2dhead\u90e8\u5206\u5185\u7684style\u5143\u7d20\u5185\u8fdb\u884c\u5b9a\u4e49 <!DOCTYPE html> <html> <head> <style> body { background-color: linen; } h1 { color: maroon; margin-left: 40px; } </style> </head> <body> <h1>This is a heading</h1> <p>This is a paragraph.</p> </body> </html> \u884c\u5185CSS \u4f7f\u7528\u884c\u5185\u6837\u5f0f\uff0c\u4e3a\u5355\u4e2a\u5143\u7d20\u5e94\u7528\u552f\u4e00\u6837\u5f0f \u5c06style\u5c5e\u6027\u6dfb\u52a0\u5230\u76f8\u5173\u5143\u7d20 <!DOCTYPE html> <html> <body> <h1 style=\"color:blue;text-align:center;\">This is a heading</h1> <p style=\"color:red;\">This is a paragraph.</p> </body> </html>","title":"1.2 css\u7684\u5f15\u5165"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#13","text":"CSS\u4e2d\u53ef\u4ee5\u4f7f\u7528\u989c\u8272\u540d\u6765\u5236\u5b9a\u989c\u8272 \u80cc\u666f\u8272 background-color <h1 style=\"background-color:DodgerBlue;\">China</h1> <p style=\"background-color:Tomato;\">China is a great country!</p> \u6587\u672c\u989c\u8272 html <h1 style=\"color:Tomato;\">China</h1> <p style=\"color:DodgerBlue;\">China is a great country!</p> <p style=\"color:MediumSeaGreen;\">China, officially the People's Republic of China...</p> \u8fb9\u6846\u989c\u8272 <h1 style=\"border:2px solid Tomato;\">Hello World</h1> <h1 style=\"border:2px solid DodgerBlue;\">Hello World</h1> <h1 style=\"border:2px solid Violet;\">Hello World</h1>","title":"1.3 \u989c\u8272"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#14","text":"background-color background-image background-repeat background-attachment background-position","title":"1.4 \u80cc\u666f"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#141-background-color","text":"\u8be5\u5c5e\u6027\u6307\u5b9a\u5143\u7d20\u7684\u80cc\u666f\u8272 body { background-color: lightblue; } opacity\u5c5e\u6027\uff0c\u8c03\u6574\u4e0d\u900f\u660e\u5ea6 css div { background-color: green; opacity: 0.3; }","title":"1.4.1 background-color"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#142-background-image","text":"\u8be5\u5c5e\u6027\u6307\u5b9a\u5143\u7d20\u80cc\u666f\u7684\u56fe\u50cf body { background-image: url(\"paper.gif\"); } \u4f7f\u7528\u80cc\u666f\u56fe\u50cf\u65f6\uff0c\u8bf7\u4f7f\u7528\u4e0d\u4f1a\u5e72\u6270\u6587\u672c\u7684\u56fe\u50cf\u3002 \u8fd8\u53ef\u4ee5\u4e3a\u7279\u5b9a\u5143\u7d20\u8bbe\u7f6e\u80cc\u666f\u56fe\u50cf\uff0c\u4f8b\u5982 p \u5143\u7d20\uff1a","title":"1.4.2 background-image"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#143background-repeat","text":"\u8be5\u5c5e\u6027\u5728\u6c34\u5e73\u548c\u5782\u76f4\u65b9\u5411\u4e0a\u90fd\u91cd\u590d\u56fe\u50cf \u5206\u522b\u5728x\uff0cy\u65b9\u5411\u4e0a\u91cd\u590d body { background-image: url(\"gradient_bg.png\"); background-repeat: repeat-x; } body { background-image: url(\"gradient_bg.png\"); }","title":"1.4.3background-repeat"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#144background-position","text":"\u8bbe\u7f6e\u56fe\u50cf\u7684\u4f4d\u7f6e\u5c5e\u6027 body { background-image: url(\"tree.png\"); background-repeat: no-repeat; background-position: right top; }","title":"1.4.4background-position"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#145-background-attachment","text":"\u5c5e\u6027\u6307\u5b9a\u80cc\u666f\u56fe\u50cf\u662f\u5e94\u8be5\u6eda\u52a8\u8fd8\u662f\u56fa\u5b9a\u7684\uff08\u4e0d\u4f1a\u968f\u9875\u9762\u7684\u5176\u4f59\u90e8\u5206\u4e00\u8d77\u6eda\u52a8\uff09 body { background-image: url(\"tree.png\"); background-repeat: no-repeat; background-position: right top; background-attachment: fixed; } \u6307\u5b9a\u80cc\u666f\u56fe\u50cf\u5e94\u968f\u9875\u9762\u7684\u5176\u4f59\u90e8\u5206\u4e00\u8d77\u6eda\u52a8\uff1a body { background-image: url(\"tree.png\"); background-repeat: no-repeat; background-position: right top; background-attachment: scroll; }","title":"1.4.5 background-attachment"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#15","text":"\u8fb9\u6846\u5c5e\u6027\u5141\u8bb8\u6307\u5b9a \u6837\u5f0f \u5bbd\u5ea6 \u989c\u8272","title":"1.5 \u8fb9\u6846"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#151","text":"dotted - \u5b9a\u4e49\u70b9\u7ebf\u8fb9\u6846 dashed \u865a\u7ebf\u8fb9\u6846 solid \u5b9e\u7ebf double \u53cc\u8fb9\u6846 groove 3d\u8fb9\u6846 \u5761\u53e3 ridge 3d\u8fb9\u6846 \u810a\u7ebf inset 3d inset\u8fb9\u6846 outset 3d outset none \u65e0\u8fb9\u6846 hidden \u9690\u85cf\u8fb9\u6846 border-style \u5c5e\u6027\u53ef\u4ee5\u8bbe\u7f6e1-4\u4e2a\u503c\uff08\u7528\u4e8e\u4e0a\u4e0b\u5de6\u53f3\uff09 p.dotted {border-style: dotted;} p.dashed {border-style: dashed;} p.solid {border-style: solid;} p.double {border-style: double;} p.groove {border-style: groove;} p.ridge {border-style: ridge;} p.inset {border-style: inset;} p.outset {border-style: outset;} p.none {border-style: none;} p.hidden {border-style: hidden;} p.mix {border-style: dotted dashed solid double;}","title":"1.5.1 \u8fb9\u6846\u6837\u5f0f"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#152","text":"border-width \u5c5e\u6027\u6307\u5b9a\u56db\u4e2a\u8fb9\u6846\u7684\u5bbd\u5ea6 p.one { border-style: solid; border-width: 5px; } p.two { border-style: solid; border-width: medium; } p.three { border-style: dotted; border-width: 2px; } p.four { border-style: dotted; border-width: thick; }","title":"1.5.2 \u8fb9\u6846\u5bbd\u5ea6"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#153","text":"border-color \u5c5e\u6027\u7528\u4e8e\u8bbe\u7f6e\u56db\u4e2a\u8fb9\u6846\u7684\u989c\u8272 \u5982\u679c\u672a\u8bbe\u7f6e border-color \uff0c\u5b83\u5c06\u7ee7\u627f\u5143\u7d20\u7684\u989c\u8272 p.one { border-style: solid; border-color: red; } p.two { border-style: solid; border-color: green; } p.three { border-style: dotted; border-color: blue; } \u989c\u8272\u7684\u8bbe\u7f6e\u4e5f\u53ef\u4ee5\u7528\u4ee5\u4e0b\u6807\u51c6 HEX RGB HSL","title":"1.5.3 \u8fb9\u6846\u989c\u8272"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#154","text":"border-dadius \u5c5e\u6027\u7528\u4e8e\u5411\u5143\u7d20\u6dfb\u52a0\u5706\u89d2\u8fb9\u6846","title":"1.5.4 \u5706\u89d2\u8fb9\u6846"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#_1","text":"\u8fb9\u6846\u5404\u8fb9 https://www.w3school.com.cn/css/css_border_sides.asp \u7b80\u5199\u8fb9\u6846\u5c5e\u6027 https://www.w3school.com.cn/css/css_border_shorthand.asp","title":"\u66f4\u591a"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#16","text":"margin \u5c5e\u6027\u7528\u6765\u5728\u4efb\u4f55\u5b9a\u4e49\u7684\u8fb9\u6846\u4e4b\u5916\uff0c\u4e3a\u5143\u7d20\u5468\u56f4\u521b\u9020\u7a7a\u95f4 \u7528 margin \u4e3a\u6bcf\u4e00\u4fa7\u6307\u5b9a\u5916\u8fb9\u8ddd\u7684\u5c5e\u6027 margin-top margin-right margin-bottom margin-left \u6240\u6709\u5916\u8fb9\u8ddd\u5c5e\u6027\u90fd\u53ef\u4ee5\u8bbe\u7f6e\u4ee5\u4e0b\u503c auto \u6d4f\u89c8\u5668\u6765\u81ea\u52a8\u8ba1\u7b97\u5916\u8fb9\u8ddd\uff0c\u5143\u7d20\u5728\u5176\u5bb9\u5668\u4e2d\u6c34\u5e73\u5c45\u4e2d length \u4ee5px\uff0cpt\uff0ccm\u7b49\u5355\u4f4d\u6307\u5b9a\u5916\u8fb9\u8ddd % \u5305\u542b\u5143\u7d20\u5bbd\u5ea6\u7684\u767e\u5206\u6bd4\u8ba1\u7b97\u7684\u5916\u8fb9\u8ddd inherit \u4ece\u7236\u5143\u7d20\u7ee7\u627f\u5916\u8fb9\u8ddd","title":"1.6 \u5916\u8fb9\u8ddd"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#17","text":"\u5f53\u4e24\u4e2a\u5782\u76f4\u5916\u8fb9\u8ddd\u76f8\u9047\u65f6\uff0c\u4ed6\u4eec\u5c06\u5f62\u6210\u4e00\u4e2a\u5916\u8fb9\u8ddd\uff0c \u5408\u5e76\u540e\u7684\u5916\u8fb9\u8ddd\u7684\u9ad8\u5ea6\u7b49\u4e8e\u53d1\u751f\u4e24\u4e2a\u5408\u5e76\u7684\u5916\u8fb9\u8ddd\u7684\u9ad8\u5ea6\u4e2d\u7684\u8f83\u5927\u8005 \u5f53\u4e00\u4e2a\u5143\u7d20\u5305\u6db5\u5728\u53e6\u4e00\u4e2a\u5143\u7d20\u4e2d\u65f6\uff0c\u4ed6\u4eec\u7684\u4e0a\u6216\u4e0b\u5916\u8fb9\u8ddd\u4e5f\u4f1a\u53d1\u751f\u5408\u5e76 \u66f4\u591a\u5173\u4e8e\u8fb9\u8ddd\u5408\u5e76","title":"1.7 \u5916\u8fb9\u8ddd\u5408\u5e76"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#18","text":"padding \u5c5e\u6027\u7528\u4e8e\u5b9a\u4e49\u8fb9\u754c\u5185\u7684\u5143\u7d20\u5468\u56f4\u751f\u6210\u7a7a\u95f4 css\u62e5\u6709\u7528\u4e8e\u4e3a\u5143\u7d20\u7684\u6bcf\u4e00\u4fa7\u6307\u5b9a\u5185\u8fb9\u8ddd\u7684\u5c5e\u6027 padding-top padding-right padding-bottom padding-left \u7b80\u5199 div { padding: 25px 50px 75px 100px; } \u5185\u8fb9\u8ddd\u548c\u5143\u7d20\u5bbd\u5ea6 width \u5c5e\u6027\u6307\u5b9a\u5143\u7d20\u5185\u5bb9\u533a\u57df\u7684\u5bbd\u5ea6\uff0c\u5185\u5bb9\u533a\u57df\u662f\u5143\u7d20\uff08\u76d2\u6a21\u578b\uff09\u7684\u5185\u8fb9\u8ddd\u3001\u8fb9\u6846\u548c\u5916\u8fb9\u8ddd\u5185\u7684\u90e8\u5206\u3002","title":"1.8 \u5185\u8fb9\u8ddd"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#19","text":"height \u548c width \u5c5e\u6027\u7528\u6765\u8bbe\u7f6e\u5143\u7d20\u7684\u9ad8\u5ea6\u548c\u5bbd\u5ea6 height \u548c width \u5c5e\u6027\u4e0d\u5305\u62ec\u5185\u8fb9\u8ddd\u3001\u8fb9\u6846\u6216\u5916\u8fb9\u8ddd\u3002\u5b83\u8bbe\u7f6e\u7684\u662f\u5143\u7d20\u5185\u8fb9\u8ddd\u3001\u8fb9\u6846\u4ee5\u53ca\u5916\u8fb9\u8ddd\u5185\u7684\u533a\u57df\u7684\u9ad8\u5ea6\u6216\u5bbd\u5ea6\u3002 height \u548c width \u5c5e\u6027\u53ef\u4ee5\u8bbe\u7f6e\u4ee5\u4e0b\u7684\u503c auto length % initial inherit","title":"1.9 \u5bbd\u5ea6\u548c\u9ad8\u5ea6"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#110","text":"\u6240\u6709 HTML \u5143\u7d20\u90fd\u53ef\u4ee5\u89c6\u4e3a\u65b9\u6846\u3002\u5728 CSS \u4e2d\uff0c\u5728\u8c08\u8bba\u8bbe\u8ba1\u548c\u5e03\u5c40\u65f6\uff0c\u4f1a\u4f7f\u7528\u672f\u8bed\u201c\u76d2\u6a21\u578b\u201d\u6216\u201c\u6846\u6a21\u578b\u201d\u3002 CSS \u6846\u6a21\u578b\u5b9e\u8d28\u4e0a\u662f\u4e00\u4e2a\u5305\u56f4\u6bcf\u4e2a HTML \u5143\u7d20\u7684\u6846\u3002\u5b83\u5305\u62ec\uff1a\u5916\u8fb9\u8ddd\u3001\u8fb9\u6846\u3001\u5185\u8fb9\u8ddd\u4ee5\u53ca\u5b9e\u9645\u7684\u5185\u5bb9\u3002 \u5185\u5bb9 \u5185\u8fb9\u8ddd \u8fb9\u6846 \u5916\u8fb9\u8ddd","title":"1.10 \u6846\u6a21\u5c42"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#111-css","text":"\u8f6e\u5ed3\u662f\u5728\u5143\u7d20\u5468\u56f4\u7ed8\u5236\u7684\u4e00\u6761\u7ebf\uff0c\u5728\u8fb9\u6846\u4e4b\u5916\uff0c\u4ee5\u51f8\u663e\u5143\u7d20\u3002 \u26a0\ufe0f\u6ce8\u610f\uff1a \u8f6e\u5ed3\u4e0e\u8fb9\u6846\u4e0d\u540c \u8f6e\u5ed3\u662f\u5728\u5143\u7d20\u8fb9\u6846\u4e4b\u5916\u7ed8\u5236\u7684\uff0c\u53ef\u80fd\u4e0e\u5176\u4ed6\u5185\u5bb9\u91cd\u53e0\uff0c \u8f6e\u5ed3\u4e5f\u4e0d\u662f\u5143\u7d20\u5c3a\u5bf8\u7684\u4e00\u90e8\u5206 \u5143\u7d20\u7684\u603b\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u4e0d\u53d7\u8f6e\u5ed3\u7ebf\u5bbd\u5ea6\u7684\u5f71\u54cd \u4f7f\u7528 outline-style \u5c5e\u6027\u6307\u5b9a\u8f6e\u5ed3\u7684\u6837\u5b50","title":"1.11 CSS\u8f6e\u5ed3"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#112-css","text":"outline-offset \u5c5e\u6027\u5728\u5143\u7d20\u7684\u8f6e\u5ed3\u4e0e\u8fb9\u6846\u4e4b\u95f4\u6dfb\u52a0\u7a7a\u95f4 \u5143\u7d20\u4ee5\u53ca\u8f6e\u5ed3\u4e4b\u95f4\u7684\u7a7a\u95f4\u662f\u900f\u660e\u7684","title":"1.12 CSS\u8f6e\u5ed3\u504f\u79fb"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#113-css","text":"\u6587\u672c\u989c\u8272 color \u5c5e\u6027\u7528\u4e8e\u8bbe\u7f6e\u6587\u672c\u7684\u989c\u8272 \u989c\u8272\u540d \u5341\u516d\u8fdb\u5236 RGB \u6587\u672c\u989c\u8272\u548c\u80cc\u666f\u8272 background-color \u548c color \u5c5e\u6027","title":"1.13 CSS\u6587\u672c"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#114-css","text":"text-align \u5c5e\u6027\u7528\u4e8e\u8bbe\u7f6e\u6587\u672c\u7684\u6c34\u5e73\u5bf9\u9f50\u65b9\u5f0f \u6587\u672c\u53ef\u4ee5\u5de6\u5bf9\u9f50\u6216\u53f3\u5bf9\u9f50\uff0c\u6216\u5c45\u4e2d\u5bf9\u9f50\u3002 h1 { text-align: center; } h2 { text-align: left; } h3 { text-align: right; } justify \u5f53 text-align \u5c5e\u6027\u7684\u503c\u8bbe\u7f6e\u4e3a justfy \u540e\uff0c \u5c06\u62c9\u4f38\u6bcf\u4e00\u884c\uff0c\u4f7f\u6bcf\u4e00\u884c\u5177\u6709\u76f8\u7b49\u7684\u5bbd\u5ea6 \u6587\u672c\u65b9\u5411 direction \u548c unicode-bidi \u5c5e\u6027\u53ef\u4ee5\u7528\u4e8e\u66f4\u6539\u5143\u7d20\u7684\u6587\u672c\u65b9\u5411 \u5782\u76f4\u5bf9\u9f50 vertical-align \u5c5e\u6027\u8bbe\u7f6e\u5143\u7d20\u7684\u5782\u76f4\u5bf9\u9f50\u65b9\u5f0f","title":"1.14 CSS \u6587\u672c\u5bf9\u9f50"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#115-css","text":"text-decoration \u5c5e\u6027\u7528\u4e8e\u8bbe\u7f6e\u6216\u5220\u9664\u6587\u672c\u88c5\u9970 text-decoration:none; \u901a\u5e38\u7528\u4e8e\u4ece\u94fe\u63a5\u4e0a\u5220\u9664\u4e0b\u5212\u7ebf a { text-decoration: none; } \u4e00\u4e9b text-decoration \u5c5e\u6027\u7684\u503c h1 { text-decoration: overline; } h2 { text-decoration: line-through; } h3 { text-decoration: underline; }","title":"1.15 CSS\u6587\u5b57\u88c5\u9970"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#116-css","text":"text-transform \u5c5e\u6027\u7528\u6765\u6307\u5b9a\u6587\u672c\u4e2d\u7684\u5927\u5c0f\u5199\u8f6c\u6362\u00b7 p.uppercase { text-transform: uppercase; } p.lowercase { text-transform: lowercase; } p.capitalize { text-transform: capitalize; }","title":"1.16 CSS \u6587\u672c\u8f6c\u6362"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#117","text":"text-indent \u5c5e\u6027\u7528\u4e8e\u6307\u5b9a\u6587\u672c\u7b2c\u4e00\u884c\u7684\u7f29\u8fdb p { text-indent: 50px; } letter-spacing \u5c5e\u6027\u7528\u4e8e\u6307\u5b9a\u6587\u672c\u4e2d\u5b57\u7b26\u7684\u95f4\u8ddd h1 { letter-spacing: 3px; } h2 { letter-spacing: -3px; } line-height \u5c5e\u6027\u7528\u4e8e\u6307\u5b9a\u884c\u4e4b\u95f4\u7684\u95f4\u8ddd p.small { line-height: 0.8; } p.big { line-height: 1.8; } word-spacing \u5c5e\u6027\u7528\u4e8e\u6307\u5b9a\u6587\u672c\u4e2d\u5355\u8bcd\u4e4b\u95f4\u7684\u95f4\u8ddd h1 { word-spacing: 10px; } h2 { word-spacing: -5px; } white-space \u5c5e\u6027\u6307\u5b9a\u5143\u7d20\u5185\u90e8\u7a7a\u767d\u7684\u5904\u7406\u65b9\u5f0f p { white-space: nowrap; }","title":"1.17 \u6587\u5b57\u95f4\u8ddd"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#118","text":"font-family \u5c5e\u6027 .p1 { font-family: \"Times New Roman\", Times, serif; } .p2 { font-family: Arial, Helvetica, sans-serif; } .p3 { font-family: \"Lucida Console\", \"Courier New\", monospace; }","title":"1.18 \u5b57\u4f53"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#1181","text":"font-style nomal italic \u659c\u4f53 oblique \u503e\u659c p.normal { font-style: normal; } p.italic { font-style: italic; } p.oblique { font-style: oblique; } font-weight \u5b57\u4f53\u7c97\u7ec6 p.normal { font-weight: normal; } p.thick { font-weight: bold; } font-size \u5b57\u4f53\u5927\u5c0f \u7edd\u5bf9\u5c3a\u5bf8 \u8bbe\u7f6e\u4e3a\u6307\u5b9a\u5927\u5c0f \u4e0d\u5141\u8bb8\u66f4\u6539\uff08\u5728\u6d4f\u89c8\u5668\u7aef\uff09 \u76f8\u5bf9\u5c3a\u5bf8 \u8bbe\u7f6e\u76f8\u5bf9\u4e8e\u5468\u56f4\u5143\u7d20\u7684\u5927\u5c0f \u5141\u8bb8\u7528\u6237\u5728\u6d4f\u89c8\u5668\u4e2d\u4fee\u6539\u5927\u5c0f h1 { font-size: 40px; } h2 { font-size: 30px; } p { font-size: 14px; }","title":"1.18.1 \u5b57\u4f53\u6837\u5f0f"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#1182-google","text":"","title":"1.18.2 Google\u5b57\u4f53"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#_2","text":"<!DOCTYPE html> <html> <head> <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Sofia\"> <style> body { font-family: \"Sofia\"; font-size: 22px; } </style> </head> <body> <h1>Sofia Font</h1> <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</p> </body> </html>","title":""},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#1183","text":"font \u5c5e\u6027\u662f\u4ee5\u4e0b\u5c5e\u6027\u7684\u7b80\u5199 font-style font-variant font-weight font-size font-family","title":"1.18.3 \u5b57\u4f53\u5c5e\u6027"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#119-css","text":"Font Awesome \u5982\u9700\u4f7f\u7528 Font Awesome \u56fe\u6807\uff0c\u8bf7\u8bbf\u95ee fontawesome.com\uff0c\u767b\u5f55\u5e76\u83b7\u53d6\u4ee3\u7801\u6dfb\u52a0\u5230 HTML \u9875\u9762\u7684 head\u90e8\u5206","title":"1.19 CSS \u56fe\u6807"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#120-css","text":"\u94fe\u63a5\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55 CSS \u5c5e\u6027\uff08\u4f8b\u5982 color \u3001 font-family \u3001 background \u7b49\uff09\u6765\u8bbe\u7f6e\u6837\u5f0f\u3002 a { color: hotpink; } \u51e0\u79cd\u94fe\u63a5\u72b6\u6001 /* \u672a\u88ab\u8bbf\u95ee\u7684\u94fe\u63a5 */ a:link { color: red; } /* \u5df2\u88ab\u8bbf\u95ee\u7684\u94fe\u63a5 */ a:visited { color: green; } /* \u5c06\u9f20\u6807\u60ac\u505c\u5728\u94fe\u63a5\u4e0a */ a:hover { color: hotpink; } /* \u88ab\u9009\u62e9\u7684\u94fe\u63a5 */ a:active { color: blue; }","title":"1.20 CSS \u94fe\u63a5\u6837\u5f0f"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#121-css","text":"HTML\u4e2d\u6709\u4e24\u79cd\u5217\u8868 \u65e0\u5e8f\u5217\u8868ul \u6709\u5e8f\u5217\u8868ol \u8be6\u60c5\u731b\u6233\u8fd9\u91cc\ud83c\udf88","title":"1.21 CSS \u5217\u8868"},{"location":"Dev_documents/css_doc/CSS%E6%89%8B%E5%86%8C/#122-css","text":"\u4f7f\u7528CSS\u53ef\u4ee5\u6781\u5927\u7684\u6539\u5584HTML\u8868\u683c\u7684\u5916\u89c2 border \u5c5e\u6027 table, th, td { border: 1px solid black; } boder-collapse \u5408\u5e76\u8868\u683c\u8fb9\u6846\uff0c\u8bbe\u7f6e\u662f\u5426\u5c06\u8868\u683c\u8fb9\u6846\u6298\u53e0\u4e3a\u5355\u4e00\u8fb9\u6846 table { border-collapse: collapse; } table, th, td { border: 1px solid black; } width \u548c height \u8bbe\u7f6e\u8868\u683c\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6 table { width: 100%; } th { height: 50px; } table { width: 50%; } th { height: 70px; } text-align \u8bbe\u7f6e\u8868\u683c\u5185\u5bb9\u7684\u6c34\u5e73\u5bf9\u9f50\u65b9\u5f0f th { text-align: center; } vertical-align \u8bbe\u7f6e\u5782\u76f4\u5bf9\u9f50\u65b9\u5f0f td { height: 50px; vertical-align: bottom; } padding \u5c5e\u6027\u7528\u6765\u63a7\u5236\u8fb9\u6846\u548c\u8868\u683c\u5185\u5bb9\u4e4b\u95f4\u7684\u5185\u8fb9\u8ddd th, td { padding: 15px; text-align: left; } border-bottom \u6c34\u5e73\u5206\u5272\u7ebf th, td { border-bottom: 1px solid #ddd; } :hover \u60ac\u505c\u6548\u679c tr:hover {background-color: #f5f5f5;} \u8868\u683c\u989c\u8272 th { background-color: #4CAF50; color: white; } overflow-x:auto \u54cd\u5e94\u5f0f\u8868\u683c \u5982\u679c\u5c4f\u5e55\u592a\u5c0f\u800c\u65e0\u6cd5\u663e\u793a\u5168\u90e8\u5185\u5bb9\uff0c\u5219\u54cd\u5e94\u5f0f\u8868\u683c\u4f1a\u663e\u793a\u6c34\u5e73\u6eda\u52a8\u6761\uff1a <div style=\"overflow-x:auto;\"> <table> ... table content ... </table> </div> \u66f4\u591a\u7ec6\u8282\u731b\u6233\u8fd9\u91cc\ud83c\udf88","title":"1.22 CSS\u8868\u683c"},{"location":"Dev_documents/css_doc_plus/CSS_advanced/","text":"7. CSS \u66f4\u591a 1.CSS \u5e03\u5c40 1.1 display\u5c5e\u6027 display \u5c5e\u6027\u662f\u63a7\u5236\u5e03\u5c40\u7684\u6700\u91cd\u8981\u7684\u5c5e\u6027 display\u5c5e\u6027\u89c4\u5b9a\u662f\u5426/\u5982\u4f55\u663e\u793a\u5143\u7d20 \u5927\u591a\u6570\u5143\u7d20\u7684\u9ed8\u8ba4display\u503c\u4e3a block \u6216 inline \u5757\u7ea7\u522b\u5143\u7d20 \u5757\u7ea7\u5143\u7d20\u603b\u662f\u4ece\u65b0\u884c\u5f00\u59cb\uff0c\u5e76\u5360\u636e\u53ef\u7528\u7684\u5168\u90e8\u5bbd\u5ea6\uff08\u5c3d\u53ef\u80fd\u5411\u5de6\u548c\u5411\u53f3\u4f38\u5c55\uff09\u3002 div h1-h6 p form header footer section \u884c\u5185\u5143\u7d20 \u5185\u8054\u5143\u7d20\u4e0d\u4ece\u65b0\u884c\u5f00\u59cb\uff0c\u4ec5\u5360\u7528\u6240\u9700\u7684\u5bbd\u5ea6 span a img display:none \u8be5\u5c5e\u6027\u503c\u901a\u5e38\u642d\u914djs\u4f7f\u7528\uff0c\u7528\u6765\u63a7\u5236\u5143\u7d20\u7684\u663e\u793a\u548c\u9690\u85cf \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cscript\u5143\u7d20\u4f7f\u7528 display:none \u8986\u76d6\u9ed8\u8ba4\u7684display\u503c \u5982\u524d\u6240\u8ff0\uff0c\u6bcf\u4e2a\u5143\u7d20\u90fd\u6709\u4e00\u4e2a\u9ed8\u8ba4 display \u503c\u3002\u4f46\u662f\uff0c\u60a8\u53ef\u4ee5\u8986\u76d6\u5b83\u3002 \u5c06\u884c\u5185\u5143\u7d20\u66f4\u6539\u4e3a\u5757\u5143\u7d20\uff0c\u53cd\u4e4b\u4ea6\u7136\uff0c\u5bf9\u4e8e\u4f7f\u9875\u9762\u4ee5\u7279\u5b9a\u65b9\u5f0f\u663e\u793a\u540c\u65f6\u4ecd\u9075\u5faa Web \u6807\u51c6\u5f88\u6709\u7528\u3002 \u9690\u85cf\u5143\u7d20 \u9009\u62e9 display:none \u8fd8\u662f visibility:hidden display:none \u9690\u85cf\u5143\u7d20\uff0c\u5e76\u4e14\u9875\u9762\u5e03\u5c40\u4f1a\u56e0\u4e3a\u5143\u7d20\u7684\u6d88\u5931\u800c\u53d1\u751f\u6539\u53d8 visibility:hidden \u5143\u7d20\u88ab\u9690\u85cf\uff0c\u4f46\u662f\u5b83\u4ecd\u7136\u4f1a\u5360\u636e\u7a7a\u95f4 1.2 width \u5bbd\u5c5e\u6027 \u4f7f\u7528 width\u3001max-width \u548c margin: auto \u5757\u7ea7\u5143\u7d20\u59cb\u7ec8\u5360\u7528\u53ef\u7528\u7684\u5168\u90e8\u5bbd\u5ea6\uff08\u5c3d\u53ef\u80fd\u5411\u5de6\u548c\u5411\u53f3\u4f38\u5c55\uff09 \u8bbe\u7f6e\u5757\u7ea7\u5143\u7d20\u7684width\u5c5e\u6027\uff0c\u9632\u6b62\u5b83\u5ef6\u4f38\u5230\u5bb9\u5668\u7684\u8fb9\u7f18\uff0c\u53ef\u4ee5\u5c06\u5916\u8fb9\u8ddd\u8bbe\u7f6e\u4e3aauto\uff0c\u8fd9\u6837\u53ef\u4ee5\u4f7f\u5143\u7d20\u5728\u5bb9\u5668\u4e2d\u6c34\u5e73\u5c45\u4e2d div.ex1 { width: 500px; margin: auto; border: 3px solid #73AD21; } div.ex2 { max-width: 500px; margin: auto; border: 3px solid #73AD21; } 1.3 position\u5c5e\u6027 position \u5c5e\u6027\u89c4\u5b9a\u5e94\u7528\u5143\u7d20\u7684\u5b9a\u4f4d\u65b9\u6cd5\u7684\u7c7b\u578b \u6709\u4e94\u4e2a\u4e0d\u540c\u7684\u4f4d\u7f6e\u503c static relative fixed absoulue sticky \u5143\u7d20\u5176\u5b9e\u662f\u4f7f\u7528 top\u3001bottom\u3001left \u548c right \u5c5e\u6027\u5b9a\u4f4d\u7684\u3002 \u4f46\u662f\uff0c\u9664\u975e\u9996\u5148\u8bbe\u7f6e\u4e86 position \u5c5e\u6027\uff0c\u5426\u5219\u8fd9\u4e9b\u5c5e\u6027\u5c06\u4e0d\u8d77\u4f5c\u7528\u3002\u6839\u636e\u4e0d\u540c\u7684 position \u503c\uff0c\u5b83\u4eec\u7684\u5de5\u4f5c\u65b9\u5f0f\u4e5f\u4e0d\u540c\u3002 position\uff1astatic HTML\u5143\u7d20\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7684\u5b9a\u4f4d\u65b9\u5f0f\u4e3astatic\u9759\u6001 \u9759\u6001\u5b9a\u4f4d\u7684\u5143\u7d20\u4e0d\u53d7top\u3001bottom\u3001left \u548c right \u5c5e\u6027\u7684\u5f71\u54cd\u3002 div.static { position: static; border: 3px solid #73AD21; } position:relative \u76f8\u5bf9\u6027\uff0c\u8bbe\u7f6e\u6539\u5c5e\u6027\u7684\u5143\u7d20\u76f8\u5bf9\u4e8e\u5176\u6b63\u5e38\u4f4d\u7f6e\u8fdb\u884c\u5b9a\u4f4d \u8bbe\u7f6e\u76f8\u5bf9\u5b9a\u4f4d\u7684\u5143\u7d20\u7684 top\u3001right\u3001bottom \u548c left \u5c5e\u6027\u5c06\u5bfc\u81f4\u5176\u504f\u79bb\u5176\u6b63\u5e38\u4f4d\u7f6e\u8fdb\u884c\u8c03\u6574\u3002 \u4e0d\u4f1a\u5bf9\u5176\u4f59\u5185\u5bb9\u8fdb\u884c\u8c03\u6574\u6765\u9002\u5e94\u5143\u7d20\u7559\u4e0b\u7684\u4efb\u4f55\u7a7a\u95f4\u3002 div.relative { position: relative; left: 30px; border: 3px solid #73AD21; } position:fixed \u8bbe\u7f6e\u8be5\u5c5e\u6027\u7684\u5143\u7d20\u662f\u76f8\u5bf9\u4e8e\u89c6\u53e3\u5b9a\u4f4d\u7684\uff0c\u6eda\u52a8\u9875\u9762\uff0c\u4f4d\u7f6e\u4e0d\u53d8 top\u3001right\u3001bottom \u548c left \u5c5e\u6027\u7528\u4e8e\u5b9a\u4f4d\u6b64\u5143\u7d20\u3002 div.fixed { position: fixed; bottom: 0; right: 0; width: 300px; border: 3px solid #73AD21; } position\uff1aabsolute position\uff1aabsolute \u7684\u5143\u7d20\u76f8\u5bf9\u4e8e\u6700\u8fd1\u7684\u5b9a\u4f4d\u7956\u5148\u5143\u7d20\u8fdb\u884c\u5b9a\u4f4d\uff08\u800c\u4e0d\u662f\u76f8\u5bf9\u4e8e\u89c6\u53e3\u5b9a\u4f4d\uff0c\u5982 fixed\uff09\u3002 \u7136\u800c\uff0c\u5982\u679c\u7edd\u5bf9\u5b9a\u4f4d\u7684\u5143\u7d20\u6ca1\u6709\u7956\u5148\uff0c\u5b83\u5c06\u4f7f\u7528\u6587\u6863\u4e3b\u4f53\uff08body\uff09\uff0c\u5e76\u968f\u9875\u9762\u6eda\u52a8\u4e00\u8d77\u79fb\u52a8\u3002 \u201c\u88ab\u5b9a\u4f4d\u7684\u201d\u5143\u7d20\u662f\u5176\u4f4d\u7f6e\u9664 static \u4ee5\u5916\u7684\u4efb\u4f55\u5143\u7d20\u3002 div.relative { position: relative; width: 400px; height: 200px; border: 3px solid #73AD21; } div.absolute { position: absolute; top: 80px; right: 0; width: 200px; height: 100px; border: 3px solid #73AD21; } \u91cd\u53e0\u5143\u7d20 \u5728\u5bf9\u5143\u7d20\u8fdb\u884c\u5b9a\u4f4d\u65f6\uff0c\u5b83\u4eec\u53ef\u4ee5\u4e0e\u5176\u4ed6\u5143\u7d20\u91cd\u53e0\u3002 z-index \u5c5e\u6027\u6307\u5b9a\u5143\u7d20\u7684\u5806\u6808\u987a\u5e8f\uff08\u54ea\u4e2a\u5143\u7d20\u5e94\u653e\u7f6e\u5728\u5176\u4ed6\u5143\u7d20\u7684\u524d\u9762\u6216\u540e\u9762\uff09\u3002 \u5143\u7d20\u53ef\u4ee5\u8bbe\u7f6e\u6b63\u6216\u8d1f\u7684\u5806\u53e0\u987a\u5e8f\uff1a img { position: absolute; left: 0px; top: 0px; z-index: -1; } \u66f4\u591a\u5173\u4e8eCSS\u5b9a\u4f4d\ud83c\udf88 1.4 \u6ea2\u51fa CSS overflow\u5c5e\u6027\u63a7\u5236\u5bf9\u4e0e\u592a\u5927\u800c\u65e0\u6cd5\u5b8c\u5168\u663e\u793a\u7684\u5185\u5bb9\u8fdb\u884c\u5904\u7406 \u8be5\u5c5e\u6027\u53ef\u4ee5\u8bbe\u7f6e\u4ee5\u4e0b\u7684\u503c visible \u9ed8\u8ba4\uff0c\u6ea2\u51fa\u4e0d\u8fdb\u884c\u88c1\u526a\uff0c\u5185\u5bb9\u5728\u5143\u7d20\u6846\u5916\u6e32\u67d3 hidden \u6ea2\u51fa\u88ab\u88c1\u526a\uff0c\u5176\u4f59\u5185\u5bb9\u5c06\u4e0d\u53ef\u89c1 scroll \u6ea2\u51fa\u88c1\u526a\uff0c\u53ef\u4ee5\u901a\u8fc7\u6eda\u52a8\u6761\u67e5\u770b\u5176\u4f59\u5185\u5bb9 auto \u4e0escroll\u7c7b\u4f3c\uff0c\u4ec5\u5728\u5fc5\u8981\u65f6\u6dfb\u52a0\u6eda\u52a8\u6761 div { overflow: hidden; } 1.5 \u6d6e\u52a8 CSS float \u5c5e\u6027\u89c4\u5b9a\u5143\u7d20\u5982\u4f55\u6d6e\u52a8 CSS clear\u5c5e\u6027\u89c4\u5b9a\u54ea\u4e9b\u5143\u7d20\u53ef\u4ee5\u5728\u6e05\u9664\u7684\u5143\u7d20\u65c1\u8fb9\u4ee5\u53ca\u54ea\u4e00\u4fa7\u6d6e\u52a8 float \u5c5e\u6027\u53ef\u4ee5\u8bbe\u7f6e\u4ee5\u4e0b\u503c\u4e4b\u4e00\uff1a left - \u5143\u7d20\u6d6e\u52a8\u5230\u5176\u5bb9\u5668\u7684\u5de6\u4fa7 right - \u5143\u7d20\u6d6e\u52a8\u5728\u5176\u5bb9\u5668\u7684\u53f3\u4fa7 none - \u5143\u7d20\u4e0d\u4f1a\u6d6e\u52a8\uff08\u5c06\u663e\u793a\u5728\u6587\u672c\u4e2d\u521a\u51fa\u73b0\u7684\u4f4d\u7f6e\uff09\u3002\u9ed8\u8ba4\u503c\u3002 inherit - \u5143\u7d20\u7ee7\u627f\u5176\u7236\u7ea7\u7684 float \u503c \u6700\u7b80\u5355\u7684\u7528\u6cd5\u662f\uff0c float \u5c5e\u6027\u53ef\u5b9e\u73b0\uff08\u62a5\u7eb8\u4e0a\uff09\u6587\u5b57\u5305\u56f4\u56fe\u7247\u7684\u6548\u679c\u3002 clear \u5c5e\u6027\u6307\u5b9a\u54ea\u4e9b\u5143\u7d20\u53ef\u4ee5\u6d6e\u52a8\u4e8e\u88ab\u6e05\u9664\u5143\u7d20\u7684\u65c1\u8fb9\u4ee5\u53ca\u54ea\u4e00\u4fa7\u3002 clear \u5c5e\u6027\u53ef\u8bbe\u7f6e\u4ee5\u4e0b\u503c\u4e4b\u4e00\uff1a none - \u5141\u8bb8\u4e24\u4fa7\u90fd\u6709\u6d6e\u52a8\u5143\u7d20\u3002\u9ed8\u8ba4\u503c left - \u5de6\u4fa7\u4e0d\u5141\u8bb8\u6d6e\u52a8\u5143\u7d20 right- \u53f3\u4fa7\u4e0d\u5141\u8bb8\u6d6e\u52a8\u5143\u7d20 both - \u5de6\u4fa7\u6216\u53f3\u4fa7\u5747\u4e0d\u5141\u8bb8\u6d6e\u52a8\u5143\u7d20 inherit - \u5143\u7d20\u7ee7\u627f\u5176\u7236\u7ea7\u7684 clear \u503c clearfix Hack \u5982\u679c\u4e00\u4e2a\u5143\u7d20\u6bd4\u5305\u542b\u5b83\u7684\u5143\u7d20\u9ad8\uff0c\u5e76\u4e14\u5b83\u662f\u6d6e\u52a8\u7684\uff0c\u5b83\u5c06\u201c\u6ea2\u51fa\u201d\u5230\u5176\u5bb9\u5668\u4e4b\u5916\uff1a \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5411\u5305\u542b\u5143\u7d20\u6dfb\u52a0 overflow: auto; .clearfix { overflow: auto; } 1.6 display:inline-block \u4e0e display: inline \u76f8\u6bd4\uff0c\u4e3b\u8981\u533a\u522b\u5728\u4e8e display: inline-block \u5141\u8bb8\u5728\u5143\u7d20\u4e0a\u8bbe\u7f6e\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u3002 \u540c\u6837\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86 display: inline-block\uff0c\u5c06\u4fdd\u7559\u4e0a\u4e0b\u5916\u8fb9\u8ddd/\u5185\u8fb9\u8ddd\uff0c\u800c display: inline \u5219\u4e0d\u4f1a\u3002 \u4e0e display: block \u76f8\u6bd4\uff0c\u4e3b\u8981\u533a\u522b\u5728\u4e8e display\uff1ainline-block \u5728\u5143\u7d20\u4e4b\u540e\u4e0d\u6dfb\u52a0\u6362\u884c\u7b26\uff0c\u56e0\u6b64\u8be5\u5143\u7d20\u53ef\u4ee5\u4f4d\u4e8e\u5176\u4ed6\u5143\u7d20\u65c1\u8fb9\u3002 1.7 \u6c34\u5e73&\u5782\u76f4\u5e03\u5c40 \u5c45\u4e2d\u5bf9\u9f50 \u8981\u4f7f\u5757\u5143\u7d20\uff08\u4f8b\u5982 div \uff09\u6c34\u5e73\u5c45\u4e2d\uff0c\u8bf7\u4f7f\u7528 margin: auto; .center { margin: auto; width: 50%; border: 3px solid green; padding: 20px; } \u5c45\u4e2d\u5bf9\u9f50\u6587\u672c \u5982\u679c\u4ec5\u9700\u5728\u5143\u7d20\u5185\u5c45\u4e2d\u6587\u672c\uff0c\u8bf7\u4f7f\u7528 text-align: center; .center { text-align: center; border: 3px solid green; } \u5de6\u53f3\u5bf9\u9f50 - position \u5bf9\u9f50\u5143\u7d20\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528 position: absolute; .right { position: absolute; right: 0px; width: 300px; border: 3px solid #73AD21; padding: 20px; } \u5de6\u53f3\u5bf9\u9f50 - float .right { float: right; width: 300px; border: 3px solid #73AD21; padding: 10px; } \u5782\u76f4\u5bf9\u9f50 - padding \u6709\u5f88\u591a\u65b9\u6cd5\u53ef\u4ee5\u5728 CSS \u4e2d\u5782\u76f4\u5bf9\u9f50\u5143\u7d20\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u662f\u4f7f\u7528\u4e0a\u4e0b\u5185\u8fb9\u8ddd\uff1a .center { padding: 70px 0; border: 3px solid green; } 2. CSS \u7ec4\u5408\u5668 \u7ec4\u5408\u5668\u662f\u89e3\u91ca\u9009\u62e9\u5668\u4e4b\u95f4\u5173\u7cfb\u7684\u67d0\u79cd\u673a\u5236\u3002 CSS \u9009\u62e9\u5668\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u7b80\u5355\u9009\u62e9\u5668\u3002\u5728\u7b80\u5355\u9009\u62e9\u5668\u4e4b\u95f4\uff0c\u6211\u4eec\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u7ec4\u5408\u5668\u3002 CSS \u4e2d\u6709\u56db\u79cd\u4e0d\u540c\u7684\u7ec4\u5408\u5668\uff1a \u540e\u4ee3\u9009\u62e9\u5668 (\u7a7a\u683c) \u5b50\u9009\u62e9\u5668 ( > ) \u76f8\u90bb\u5144\u5f1f\u9009\u62e9\u5668 ( + ) \u901a\u7528\u5144\u5f1f\u9009\u62e9\u5668 ( ~ ) 2.1 \u540e\u4ee3\u9009\u62e9\u5668 \u540e\u4ee3\u9009\u62e9\u5668\u5339\u914d\u5c5e\u4e8e\u6307\u5b9a\u5143\u7d20\u540e\u4ee3\u7684\u6240\u6709\u5143\u7d20\u3002 div p { background-color: yellow; } \u4e0b\u9762\u7684\u4f8b\u5b50\u9009\u62e9 div \u5143\u7d20\u5185\u7684\u6240\u6709 p \u5143\u7d20 2.2 \u5b50\u9009\u62e9\u5668 \u5b50\u9009\u62e9\u5668\u5339\u914d\u5c5e\u4e8e\u6307\u5b9a\u5143\u7d20\u5b50\u5143\u7d20\u7684\u6240\u6709\u5143\u7d20\u3002 \u4e0b\u9762\u7684\u4f8b\u5b50\u9009\u62e9\u5c5e\u4e8e div \u5143\u7d20\u5b50\u5143\u7d20\u7684\u6240\u6709 p \u5143\u7d20\uff1a div > p { background-color: yellow; }","title":"7. CSS \u66f4\u591a"},{"location":"Dev_documents/css_doc_plus/CSS_advanced/#7-css","text":"","title":"7. CSS \u66f4\u591a"},{"location":"Dev_documents/css_doc_plus/CSS_advanced/#1css","text":"","title":"1.CSS \u5e03\u5c40"},{"location":"Dev_documents/css_doc_plus/CSS_advanced/#11-display","text":"display \u5c5e\u6027\u662f\u63a7\u5236\u5e03\u5c40\u7684\u6700\u91cd\u8981\u7684\u5c5e\u6027 display\u5c5e\u6027\u89c4\u5b9a\u662f\u5426/\u5982\u4f55\u663e\u793a\u5143\u7d20 \u5927\u591a\u6570\u5143\u7d20\u7684\u9ed8\u8ba4display\u503c\u4e3a block \u6216 inline \u5757\u7ea7\u522b\u5143\u7d20 \u5757\u7ea7\u5143\u7d20\u603b\u662f\u4ece\u65b0\u884c\u5f00\u59cb\uff0c\u5e76\u5360\u636e\u53ef\u7528\u7684\u5168\u90e8\u5bbd\u5ea6\uff08\u5c3d\u53ef\u80fd\u5411\u5de6\u548c\u5411\u53f3\u4f38\u5c55\uff09\u3002 div h1-h6 p form header footer section \u884c\u5185\u5143\u7d20 \u5185\u8054\u5143\u7d20\u4e0d\u4ece\u65b0\u884c\u5f00\u59cb\uff0c\u4ec5\u5360\u7528\u6240\u9700\u7684\u5bbd\u5ea6 span a img display:none \u8be5\u5c5e\u6027\u503c\u901a\u5e38\u642d\u914djs\u4f7f\u7528\uff0c\u7528\u6765\u63a7\u5236\u5143\u7d20\u7684\u663e\u793a\u548c\u9690\u85cf \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cscript\u5143\u7d20\u4f7f\u7528 display:none \u8986\u76d6\u9ed8\u8ba4\u7684display\u503c \u5982\u524d\u6240\u8ff0\uff0c\u6bcf\u4e2a\u5143\u7d20\u90fd\u6709\u4e00\u4e2a\u9ed8\u8ba4 display \u503c\u3002\u4f46\u662f\uff0c\u60a8\u53ef\u4ee5\u8986\u76d6\u5b83\u3002 \u5c06\u884c\u5185\u5143\u7d20\u66f4\u6539\u4e3a\u5757\u5143\u7d20\uff0c\u53cd\u4e4b\u4ea6\u7136\uff0c\u5bf9\u4e8e\u4f7f\u9875\u9762\u4ee5\u7279\u5b9a\u65b9\u5f0f\u663e\u793a\u540c\u65f6\u4ecd\u9075\u5faa Web \u6807\u51c6\u5f88\u6709\u7528\u3002 \u9690\u85cf\u5143\u7d20 \u9009\u62e9 display:none \u8fd8\u662f visibility:hidden display:none \u9690\u85cf\u5143\u7d20\uff0c\u5e76\u4e14\u9875\u9762\u5e03\u5c40\u4f1a\u56e0\u4e3a\u5143\u7d20\u7684\u6d88\u5931\u800c\u53d1\u751f\u6539\u53d8 visibility:hidden \u5143\u7d20\u88ab\u9690\u85cf\uff0c\u4f46\u662f\u5b83\u4ecd\u7136\u4f1a\u5360\u636e\u7a7a\u95f4","title":"1.1 display\u5c5e\u6027"},{"location":"Dev_documents/css_doc_plus/CSS_advanced/#12-width","text":"\u4f7f\u7528 width\u3001max-width \u548c margin: auto \u5757\u7ea7\u5143\u7d20\u59cb\u7ec8\u5360\u7528\u53ef\u7528\u7684\u5168\u90e8\u5bbd\u5ea6\uff08\u5c3d\u53ef\u80fd\u5411\u5de6\u548c\u5411\u53f3\u4f38\u5c55\uff09 \u8bbe\u7f6e\u5757\u7ea7\u5143\u7d20\u7684width\u5c5e\u6027\uff0c\u9632\u6b62\u5b83\u5ef6\u4f38\u5230\u5bb9\u5668\u7684\u8fb9\u7f18\uff0c\u53ef\u4ee5\u5c06\u5916\u8fb9\u8ddd\u8bbe\u7f6e\u4e3aauto\uff0c\u8fd9\u6837\u53ef\u4ee5\u4f7f\u5143\u7d20\u5728\u5bb9\u5668\u4e2d\u6c34\u5e73\u5c45\u4e2d div.ex1 { width: 500px; margin: auto; border: 3px solid #73AD21; } div.ex2 { max-width: 500px; margin: auto; border: 3px solid #73AD21; }","title":"1.2 width \u5bbd\u5c5e\u6027"},{"location":"Dev_documents/css_doc_plus/CSS_advanced/#13-position","text":"position \u5c5e\u6027\u89c4\u5b9a\u5e94\u7528\u5143\u7d20\u7684\u5b9a\u4f4d\u65b9\u6cd5\u7684\u7c7b\u578b \u6709\u4e94\u4e2a\u4e0d\u540c\u7684\u4f4d\u7f6e\u503c static relative fixed absoulue sticky \u5143\u7d20\u5176\u5b9e\u662f\u4f7f\u7528 top\u3001bottom\u3001left \u548c right \u5c5e\u6027\u5b9a\u4f4d\u7684\u3002 \u4f46\u662f\uff0c\u9664\u975e\u9996\u5148\u8bbe\u7f6e\u4e86 position \u5c5e\u6027\uff0c\u5426\u5219\u8fd9\u4e9b\u5c5e\u6027\u5c06\u4e0d\u8d77\u4f5c\u7528\u3002\u6839\u636e\u4e0d\u540c\u7684 position \u503c\uff0c\u5b83\u4eec\u7684\u5de5\u4f5c\u65b9\u5f0f\u4e5f\u4e0d\u540c\u3002 position\uff1astatic HTML\u5143\u7d20\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7684\u5b9a\u4f4d\u65b9\u5f0f\u4e3astatic\u9759\u6001 \u9759\u6001\u5b9a\u4f4d\u7684\u5143\u7d20\u4e0d\u53d7top\u3001bottom\u3001left \u548c right \u5c5e\u6027\u7684\u5f71\u54cd\u3002 div.static { position: static; border: 3px solid #73AD21; } position:relative \u76f8\u5bf9\u6027\uff0c\u8bbe\u7f6e\u6539\u5c5e\u6027\u7684\u5143\u7d20\u76f8\u5bf9\u4e8e\u5176\u6b63\u5e38\u4f4d\u7f6e\u8fdb\u884c\u5b9a\u4f4d \u8bbe\u7f6e\u76f8\u5bf9\u5b9a\u4f4d\u7684\u5143\u7d20\u7684 top\u3001right\u3001bottom \u548c left \u5c5e\u6027\u5c06\u5bfc\u81f4\u5176\u504f\u79bb\u5176\u6b63\u5e38\u4f4d\u7f6e\u8fdb\u884c\u8c03\u6574\u3002 \u4e0d\u4f1a\u5bf9\u5176\u4f59\u5185\u5bb9\u8fdb\u884c\u8c03\u6574\u6765\u9002\u5e94\u5143\u7d20\u7559\u4e0b\u7684\u4efb\u4f55\u7a7a\u95f4\u3002 div.relative { position: relative; left: 30px; border: 3px solid #73AD21; } position:fixed \u8bbe\u7f6e\u8be5\u5c5e\u6027\u7684\u5143\u7d20\u662f\u76f8\u5bf9\u4e8e\u89c6\u53e3\u5b9a\u4f4d\u7684\uff0c\u6eda\u52a8\u9875\u9762\uff0c\u4f4d\u7f6e\u4e0d\u53d8 top\u3001right\u3001bottom \u548c left \u5c5e\u6027\u7528\u4e8e\u5b9a\u4f4d\u6b64\u5143\u7d20\u3002 div.fixed { position: fixed; bottom: 0; right: 0; width: 300px; border: 3px solid #73AD21; } position\uff1aabsolute position\uff1aabsolute \u7684\u5143\u7d20\u76f8\u5bf9\u4e8e\u6700\u8fd1\u7684\u5b9a\u4f4d\u7956\u5148\u5143\u7d20\u8fdb\u884c\u5b9a\u4f4d\uff08\u800c\u4e0d\u662f\u76f8\u5bf9\u4e8e\u89c6\u53e3\u5b9a\u4f4d\uff0c\u5982 fixed\uff09\u3002 \u7136\u800c\uff0c\u5982\u679c\u7edd\u5bf9\u5b9a\u4f4d\u7684\u5143\u7d20\u6ca1\u6709\u7956\u5148\uff0c\u5b83\u5c06\u4f7f\u7528\u6587\u6863\u4e3b\u4f53\uff08body\uff09\uff0c\u5e76\u968f\u9875\u9762\u6eda\u52a8\u4e00\u8d77\u79fb\u52a8\u3002 \u201c\u88ab\u5b9a\u4f4d\u7684\u201d\u5143\u7d20\u662f\u5176\u4f4d\u7f6e\u9664 static \u4ee5\u5916\u7684\u4efb\u4f55\u5143\u7d20\u3002 div.relative { position: relative; width: 400px; height: 200px; border: 3px solid #73AD21; } div.absolute { position: absolute; top: 80px; right: 0; width: 200px; height: 100px; border: 3px solid #73AD21; } \u91cd\u53e0\u5143\u7d20 \u5728\u5bf9\u5143\u7d20\u8fdb\u884c\u5b9a\u4f4d\u65f6\uff0c\u5b83\u4eec\u53ef\u4ee5\u4e0e\u5176\u4ed6\u5143\u7d20\u91cd\u53e0\u3002 z-index \u5c5e\u6027\u6307\u5b9a\u5143\u7d20\u7684\u5806\u6808\u987a\u5e8f\uff08\u54ea\u4e2a\u5143\u7d20\u5e94\u653e\u7f6e\u5728\u5176\u4ed6\u5143\u7d20\u7684\u524d\u9762\u6216\u540e\u9762\uff09\u3002 \u5143\u7d20\u53ef\u4ee5\u8bbe\u7f6e\u6b63\u6216\u8d1f\u7684\u5806\u53e0\u987a\u5e8f\uff1a img { position: absolute; left: 0px; top: 0px; z-index: -1; } \u66f4\u591a\u5173\u4e8eCSS\u5b9a\u4f4d\ud83c\udf88","title":"1.3 position\u5c5e\u6027"},{"location":"Dev_documents/css_doc_plus/CSS_advanced/#14","text":"CSS overflow\u5c5e\u6027\u63a7\u5236\u5bf9\u4e0e\u592a\u5927\u800c\u65e0\u6cd5\u5b8c\u5168\u663e\u793a\u7684\u5185\u5bb9\u8fdb\u884c\u5904\u7406 \u8be5\u5c5e\u6027\u53ef\u4ee5\u8bbe\u7f6e\u4ee5\u4e0b\u7684\u503c visible \u9ed8\u8ba4\uff0c\u6ea2\u51fa\u4e0d\u8fdb\u884c\u88c1\u526a\uff0c\u5185\u5bb9\u5728\u5143\u7d20\u6846\u5916\u6e32\u67d3 hidden \u6ea2\u51fa\u88ab\u88c1\u526a\uff0c\u5176\u4f59\u5185\u5bb9\u5c06\u4e0d\u53ef\u89c1 scroll \u6ea2\u51fa\u88c1\u526a\uff0c\u53ef\u4ee5\u901a\u8fc7\u6eda\u52a8\u6761\u67e5\u770b\u5176\u4f59\u5185\u5bb9 auto \u4e0escroll\u7c7b\u4f3c\uff0c\u4ec5\u5728\u5fc5\u8981\u65f6\u6dfb\u52a0\u6eda\u52a8\u6761 div { overflow: hidden; }","title":"1.4 \u6ea2\u51fa"},{"location":"Dev_documents/css_doc_plus/CSS_advanced/#15","text":"CSS float \u5c5e\u6027\u89c4\u5b9a\u5143\u7d20\u5982\u4f55\u6d6e\u52a8 CSS clear\u5c5e\u6027\u89c4\u5b9a\u54ea\u4e9b\u5143\u7d20\u53ef\u4ee5\u5728\u6e05\u9664\u7684\u5143\u7d20\u65c1\u8fb9\u4ee5\u53ca\u54ea\u4e00\u4fa7\u6d6e\u52a8 float \u5c5e\u6027\u53ef\u4ee5\u8bbe\u7f6e\u4ee5\u4e0b\u503c\u4e4b\u4e00\uff1a left - \u5143\u7d20\u6d6e\u52a8\u5230\u5176\u5bb9\u5668\u7684\u5de6\u4fa7 right - \u5143\u7d20\u6d6e\u52a8\u5728\u5176\u5bb9\u5668\u7684\u53f3\u4fa7 none - \u5143\u7d20\u4e0d\u4f1a\u6d6e\u52a8\uff08\u5c06\u663e\u793a\u5728\u6587\u672c\u4e2d\u521a\u51fa\u73b0\u7684\u4f4d\u7f6e\uff09\u3002\u9ed8\u8ba4\u503c\u3002 inherit - \u5143\u7d20\u7ee7\u627f\u5176\u7236\u7ea7\u7684 float \u503c \u6700\u7b80\u5355\u7684\u7528\u6cd5\u662f\uff0c float \u5c5e\u6027\u53ef\u5b9e\u73b0\uff08\u62a5\u7eb8\u4e0a\uff09\u6587\u5b57\u5305\u56f4\u56fe\u7247\u7684\u6548\u679c\u3002 clear \u5c5e\u6027\u6307\u5b9a\u54ea\u4e9b\u5143\u7d20\u53ef\u4ee5\u6d6e\u52a8\u4e8e\u88ab\u6e05\u9664\u5143\u7d20\u7684\u65c1\u8fb9\u4ee5\u53ca\u54ea\u4e00\u4fa7\u3002 clear \u5c5e\u6027\u53ef\u8bbe\u7f6e\u4ee5\u4e0b\u503c\u4e4b\u4e00\uff1a none - \u5141\u8bb8\u4e24\u4fa7\u90fd\u6709\u6d6e\u52a8\u5143\u7d20\u3002\u9ed8\u8ba4\u503c left - \u5de6\u4fa7\u4e0d\u5141\u8bb8\u6d6e\u52a8\u5143\u7d20 right- \u53f3\u4fa7\u4e0d\u5141\u8bb8\u6d6e\u52a8\u5143\u7d20 both - \u5de6\u4fa7\u6216\u53f3\u4fa7\u5747\u4e0d\u5141\u8bb8\u6d6e\u52a8\u5143\u7d20 inherit - \u5143\u7d20\u7ee7\u627f\u5176\u7236\u7ea7\u7684 clear \u503c clearfix Hack \u5982\u679c\u4e00\u4e2a\u5143\u7d20\u6bd4\u5305\u542b\u5b83\u7684\u5143\u7d20\u9ad8\uff0c\u5e76\u4e14\u5b83\u662f\u6d6e\u52a8\u7684\uff0c\u5b83\u5c06\u201c\u6ea2\u51fa\u201d\u5230\u5176\u5bb9\u5668\u4e4b\u5916\uff1a \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5411\u5305\u542b\u5143\u7d20\u6dfb\u52a0 overflow: auto; .clearfix { overflow: auto; }","title":"1.5 \u6d6e\u52a8"},{"location":"Dev_documents/css_doc_plus/CSS_advanced/#16-displayinline-block","text":"\u4e0e display: inline \u76f8\u6bd4\uff0c\u4e3b\u8981\u533a\u522b\u5728\u4e8e display: inline-block \u5141\u8bb8\u5728\u5143\u7d20\u4e0a\u8bbe\u7f6e\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u3002 \u540c\u6837\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86 display: inline-block\uff0c\u5c06\u4fdd\u7559\u4e0a\u4e0b\u5916\u8fb9\u8ddd/\u5185\u8fb9\u8ddd\uff0c\u800c display: inline \u5219\u4e0d\u4f1a\u3002 \u4e0e display: block \u76f8\u6bd4\uff0c\u4e3b\u8981\u533a\u522b\u5728\u4e8e display\uff1ainline-block \u5728\u5143\u7d20\u4e4b\u540e\u4e0d\u6dfb\u52a0\u6362\u884c\u7b26\uff0c\u56e0\u6b64\u8be5\u5143\u7d20\u53ef\u4ee5\u4f4d\u4e8e\u5176\u4ed6\u5143\u7d20\u65c1\u8fb9\u3002","title":"1.6 display:inline-block"},{"location":"Dev_documents/css_doc_plus/CSS_advanced/#17","text":"\u5c45\u4e2d\u5bf9\u9f50 \u8981\u4f7f\u5757\u5143\u7d20\uff08\u4f8b\u5982 div \uff09\u6c34\u5e73\u5c45\u4e2d\uff0c\u8bf7\u4f7f\u7528 margin: auto; .center { margin: auto; width: 50%; border: 3px solid green; padding: 20px; } \u5c45\u4e2d\u5bf9\u9f50\u6587\u672c \u5982\u679c\u4ec5\u9700\u5728\u5143\u7d20\u5185\u5c45\u4e2d\u6587\u672c\uff0c\u8bf7\u4f7f\u7528 text-align: center; .center { text-align: center; border: 3px solid green; } \u5de6\u53f3\u5bf9\u9f50 - position \u5bf9\u9f50\u5143\u7d20\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528 position: absolute; .right { position: absolute; right: 0px; width: 300px; border: 3px solid #73AD21; padding: 20px; } \u5de6\u53f3\u5bf9\u9f50 - float .right { float: right; width: 300px; border: 3px solid #73AD21; padding: 10px; } \u5782\u76f4\u5bf9\u9f50 - padding \u6709\u5f88\u591a\u65b9\u6cd5\u53ef\u4ee5\u5728 CSS \u4e2d\u5782\u76f4\u5bf9\u9f50\u5143\u7d20\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u662f\u4f7f\u7528\u4e0a\u4e0b\u5185\u8fb9\u8ddd\uff1a .center { padding: 70px 0; border: 3px solid green; }","title":"1.7 \u6c34\u5e73&amp;\u5782\u76f4\u5e03\u5c40"},{"location":"Dev_documents/css_doc_plus/CSS_advanced/#2-css","text":"\u7ec4\u5408\u5668\u662f\u89e3\u91ca\u9009\u62e9\u5668\u4e4b\u95f4\u5173\u7cfb\u7684\u67d0\u79cd\u673a\u5236\u3002 CSS \u9009\u62e9\u5668\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u7b80\u5355\u9009\u62e9\u5668\u3002\u5728\u7b80\u5355\u9009\u62e9\u5668\u4e4b\u95f4\uff0c\u6211\u4eec\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u7ec4\u5408\u5668\u3002 CSS \u4e2d\u6709\u56db\u79cd\u4e0d\u540c\u7684\u7ec4\u5408\u5668\uff1a \u540e\u4ee3\u9009\u62e9\u5668 (\u7a7a\u683c) \u5b50\u9009\u62e9\u5668 ( > ) \u76f8\u90bb\u5144\u5f1f\u9009\u62e9\u5668 ( + ) \u901a\u7528\u5144\u5f1f\u9009\u62e9\u5668 ( ~ )","title":"2. CSS \u7ec4\u5408\u5668"},{"location":"Dev_documents/css_doc_plus/CSS_advanced/#21","text":"\u540e\u4ee3\u9009\u62e9\u5668\u5339\u914d\u5c5e\u4e8e\u6307\u5b9a\u5143\u7d20\u540e\u4ee3\u7684\u6240\u6709\u5143\u7d20\u3002 div p { background-color: yellow; } \u4e0b\u9762\u7684\u4f8b\u5b50\u9009\u62e9 div \u5143\u7d20\u5185\u7684\u6240\u6709 p \u5143\u7d20","title":"2.1 \u540e\u4ee3\u9009\u62e9\u5668"},{"location":"Dev_documents/css_doc_plus/CSS_advanced/#22","text":"\u5b50\u9009\u62e9\u5668\u5339\u914d\u5c5e\u4e8e\u6307\u5b9a\u5143\u7d20\u5b50\u5143\u7d20\u7684\u6240\u6709\u5143\u7d20\u3002 \u4e0b\u9762\u7684\u4f8b\u5b50\u9009\u62e9\u5c5e\u4e8e div \u5143\u7d20\u5b50\u5143\u7d20\u7684\u6240\u6709 p \u5143\u7d20\uff1a div > p { background-color: yellow; }","title":"2.2 \u5b50\u9009\u62e9\u5668"},{"location":"Dev_documents/html_doc/HTML%E6%89%8B%E5%86%8C/","text":"5. \u5e38\u7528HTML\u6807\u7b7e 1.1 HTML \u6807\u9898 HTML \u6807\u9898\uff08Heading) <h1>This is a heading</h1> <h2>This is a heading</h2> <h3>This is a heading</h3> 1.2 HTML \u6bb5\u843d HTML \u6bb5\u843d\u662f\u901a\u8fc7p\u6807\u7b7e\u8fdb\u884c\u5b9a\u4e49\u7684\u3002 <p>This is a paragraph.</p> <p>This is another paragraph.</p> \u6bb5\u843d\u7684\u5206\u884c <p>This is<br />a para<br />graph with line breaks</p> 1.3 HTML \u94fe\u63a5 HTML \u94fe\u63a5\u662f\u901a\u8fc7a\u6807\u7b7e\u8fdb\u884c\u5b9a\u4e49\u7684\u3002 <a href=\"http://www.w3school.com.cn\">This is a link</a> target \u5c5e\u6027 \u4f7f\u7528 Target \u5c5e\u6027\uff0c\u4f60\u53ef\u4ee5\u5b9a\u4e49\u88ab\u94fe\u63a5\u7684\u6587\u6863\u5728\u4f55\u5904\u663e\u793a\u3002 \u4e0b\u9762\u7684\u8fd9\u884c\u4f1a\u5728\u65b0\u7a97\u53e3\u6253\u5f00\u6587\u6863\uff1a html <a href=\"http://www.w3school.com.cn/\" target=\"_blank\">Visit W3School!</a> target=\"_blank 1.4 \u56fe\u50cf <img src=\"w3school.jpg\" width=\"104\" height=\"142\" /> 1.5 \u6c34\u5e73\u7ebf hr \u5143\u7d20\u53ef\u7528\u4e8e\u5206\u9694\u5185\u5bb9\u3002 <p>This is a paragraph</p> <hr /> <p>This is a paragraph</p> <hr /> <p>This is a paragraph</p> 1.6 \u5f15\u7528 \u77ed\u5f15\u7528 \u6d4f\u89c8\u5668\u901a\u5e38\u4f1a\u4e3a q \u5143\u7d20\u5305\u56f4 \u5f15\u53f7 \u3002 html <p>WWF \u7684\u76ee\u6807\u662f\uff1a<q>\u6784\u5efa\u4eba\u4e0e\u81ea\u7136\u548c\u8c10\u5171\u5b58\u7684\u4e16\u754c\u3002</q></p> \u957f\u5f15\u7528 html <p>\u4ee5\u4e0b\u5185\u5bb9\u5f15\u7528\u81ea WWF \u7684\u7f51\u7ad9\uff1a</p> <blockquote cite=\"http://www.worldwildlife.org/who/index.html\"> \u4e94\u5341\u5e74\u6765\uff0cWWF \u4e00\u76f4\u81f4\u529b\u4e8e\u4fdd\u62a4\u81ea\u7136\u754c\u7684\u672a\u6765\u3002 \u4e16\u754c\u9886\u5148\u7684\u73af\u4fdd\u7ec4\u7ec7\uff0cWWF \u5de5\u4f5c\u4e8e 100 \u4e2a\u56fd\u5bb6\uff0c \u5e76\u5f97\u5230\u7f8e\u56fd\u4e00\u767e\u4e8c\u5341\u4e07\u4f1a\u5458\u53ca\u5168\u7403\u8fd1\u4e94\u767e\u4e07\u4f1a\u5458\u7684\u652f\u6301\u3002 </blockquote> 2. HTML \u5c5e\u6027 HTML \u6807\u7b7e\u53ef\u4ee5\u62e5\u6709\u5c5e\u6027\u3002\u5c5e\u6027\u63d0\u4f9b\u4e86\u6709\u5173 HTML \u5143\u7d20\u7684 \u66f4\u591a\u7684\u4fe1\u606f \u3002 \u5c5e\u6027\u603b\u662f\u4ee5\u540d\u79f0/\u503c\u5bf9\u7684\u5f62\u5f0f\u51fa\u73b0\uff0c\u6bd4\u5982\uff1a name=\"value\" \u3002 \u5c5e\u6027\u603b\u662f\u5728 HTML \u5143\u7d20\u7684 \u5f00\u59cb\u6807\u7b7e \u4e2d\u89c4\u5b9a\u3002 \u94fe\u63a5\u7684\u5730\u5740\u5728 href \u5c5e\u6027\u4e2d\u6307\u5b9a <a href=\"http://www.w3school.com.cn\">This is a link</a> \u9002\u7528\u4e8e\u5927\u591a\u6570 HTML \u5143\u7d20\u7684\u5c5e\u6027: \u5c5e\u6027 \u503c detail class Classname \u7c7b\u540d id id \u5143\u7d20\u7684\u552f\u4e00id style Style_definition \u884c\u5185\u6837\u5f0f\uff08inline style\uff09 title Text \u5143\u7d20\u7684\u989d\u5916\u4fe1\u606f 3. HTML \u6837\u5f0f \u5728css\u4e2d\uff0c\u4f7f\u7528\u66f4\u591a\u7684\u6837\u5f0f\u6765\u7f8e\u5316\u7f51\u7ad9 HTML\u4e2d\u5f15\u7528\u7684\u6837\u5f0f\u6807\u7b7e\uff1a 4. HTML \u56fe\u50cf \u5728 HTML \u4e2d\uff0c\u56fe\u50cf\u7531 <img> \u6807\u7b7e\u5b9a\u4e49\u3002 <img> \u662f\u7a7a\u6807\u7b7e\uff0c\u610f\u601d\u662f\u8bf4\uff0c\u5b83\u53ea\u5305\u542b\u5c5e\u6027\uff0c\u5e76\u4e14\u6ca1\u6709\u95ed\u5408\u6807\u7b7e\u3002 \u8981\u5728\u9875\u9762\u4e0a\u663e\u793a\u56fe\u50cf\uff0c\u4f60\u9700\u8981\u4f7f\u7528\u6e90\u5c5e\u6027\uff08src\uff09\u3002src \u6307 \"source\"\u3002\u6e90\u5c5e\u6027\u7684\u503c\u662f\u56fe\u50cf\u7684 URL \u5730\u5740\u3002 \u5b9a\u4e49\u56fe\u50cf\u7684\u8bed\u6cd5\u662f\uff1a <img src=\"url\" /> \u66ff\u6362\u6587\u672c\u5c5e\u6027\uff08Alt\uff09 alt \u5c5e\u6027\u7528\u6765\u4e3a\u56fe\u50cf\u5b9a\u4e49\u4e00\u4e32\u9884\u5907\u7684\u53ef\u66ff\u6362\u7684\u6587\u672c\u3002\u66ff\u6362\u6587\u672c\u5c5e\u6027\u7684\u503c\u662f\u7528\u6237\u5b9a\u4e49\u7684\u3002 html <img src=\"boat.gif\" alt=\"Big Boat\"> \u5f53\u6d4f\u89c8\u5668\u65e0\u6cd5\u8f7d\u5165\u56fe\u50cf\u65f6\uff0c\u66ff\u6362\u6587\u672c\u5c5e\u6027\u53ef\u544a\u8bc9\u8bfb\u8005\u4ed6\u4eec\u5931\u53bb\u7684\u4fe1\u606f\u3002 \u6b64\u65f6\uff0c\u6d4f\u89c8\u5668\u5c06\u663e\u793a\u8fd9\u4e2a\u66ff\u4ee3\u6027\u7684\u6587\u672c\u800c\u4e0d\u662f\u56fe\u50cf\u3002 \u4e3a\u9875\u9762\u4e0a\u7684\u56fe\u50cf\u90fd\u52a0\u4e0a\u66ff\u6362\u6587\u672c\u5c5e\u6027\u662f\u4e2a\u597d\u4e60\u60ef\uff0c\u8fd9\u6837\u6709\u52a9\u4e8e\u66f4\u597d\u7684\u663e\u793a\u4fe1\u606f\uff0c\u5e76\u4e14\u5bf9\u4e8e\u90a3\u4e9b\u4f7f\u7528\u7eaf\u6587\u672c\u6d4f\u89c8\u5668\u7684\u4eba\u6765\u8bf4\u662f\u975e\u5e38\u6709\u7528\u7684\u3002 5. HTML \u8868\u683c \u8868\u683c\u7531 <table> \u6807\u7b7e\u6765\u5b9a\u4e49\u3002 \u6bcf\u4e2a\u8868\u683c\u5747\u6709\u82e5\u5e72\u884c\uff08\u7531 <tr> \u6807\u7b7e\u5b9a\u4e49\uff09\uff0c\u6bcf\u884c\u88ab\u5206\u5272\u4e3a\u82e5\u5e72\u5355\u5143\u683c\uff08\u7531 <td> \u6807\u7b7e\u5b9a\u4e49\uff09\u3002 \u5b57\u6bcd td \u6307\u8868\u683c\u6570\u636e\uff08table data\uff09\uff0c\u5373\u6570\u636e\u5355\u5143\u683c\u7684\u5185\u5bb9\u3002 \u6570\u636e\u5355\u5143\u683c\u53ef\u4ee5\u5305\u542b\u6587\u672c\u3001\u56fe\u7247\u3001\u5217\u8868\u3001\u6bb5\u843d\u3001\u8868\u5355\u3001\u6c34\u5e73\u7ebf\u3001\u8868\u683c\u7b49\u7b49\u3002 <table border=\"1\"> <tr> <td>row 1, cell 1</td> <td>row 1, cell 2</td> </tr> <tr> <td>row 2, cell 1</td> <td>row 2, cell 2</td> </tr> </table> \u8868\u683c\u548c\u8fb9\u6846\u5c5e\u6027 html <table border=\"1\"> <tr> <td>Row 1, cell 1</td> <td>Row 1, cell 2</td> </tr> </table> \u8868\u683c\u7684\u8868\u5934 \u8868\u683c\u7684\u8868\u5934\u4f7f\u7528 <th> \u6807\u7b7e\u8fdb\u884c\u5b9a\u4e49\u3002 html <table border=\"1\"> <tr> <th>Heading</th> <th>Another Heading</th> </tr> <tr> <td>row 1, cell 1</td> <td>row 1, cell 2</td> </tr> <tr> <td>row 2, cell 1</td> <td>row 2, cell 2</td> </tr> </table> 6. HTML \u5217\u8868 HTML \u652f\u6301\u6709\u5e8f\u3001\u65e0\u5e8f\u548c\u5b9a\u4e49\u5217\u8868 \u65e0\u5e8f\u5217\u8868 \u65e0\u5e8f\u5217\u8868\u662f\u4e00\u4e2a\u9879\u76ee\u7684\u5217\u8868\uff0c\u6b64\u5217\u9879\u76ee\u4f7f\u7528\u7c97\u4f53\u5706\u70b9\uff08\u5178\u578b\u7684\u5c0f\u9ed1\u5706\u5708\uff09\u8fdb\u884c\u6807\u8bb0\u3002 \u65e0\u5e8f\u5217\u8868\u59cb\u4e8e <ul> \u6807\u7b7e\u3002\u6bcf\u4e2a\u5217\u8868\u9879\u59cb\u4e8e <li> \u3002 html <ul> <li>Coffee</li> <li>Milk</li> </ul> \u6709\u5e8f\u5217\u8868 \u6709\u5e8f\u5217\u8868\u4e5f\u662f\u4e00\u5217\u9879\u76ee\uff0c\u5217\u8868\u9879\u76ee\u4f7f\u7528\u6570\u5b57\u8fdb\u884c\u6807\u8bb0\u3002 \u6709\u5e8f\u5217\u8868\u59cb\u4e8e <ol> \u6807\u7b7e\u3002\u6bcf\u4e2a\u5217\u8868\u9879\u59cb\u4e8e <li> \u6807\u7b7e\u3002 html <ol> <li>Coffee</li> <li>Milk</li> </ol> \u5b9a\u4e49\u5217\u8868 html <dl> <dt>Coffee</dt> <dd>Black hot drink</dd> <dt>Milk</dt> <dd>White cold drink</dd> </dl> 7. HTML div & span \u53ef\u4ee5\u901a\u8fc7 <div> \u548c <span> \u5c06 HTML \u5143\u7d20\u7ec4\u5408\u8d77\u6765\u3002 7.1 HTML \u5757\u5143\u7d20 \u5927\u591a\u6570 HTML \u5143\u7d20\u88ab\u5b9a\u4e49\u4e3a\u5757\u7ea7\u5143\u7d20\u6216\u5185\u8054\u5143\u7d20\u3002 \u5757\u7ea7\u5143\u7d20\u5728\u6d4f\u89c8\u5668\u663e\u793a\u65f6\uff0c\u901a\u5e38\u4f1a\u4ee5\u65b0\u884c\u6765\u5f00\u59cb\uff08\u548c\u7ed3\u675f\uff09\u3002 <h1>, <p>, <ul>, <table> \u5c5e\u4e8e\u5757\u7ea7\u5143\u7d20 7.2 HTML \u5185\u8054\u5143\u7d20 \u5185\u8054\u5143\u7d20\u5728\u663e\u793a\u65f6\u901a\u5e38\u4e0d\u4f1a\u4ee5\u65b0\u884c\u5f00\u59cb\u3002 <b>, <td>, <a>, <img> 7.3 HTML div HTML div\u5143\u7d20\u662f \u5757\u7ea7\u5143\u7d20 \uff0c\u5b83\u662f\u53ef\u7528\u4e8e\u7ec4\u5408\u5176\u4ed6 HTML \u5143\u7d20\u7684\u5bb9\u5668\u3002 Div \u5143\u7d20\u6ca1\u6709\u7279\u5b9a\u7684\u542b\u4e49\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u7531\u4e8e\u5b83\u5c5e\u4e8e\u5757\u7ea7\u5143\u7d20\uff0c\u6d4f\u89c8\u5668\u4f1a\u5728\u5176\u524d\u540e\u663e\u793a\u6298\u884c\u3002 \u5982\u679c\u4e0e CSS \u4e00\u540c\u4f7f\u7528\uff0cdiv \u5143\u7d20\u53ef\u7528\u4e8e\u5bf9\u5927\u7684\u5185\u5bb9\u5757\u8bbe\u7f6e\u6837\u5f0f\u5c5e\u6027\u3002 7.4 HTML span HTML span \u5143\u7d20\u662f\u5185\u8054\u5143\u7d20\uff0c\u53ef\u7528\u4f5c\u6587\u672c\u7684\u5bb9\u5668\u3002 span \u5143\u7d20\u4e5f\u6ca1\u6709\u7279\u5b9a\u7684\u542b\u4e49\u3002 \u5f53\u4e0e CSS \u4e00\u540c\u4f7f\u7528\u65f6\uff0cspan \u5143\u7d20\u53ef\u7528\u4e8e\u4e3a\u90e8\u5206\u6587\u672c\u8bbe\u7f6e\u6837\u5f0f\u5c5e\u6027\u3002 8. HTML class \u5bf9 HTML \u8fdb\u884c\u5206\u7c7b\uff08\u8bbe\u7f6e\u7c7b\uff09\uff0c\u4f7f\u6211\u4eec\u80fd\u591f\u4e3a \u5143\u7d20\u7684\u7c7b\u5b9a\u4e49 CSS \u6837\u5f0f \u3002 <!DOCTYPE html> <html> <head> <style> .cities { background-color:black; color:white; margin:20px; padding:20px; } </style> </head> <body> <div class=\"cities\"> <h2>London</h2> <p> London is the capital city of England. It is the most populous city in the United Kingdom, with a metropolitan area of over 13 million inhabitants. </p> </div> </body> </html> <!DOCTYPE html> <html> <head> <style> .cities { background-color:black; color:white; margin:20px; padding:20px; } </style> </head> <body> <div class=\"cities\"> <h2>London</h2> <p>London is the capital city of England. It is the most populous city in the United Kingdom, with a metropolitan area of over 13 million inhabitants.</p> </div> <div class=\"cities\"> <h2>Paris</h2> <p>Paris is the capital and most populous city of France.</p> </div> <div class=\"cities\"> <h2>Tokyo</h2> <p>Tokyo is the capital of Japan, the center of the Greater Tokyo Area, and the most populous metropolitan area in the world.</p> </div> </body> </html> <!DOCTYPE html> <html> <head> <style> span.red {color:red;} </style> </head> <body> <h1>My <span class=\"red\">Important</span> Heading</h1> </body> </html> 9. HTML id HTML id \u5c5e\u6027\u4e3aHTML\u4e2d\u7684\u5143\u7d20\u6307\u5b9a\u552f\u4e00id \u4e00\u4e2aHTML\u6587\u6863\u4e2d\u4e0d\u80fd\u5b58\u5728\u591a\u4e2a\u5177\u6709\u76f8\u540cid\u7684\u5143\u7d20 id\u5c5e\u6027\u7528\u4e8e\u6307\u5411\u6837\u5f0f\u8868\u4e2d\u7684\u7279\u5b9a\u6837\u5f0f\u58f0\u660e JavaScript \u4e5f\u53ef\u4f7f\u7528\u5b83\u6765\u8bbf\u95ee\u548c\u64cd\u4f5c\u62e5\u6709\u7279\u5b9a ID \u7684\u5143\u7d20\u3002 9.1 id\u9009\u62e9\u5668\u7684\u8bed\u6cd5 \u5199\u4e00\u4e2a\u4e95\u53f7 (#)\uff0c\u540e\u8ddf\u4e00\u4e2a id \u540d\u79f0\u3002\u7136\u540e\uff0c\u5728\u82b1\u62ec\u53f7 {} \u4e2d\u5b9a\u4e49 CSS \u5c5e\u6027\u3002 <!DOCTYPE html> <html> <head> <style> #myHeader { background-color: lightblue; color: black; padding: 40px; text-align: center; } </style> </head> <body> <h1 id=\"myHeader\">My Header</h1> </body> </html> 10. HTML iframe \u5185\u8054\u6846\u67b6 iframe \u7528\u6765\u5728\u7f51\u9875\u4e2d\u5d4c\u5957\u663e\u793a\u7f51\u9875 \u8bed\u6cd5 html <iframe src=\"URL\"></iframe> \u8bbe\u7f6e\u9ad8\u5ea6\uff0c\u5bbd\u5ea6 html <iframe src=\"demo_iframe.htm\" width=\"200\" height=\"200\"></iframe> \u5220\u9664\u8fb9\u6846 html <iframe src=\"demo_iframe.htm\" frameborder=\"0\"></iframe> \u4f7f\u7528iframe\u4f5c\u4e3a\u94fe\u63a5\u7684\u76ee\u6807 iframe \u53ef\u7528\u4f5c\u94fe\u63a5\u7684\u76ee\u6807\uff08target\uff09 \u94fe\u63a5\u7684 target \u5c5e\u6027\u5fc5\u987b\u5f15\u7528 iframe \u7684 name \u5c5e\u6027\uff1a html <iframe src=\"demo_iframe.htm\" name=\"iframe_a\"></iframe> <p><a href=\"http://www.w3school.com.cn\" target=\"iframe_a\">W3School.com.cn</a></p> 11. \u5d4c\u5957 Javascript script\u6807\u7b7e\u7528\u4e8e\u5b9a\u4e49\u5ba2\u6237\u7aef \u811a\u672c JavaScript \u7684\u5e38\u89c1\u7528\u9014\u662f\u56fe\u50cf\u5904\u7406\u3001\u8868\u5355\u9a8c\u8bc1\u548c\u5185\u5bb9\u7684\u52a8\u6001\u66f4\u6539\u3002 js\u66f4\u6539\u5185\u5bb9 js\u66f4\u6539\u6837\u5f0f js\u66f4\u6539\u5c5e\u6027 12. HTML \u7f51\u9875\u5e03\u5c40 <body> <div id=\"header\"> <h1>City Gallery</h1> </div> <div id=\"nav\"> London<br> Paris<br> Tokyo<br> </div> <div id=\"section\"> <h1>London</h1> <p> London is the capital city of England. It is the most populous city in the United Kingdom, with a metropolitan area of over 13 million inhabitants. </p> <p> Standing on the River Thames, London has been a major settlement for two millennia, its history going back to its founding by the Romans, who named it Londinium. </p> </div> <div id=\"footer\"> Copyright W3School.com.cn </div> </body> 13. HTML \u8868\u5355 HTML \u8868\u5355\u7528\u4e8e\u641c\u96c6\u4e0d\u540c\u7c7b\u578b\u7684\u7528\u6237\u8f93\u5165\u3002 13.1 \u8868\u5355\u683c\u5f0f form\u8868\u5355 html <form> . form elements . </form> Input \u5143\u7d20 \u6587\u672c\u8f93\u5165 input \u5143\u7d20\u6709\u5f88\u591a\u5f62\u6001\uff0c\u6839\u636e\u4e0d\u540c\u7684 type \u5c5e\u6027\u3002 input type=\"text\"\u5b9a\u4e49\u7528\u4e8e\u6587\u672c\u8f93\u5165\u7684\u5355\u884c\u8f93\u5165\u5b57\u6bb5 html <form> First name:<br> <input type=\"text\" name=\"firstname\"> <br> Last name:<br> <input type=\"text\" name=\"lastname\"> </form> input type=\"radio\"\u5b9a\u4e49\u5355\u9009\u6309\u94ae html <form> <input type=\"radio\" name=\"sex\" value=\"male\" checked>Male <br> <input type=\"radio\" name=\"sex\" value=\"female\">Female </form> 13.2 \u8868\u5355\u63d0\u4ea4 \u63d0\u4ea4\u6309\u94ae input type=\"submit\"\u5b9a\u4e49\u7528\u4e8e\u5411\u8868\u5355\u5904\u7406\u7a0b\u5e8f\uff08form-handler\uff09\u63d0\u4ea4\u8868\u5355\u7684\u6309\u94ae action\u5c5e\u6027 action\u5c5e\u6027\u5b9a\u4e49\u5728\u8868\u5355\u88ab\u63d0\u4ea4\u65f6\u6267\u884c\u7684\u52a8\u4f5c\uff0c \u5982\u679caction\u5c5e\u6027\u7701\u7565\uff0caction\u9ed8\u8ba4\u4e3a\u5f53\u524d\u9875\u9762\u7684URL method\u5c5e\u6027 method\u5c5e\u6027\u89c4\u5b9a\u8868\u5355\u5728\u63d0\u4ea4\u65f6\u6240\u4f7f\u7528\u7684HTTP\u65b9\u6cd5\uff08GET/POST\uff09 html <form action=\"action_page.php\" method=\"GET\"> <form action=\"action_page.php\" method=\"POST\"> name\u5c5e\u6027 \u5982\u679c\u8981\u6b63\u786e\u7684\u88ab\u63d0\u4ea4\uff0c\u6bcf\u4e2a\u5b57\u6bb5\u5fc5\u987b\u8bbe\u7f6e\u4e00\u4e2aname\u5c5e\u6027 14. HTML form\u5c5e\u6027 14.1 action\u5c5e\u6027 action\u5c5e\u6027\u5b9a\u4e49\u63d0\u4ea4\u8868\u5355\u65f6\u8981\u6267\u884c\u7684\u64cd\u4f5c \u5f53\u7528\u6237\u5355\u51fb\u201c\u63d0\u4ea4\u201d\u6309\u94ae\u65f6\uff0c\u8868\u5355\u6570\u636e\u5c06\u53d1\u9001\u5230\u670d\u52a1\u5668\u4e0a\u7684\u6587\u4ef6\u4e2d \u5982\u679c\u7701\u7565 action \u5c5e\u6027\uff0c\u5219\u5c06 action \u8bbe\u7f6e\u4e3a\u5f53\u524d\u9875\u9762\u3002 14.2 target\u5c5e\u6027 Target\u5c5e\u6027\u89c4\u5b9a\u63d0\u4ea4\u8868\u5355\u540e\u5728\u4f55\u5904\u663e\u793a\u54cd\u5e94\u3002 target\u5c5e\u6027\u53ef\u8bbe\u7f6e\u4ee5\u4e0b\u503c\u4e4b\u4e00 14.3 method\u5c5e\u6027 method \u5c5e\u6027\u6307\u5b9a\u63d0\u4ea4\u8868\u5355\u6570\u636e\u65f6\u8981\u4f7f\u7528\u7684 HTTP \u65b9\u6cd5\u3002 \u8868\u5355\u6570\u636e\u53ef\u4ee5\u4f5c\u4e3a URL \u53d8\u91cf\uff08\u4f7f\u7528 method=\"get\" \uff09 \u6216\u4f5c\u4e3a HTTP post \u4e8b\u52a1\uff08\u4f7f\u7528 method=\"post\" \uff09\u53d1\u9001\u3002 \u5173\u4e8eGET\u8bf7\u6c42 \u4ee5\u540d\u79f0/\u503c\u5bf9\u7684\u5f62\u5f0f\u5c06\u8868\u5355\u6570\u636e\u8ffd\u52a0\u5230 URL \u6c38\u8fdc\u4e0d\u8981\u4f7f\u7528 GET \u53d1\u9001\u654f\u611f\u6570\u636e\uff01 URL \u7684\u957f\u5ea6\u53d7\u5230\u9650\u5236\uff082048 \u4e2a\u5b57\u7b26\uff09 \u5bf9\u4e8e\u7528\u6237\u5e0c\u671b\u5c06\u7ed3\u679c\u6dfb\u52a0\u4e3a\u4e66\u7b7e\u7684\u8868\u5355\u63d0\u4ea4\u5f88\u6709\u7528 GET \u9002\u7528\u4e8e\u975e\u5b89\u5168\u6570\u636e \u5173\u4e8ePOST\u8bf7\u6c42 \u5c06\u8868\u5355\u6570\u636e\u9644\u52a0\u5728 HTTP \u8bf7\u6c42\u7684\u6b63\u6587\u4e2d POST \u6ca1\u6709\u5927\u5c0f\u9650\u5236\uff0c\u53ef\u7528\u4e8e\u53d1\u9001\u5927\u91cf\u6570\u636e\u3002 14.4 autocompelete \u5c5e\u6027 autocompelete\u5c5e\u6027\u89c4\u5b9a\u8868\u5355\u662f\u5426\u5e94\u6253\u5f00\u81ea\u52a8\u5b8c\u6210\u529f\u80fd\u3002 \u542f\u7528\u81ea\u52a8\u5b8c\u6210\u529f\u80fd\u540e\uff0c\u6d4f\u89c8\u5668\u4f1a\u6839\u636e\u7528\u6237\u4e4b\u524d\u8f93\u5165\u7684\u503c\u81ea\u52a8\u586b\u5199\u503c\u3002 14.5 Novalidate \u5c5e\u6027 Novalidate\u5c5e\u6027\u662f\u4e00\u4e2a\u5e03\u5c14\u5c5e\u6027\u3002 \u5982\u679c\u5df2\u8bbe\u7f6e\uff0c\u5b83\u89c4\u5b9a\u63d0\u4ea4\u65f6\u4e0d\u5e94\u9a8c\u8bc1\u8868\u5355\u6570\u636e\u3002","title":"5. \u5e38\u7528HTML\u6807\u7b7e"},{"location":"Dev_documents/html_doc/HTML%E6%89%8B%E5%86%8C/#5-html","text":"","title":"5. \u5e38\u7528HTML\u6807\u7b7e"},{"location":"Dev_documents/html_doc/HTML%E6%89%8B%E5%86%8C/#11-html","text":"HTML \u6807\u9898\uff08Heading) <h1>This is a heading</h1> <h2>This is a heading</h2> <h3>This is a heading</h3>","title":"1.1 HTML \u6807\u9898"},{"location":"Dev_documents/html_doc/HTML%E6%89%8B%E5%86%8C/#12-html","text":"HTML \u6bb5\u843d\u662f\u901a\u8fc7p\u6807\u7b7e\u8fdb\u884c\u5b9a\u4e49\u7684\u3002 <p>This is a paragraph.</p> <p>This is another paragraph.</p> \u6bb5\u843d\u7684\u5206\u884c <p>This is<br />a para<br />graph with line breaks</p>","title":"1.2 HTML \u6bb5\u843d"},{"location":"Dev_documents/html_doc/HTML%E6%89%8B%E5%86%8C/#13-html","text":"HTML \u94fe\u63a5\u662f\u901a\u8fc7a\u6807\u7b7e\u8fdb\u884c\u5b9a\u4e49\u7684\u3002 <a href=\"http://www.w3school.com.cn\">This is a link</a> target \u5c5e\u6027 \u4f7f\u7528 Target \u5c5e\u6027\uff0c\u4f60\u53ef\u4ee5\u5b9a\u4e49\u88ab\u94fe\u63a5\u7684\u6587\u6863\u5728\u4f55\u5904\u663e\u793a\u3002 \u4e0b\u9762\u7684\u8fd9\u884c\u4f1a\u5728\u65b0\u7a97\u53e3\u6253\u5f00\u6587\u6863\uff1a html <a href=\"http://www.w3school.com.cn/\" target=\"_blank\">Visit W3School!</a> target=\"_blank","title":"1.3 HTML \u94fe\u63a5"},{"location":"Dev_documents/html_doc/HTML%E6%89%8B%E5%86%8C/#14","text":"<img src=\"w3school.jpg\" width=\"104\" height=\"142\" />","title":"1.4 \u56fe\u50cf"},{"location":"Dev_documents/html_doc/HTML%E6%89%8B%E5%86%8C/#15","text":"hr \u5143\u7d20\u53ef\u7528\u4e8e\u5206\u9694\u5185\u5bb9\u3002 <p>This is a paragraph</p> <hr /> <p>This is a paragraph</p> <hr /> <p>This is a paragraph</p>","title":"1.5 \u6c34\u5e73\u7ebf"},{"location":"Dev_documents/html_doc/HTML%E6%89%8B%E5%86%8C/#16","text":"\u77ed\u5f15\u7528 \u6d4f\u89c8\u5668\u901a\u5e38\u4f1a\u4e3a q \u5143\u7d20\u5305\u56f4 \u5f15\u53f7 \u3002 html <p>WWF \u7684\u76ee\u6807\u662f\uff1a<q>\u6784\u5efa\u4eba\u4e0e\u81ea\u7136\u548c\u8c10\u5171\u5b58\u7684\u4e16\u754c\u3002</q></p> \u957f\u5f15\u7528 html <p>\u4ee5\u4e0b\u5185\u5bb9\u5f15\u7528\u81ea WWF \u7684\u7f51\u7ad9\uff1a</p> <blockquote cite=\"http://www.worldwildlife.org/who/index.html\"> \u4e94\u5341\u5e74\u6765\uff0cWWF \u4e00\u76f4\u81f4\u529b\u4e8e\u4fdd\u62a4\u81ea\u7136\u754c\u7684\u672a\u6765\u3002 \u4e16\u754c\u9886\u5148\u7684\u73af\u4fdd\u7ec4\u7ec7\uff0cWWF \u5de5\u4f5c\u4e8e 100 \u4e2a\u56fd\u5bb6\uff0c \u5e76\u5f97\u5230\u7f8e\u56fd\u4e00\u767e\u4e8c\u5341\u4e07\u4f1a\u5458\u53ca\u5168\u7403\u8fd1\u4e94\u767e\u4e07\u4f1a\u5458\u7684\u652f\u6301\u3002 </blockquote>","title":"1.6 \u5f15\u7528"},{"location":"Dev_documents/html_doc/HTML%E6%89%8B%E5%86%8C/#2-html","text":"HTML \u6807\u7b7e\u53ef\u4ee5\u62e5\u6709\u5c5e\u6027\u3002\u5c5e\u6027\u63d0\u4f9b\u4e86\u6709\u5173 HTML \u5143\u7d20\u7684 \u66f4\u591a\u7684\u4fe1\u606f \u3002 \u5c5e\u6027\u603b\u662f\u4ee5\u540d\u79f0/\u503c\u5bf9\u7684\u5f62\u5f0f\u51fa\u73b0\uff0c\u6bd4\u5982\uff1a name=\"value\" \u3002 \u5c5e\u6027\u603b\u662f\u5728 HTML \u5143\u7d20\u7684 \u5f00\u59cb\u6807\u7b7e \u4e2d\u89c4\u5b9a\u3002 \u94fe\u63a5\u7684\u5730\u5740\u5728 href \u5c5e\u6027\u4e2d\u6307\u5b9a <a href=\"http://www.w3school.com.cn\">This is a link</a> \u9002\u7528\u4e8e\u5927\u591a\u6570 HTML \u5143\u7d20\u7684\u5c5e\u6027: \u5c5e\u6027 \u503c detail class Classname \u7c7b\u540d id id \u5143\u7d20\u7684\u552f\u4e00id style Style_definition \u884c\u5185\u6837\u5f0f\uff08inline style\uff09 title Text \u5143\u7d20\u7684\u989d\u5916\u4fe1\u606f","title":"2. HTML \u5c5e\u6027"},{"location":"Dev_documents/html_doc/HTML%E6%89%8B%E5%86%8C/#3-html","text":"\u5728css\u4e2d\uff0c\u4f7f\u7528\u66f4\u591a\u7684\u6837\u5f0f\u6765\u7f8e\u5316\u7f51\u7ad9 HTML\u4e2d\u5f15\u7528\u7684\u6837\u5f0f\u6807\u7b7e\uff1a","title":"3. HTML \u6837\u5f0f"},{"location":"Dev_documents/html_doc/HTML%E6%89%8B%E5%86%8C/#4-html","text":"\u5728 HTML \u4e2d\uff0c\u56fe\u50cf\u7531 <img> \u6807\u7b7e\u5b9a\u4e49\u3002 <img> \u662f\u7a7a\u6807\u7b7e\uff0c\u610f\u601d\u662f\u8bf4\uff0c\u5b83\u53ea\u5305\u542b\u5c5e\u6027\uff0c\u5e76\u4e14\u6ca1\u6709\u95ed\u5408\u6807\u7b7e\u3002 \u8981\u5728\u9875\u9762\u4e0a\u663e\u793a\u56fe\u50cf\uff0c\u4f60\u9700\u8981\u4f7f\u7528\u6e90\u5c5e\u6027\uff08src\uff09\u3002src \u6307 \"source\"\u3002\u6e90\u5c5e\u6027\u7684\u503c\u662f\u56fe\u50cf\u7684 URL \u5730\u5740\u3002 \u5b9a\u4e49\u56fe\u50cf\u7684\u8bed\u6cd5\u662f\uff1a <img src=\"url\" /> \u66ff\u6362\u6587\u672c\u5c5e\u6027\uff08Alt\uff09 alt \u5c5e\u6027\u7528\u6765\u4e3a\u56fe\u50cf\u5b9a\u4e49\u4e00\u4e32\u9884\u5907\u7684\u53ef\u66ff\u6362\u7684\u6587\u672c\u3002\u66ff\u6362\u6587\u672c\u5c5e\u6027\u7684\u503c\u662f\u7528\u6237\u5b9a\u4e49\u7684\u3002 html <img src=\"boat.gif\" alt=\"Big Boat\"> \u5f53\u6d4f\u89c8\u5668\u65e0\u6cd5\u8f7d\u5165\u56fe\u50cf\u65f6\uff0c\u66ff\u6362\u6587\u672c\u5c5e\u6027\u53ef\u544a\u8bc9\u8bfb\u8005\u4ed6\u4eec\u5931\u53bb\u7684\u4fe1\u606f\u3002 \u6b64\u65f6\uff0c\u6d4f\u89c8\u5668\u5c06\u663e\u793a\u8fd9\u4e2a\u66ff\u4ee3\u6027\u7684\u6587\u672c\u800c\u4e0d\u662f\u56fe\u50cf\u3002 \u4e3a\u9875\u9762\u4e0a\u7684\u56fe\u50cf\u90fd\u52a0\u4e0a\u66ff\u6362\u6587\u672c\u5c5e\u6027\u662f\u4e2a\u597d\u4e60\u60ef\uff0c\u8fd9\u6837\u6709\u52a9\u4e8e\u66f4\u597d\u7684\u663e\u793a\u4fe1\u606f\uff0c\u5e76\u4e14\u5bf9\u4e8e\u90a3\u4e9b\u4f7f\u7528\u7eaf\u6587\u672c\u6d4f\u89c8\u5668\u7684\u4eba\u6765\u8bf4\u662f\u975e\u5e38\u6709\u7528\u7684\u3002","title":"4. HTML \u56fe\u50cf"},{"location":"Dev_documents/html_doc/HTML%E6%89%8B%E5%86%8C/#5-html_1","text":"\u8868\u683c\u7531 <table> \u6807\u7b7e\u6765\u5b9a\u4e49\u3002 \u6bcf\u4e2a\u8868\u683c\u5747\u6709\u82e5\u5e72\u884c\uff08\u7531 <tr> \u6807\u7b7e\u5b9a\u4e49\uff09\uff0c\u6bcf\u884c\u88ab\u5206\u5272\u4e3a\u82e5\u5e72\u5355\u5143\u683c\uff08\u7531 <td> \u6807\u7b7e\u5b9a\u4e49\uff09\u3002 \u5b57\u6bcd td \u6307\u8868\u683c\u6570\u636e\uff08table data\uff09\uff0c\u5373\u6570\u636e\u5355\u5143\u683c\u7684\u5185\u5bb9\u3002 \u6570\u636e\u5355\u5143\u683c\u53ef\u4ee5\u5305\u542b\u6587\u672c\u3001\u56fe\u7247\u3001\u5217\u8868\u3001\u6bb5\u843d\u3001\u8868\u5355\u3001\u6c34\u5e73\u7ebf\u3001\u8868\u683c\u7b49\u7b49\u3002 <table border=\"1\"> <tr> <td>row 1, cell 1</td> <td>row 1, cell 2</td> </tr> <tr> <td>row 2, cell 1</td> <td>row 2, cell 2</td> </tr> </table> \u8868\u683c\u548c\u8fb9\u6846\u5c5e\u6027 html <table border=\"1\"> <tr> <td>Row 1, cell 1</td> <td>Row 1, cell 2</td> </tr> </table> \u8868\u683c\u7684\u8868\u5934 \u8868\u683c\u7684\u8868\u5934\u4f7f\u7528 <th> \u6807\u7b7e\u8fdb\u884c\u5b9a\u4e49\u3002 html <table border=\"1\"> <tr> <th>Heading</th> <th>Another Heading</th> </tr> <tr> <td>row 1, cell 1</td> <td>row 1, cell 2</td> </tr> <tr> <td>row 2, cell 1</td> <td>row 2, cell 2</td> </tr> </table>","title":"5. HTML \u8868\u683c"},{"location":"Dev_documents/html_doc/HTML%E6%89%8B%E5%86%8C/#6-html","text":"HTML \u652f\u6301\u6709\u5e8f\u3001\u65e0\u5e8f\u548c\u5b9a\u4e49\u5217\u8868 \u65e0\u5e8f\u5217\u8868 \u65e0\u5e8f\u5217\u8868\u662f\u4e00\u4e2a\u9879\u76ee\u7684\u5217\u8868\uff0c\u6b64\u5217\u9879\u76ee\u4f7f\u7528\u7c97\u4f53\u5706\u70b9\uff08\u5178\u578b\u7684\u5c0f\u9ed1\u5706\u5708\uff09\u8fdb\u884c\u6807\u8bb0\u3002 \u65e0\u5e8f\u5217\u8868\u59cb\u4e8e <ul> \u6807\u7b7e\u3002\u6bcf\u4e2a\u5217\u8868\u9879\u59cb\u4e8e <li> \u3002 html <ul> <li>Coffee</li> <li>Milk</li> </ul> \u6709\u5e8f\u5217\u8868 \u6709\u5e8f\u5217\u8868\u4e5f\u662f\u4e00\u5217\u9879\u76ee\uff0c\u5217\u8868\u9879\u76ee\u4f7f\u7528\u6570\u5b57\u8fdb\u884c\u6807\u8bb0\u3002 \u6709\u5e8f\u5217\u8868\u59cb\u4e8e <ol> \u6807\u7b7e\u3002\u6bcf\u4e2a\u5217\u8868\u9879\u59cb\u4e8e <li> \u6807\u7b7e\u3002 html <ol> <li>Coffee</li> <li>Milk</li> </ol> \u5b9a\u4e49\u5217\u8868 html <dl> <dt>Coffee</dt> <dd>Black hot drink</dd> <dt>Milk</dt> <dd>White cold drink</dd> </dl>","title":"6. HTML \u5217\u8868"},{"location":"Dev_documents/html_doc/HTML%E6%89%8B%E5%86%8C/#7-html-div-span","text":"\u53ef\u4ee5\u901a\u8fc7 <div> \u548c <span> \u5c06 HTML \u5143\u7d20\u7ec4\u5408\u8d77\u6765\u3002","title":"7. HTML  div  &amp;  span"},{"location":"Dev_documents/html_doc/HTML%E6%89%8B%E5%86%8C/#71-html","text":"\u5927\u591a\u6570 HTML \u5143\u7d20\u88ab\u5b9a\u4e49\u4e3a\u5757\u7ea7\u5143\u7d20\u6216\u5185\u8054\u5143\u7d20\u3002 \u5757\u7ea7\u5143\u7d20\u5728\u6d4f\u89c8\u5668\u663e\u793a\u65f6\uff0c\u901a\u5e38\u4f1a\u4ee5\u65b0\u884c\u6765\u5f00\u59cb\uff08\u548c\u7ed3\u675f\uff09\u3002 <h1>, <p>, <ul>, <table> \u5c5e\u4e8e\u5757\u7ea7\u5143\u7d20","title":"7.1 HTML \u5757\u5143\u7d20"},{"location":"Dev_documents/html_doc/HTML%E6%89%8B%E5%86%8C/#72-html","text":"\u5185\u8054\u5143\u7d20\u5728\u663e\u793a\u65f6\u901a\u5e38\u4e0d\u4f1a\u4ee5\u65b0\u884c\u5f00\u59cb\u3002 <b>, <td>, <a>, <img>","title":"7.2 HTML \u5185\u8054\u5143\u7d20"},{"location":"Dev_documents/html_doc/HTML%E6%89%8B%E5%86%8C/#73-html-div","text":"HTML div\u5143\u7d20\u662f \u5757\u7ea7\u5143\u7d20 \uff0c\u5b83\u662f\u53ef\u7528\u4e8e\u7ec4\u5408\u5176\u4ed6 HTML \u5143\u7d20\u7684\u5bb9\u5668\u3002 Div \u5143\u7d20\u6ca1\u6709\u7279\u5b9a\u7684\u542b\u4e49\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u7531\u4e8e\u5b83\u5c5e\u4e8e\u5757\u7ea7\u5143\u7d20\uff0c\u6d4f\u89c8\u5668\u4f1a\u5728\u5176\u524d\u540e\u663e\u793a\u6298\u884c\u3002 \u5982\u679c\u4e0e CSS \u4e00\u540c\u4f7f\u7528\uff0cdiv \u5143\u7d20\u53ef\u7528\u4e8e\u5bf9\u5927\u7684\u5185\u5bb9\u5757\u8bbe\u7f6e\u6837\u5f0f\u5c5e\u6027\u3002","title":"7.3  HTML   div"},{"location":"Dev_documents/html_doc/HTML%E6%89%8B%E5%86%8C/#74-html-span","text":"HTML span \u5143\u7d20\u662f\u5185\u8054\u5143\u7d20\uff0c\u53ef\u7528\u4f5c\u6587\u672c\u7684\u5bb9\u5668\u3002 span \u5143\u7d20\u4e5f\u6ca1\u6709\u7279\u5b9a\u7684\u542b\u4e49\u3002 \u5f53\u4e0e CSS \u4e00\u540c\u4f7f\u7528\u65f6\uff0cspan \u5143\u7d20\u53ef\u7528\u4e8e\u4e3a\u90e8\u5206\u6587\u672c\u8bbe\u7f6e\u6837\u5f0f\u5c5e\u6027\u3002","title":"7.4 HTML    span"},{"location":"Dev_documents/html_doc/HTML%E6%89%8B%E5%86%8C/#8-html-class","text":"\u5bf9 HTML \u8fdb\u884c\u5206\u7c7b\uff08\u8bbe\u7f6e\u7c7b\uff09\uff0c\u4f7f\u6211\u4eec\u80fd\u591f\u4e3a \u5143\u7d20\u7684\u7c7b\u5b9a\u4e49 CSS \u6837\u5f0f \u3002 <!DOCTYPE html> <html> <head> <style> .cities { background-color:black; color:white; margin:20px; padding:20px; } </style> </head> <body> <div class=\"cities\"> <h2>London</h2> <p> London is the capital city of England. It is the most populous city in the United Kingdom, with a metropolitan area of over 13 million inhabitants. </p> </div> </body> </html> <!DOCTYPE html> <html> <head> <style> .cities { background-color:black; color:white; margin:20px; padding:20px; } </style> </head> <body> <div class=\"cities\"> <h2>London</h2> <p>London is the capital city of England. It is the most populous city in the United Kingdom, with a metropolitan area of over 13 million inhabitants.</p> </div> <div class=\"cities\"> <h2>Paris</h2> <p>Paris is the capital and most populous city of France.</p> </div> <div class=\"cities\"> <h2>Tokyo</h2> <p>Tokyo is the capital of Japan, the center of the Greater Tokyo Area, and the most populous metropolitan area in the world.</p> </div> </body> </html> <!DOCTYPE html> <html> <head> <style> span.red {color:red;} </style> </head> <body> <h1>My <span class=\"red\">Important</span> Heading</h1> </body> </html>","title":"8. HTML class"},{"location":"Dev_documents/html_doc/HTML%E6%89%8B%E5%86%8C/#9-html-id","text":"HTML id \u5c5e\u6027\u4e3aHTML\u4e2d\u7684\u5143\u7d20\u6307\u5b9a\u552f\u4e00id \u4e00\u4e2aHTML\u6587\u6863\u4e2d\u4e0d\u80fd\u5b58\u5728\u591a\u4e2a\u5177\u6709\u76f8\u540cid\u7684\u5143\u7d20 id\u5c5e\u6027\u7528\u4e8e\u6307\u5411\u6837\u5f0f\u8868\u4e2d\u7684\u7279\u5b9a\u6837\u5f0f\u58f0\u660e JavaScript \u4e5f\u53ef\u4f7f\u7528\u5b83\u6765\u8bbf\u95ee\u548c\u64cd\u4f5c\u62e5\u6709\u7279\u5b9a ID \u7684\u5143\u7d20\u3002","title":"9. HTML id"},{"location":"Dev_documents/html_doc/HTML%E6%89%8B%E5%86%8C/#91-id","text":"\u5199\u4e00\u4e2a\u4e95\u53f7 (#)\uff0c\u540e\u8ddf\u4e00\u4e2a id \u540d\u79f0\u3002\u7136\u540e\uff0c\u5728\u82b1\u62ec\u53f7 {} \u4e2d\u5b9a\u4e49 CSS \u5c5e\u6027\u3002 <!DOCTYPE html> <html> <head> <style> #myHeader { background-color: lightblue; color: black; padding: 40px; text-align: center; } </style> </head> <body> <h1 id=\"myHeader\">My Header</h1> </body> </html>","title":"9.1 id\u9009\u62e9\u5668\u7684\u8bed\u6cd5"},{"location":"Dev_documents/html_doc/HTML%E6%89%8B%E5%86%8C/#10-html-iframe","text":"iframe \u7528\u6765\u5728\u7f51\u9875\u4e2d\u5d4c\u5957\u663e\u793a\u7f51\u9875 \u8bed\u6cd5 html <iframe src=\"URL\"></iframe> \u8bbe\u7f6e\u9ad8\u5ea6\uff0c\u5bbd\u5ea6 html <iframe src=\"demo_iframe.htm\" width=\"200\" height=\"200\"></iframe> \u5220\u9664\u8fb9\u6846 html <iframe src=\"demo_iframe.htm\" frameborder=\"0\"></iframe> \u4f7f\u7528iframe\u4f5c\u4e3a\u94fe\u63a5\u7684\u76ee\u6807 iframe \u53ef\u7528\u4f5c\u94fe\u63a5\u7684\u76ee\u6807\uff08target\uff09 \u94fe\u63a5\u7684 target \u5c5e\u6027\u5fc5\u987b\u5f15\u7528 iframe \u7684 name \u5c5e\u6027\uff1a html <iframe src=\"demo_iframe.htm\" name=\"iframe_a\"></iframe> <p><a href=\"http://www.w3school.com.cn\" target=\"iframe_a\">W3School.com.cn</a></p>","title":"10. HTML  iframe \u5185\u8054\u6846\u67b6"},{"location":"Dev_documents/html_doc/HTML%E6%89%8B%E5%86%8C/#11-javascript","text":"script\u6807\u7b7e\u7528\u4e8e\u5b9a\u4e49\u5ba2\u6237\u7aef \u811a\u672c JavaScript \u7684\u5e38\u89c1\u7528\u9014\u662f\u56fe\u50cf\u5904\u7406\u3001\u8868\u5355\u9a8c\u8bc1\u548c\u5185\u5bb9\u7684\u52a8\u6001\u66f4\u6539\u3002 js\u66f4\u6539\u5185\u5bb9 js\u66f4\u6539\u6837\u5f0f js\u66f4\u6539\u5c5e\u6027","title":"11. \u5d4c\u5957 Javascript"},{"location":"Dev_documents/html_doc/HTML%E6%89%8B%E5%86%8C/#12-html_1","text":"<body> <div id=\"header\"> <h1>City Gallery</h1> </div> <div id=\"nav\"> London<br> Paris<br> Tokyo<br> </div> <div id=\"section\"> <h1>London</h1> <p> London is the capital city of England. It is the most populous city in the United Kingdom, with a metropolitan area of over 13 million inhabitants. </p> <p> Standing on the River Thames, London has been a major settlement for two millennia, its history going back to its founding by the Romans, who named it Londinium. </p> </div> <div id=\"footer\"> Copyright W3School.com.cn </div> </body>","title":"12. HTML \u7f51\u9875\u5e03\u5c40"},{"location":"Dev_documents/html_doc/HTML%E6%89%8B%E5%86%8C/#13-html_1","text":"HTML \u8868\u5355\u7528\u4e8e\u641c\u96c6\u4e0d\u540c\u7c7b\u578b\u7684\u7528\u6237\u8f93\u5165\u3002","title":"13. HTML \u8868\u5355"},{"location":"Dev_documents/html_doc/HTML%E6%89%8B%E5%86%8C/#131","text":"form\u8868\u5355 html <form> . form elements . </form> Input \u5143\u7d20 \u6587\u672c\u8f93\u5165 input \u5143\u7d20\u6709\u5f88\u591a\u5f62\u6001\uff0c\u6839\u636e\u4e0d\u540c\u7684 type \u5c5e\u6027\u3002 input type=\"text\"\u5b9a\u4e49\u7528\u4e8e\u6587\u672c\u8f93\u5165\u7684\u5355\u884c\u8f93\u5165\u5b57\u6bb5 html <form> First name:<br> <input type=\"text\" name=\"firstname\"> <br> Last name:<br> <input type=\"text\" name=\"lastname\"> </form> input type=\"radio\"\u5b9a\u4e49\u5355\u9009\u6309\u94ae html <form> <input type=\"radio\" name=\"sex\" value=\"male\" checked>Male <br> <input type=\"radio\" name=\"sex\" value=\"female\">Female </form>","title":"13.1 \u8868\u5355\u683c\u5f0f"},{"location":"Dev_documents/html_doc/HTML%E6%89%8B%E5%86%8C/#132","text":"\u63d0\u4ea4\u6309\u94ae input type=\"submit\"\u5b9a\u4e49\u7528\u4e8e\u5411\u8868\u5355\u5904\u7406\u7a0b\u5e8f\uff08form-handler\uff09\u63d0\u4ea4\u8868\u5355\u7684\u6309\u94ae action\u5c5e\u6027 action\u5c5e\u6027\u5b9a\u4e49\u5728\u8868\u5355\u88ab\u63d0\u4ea4\u65f6\u6267\u884c\u7684\u52a8\u4f5c\uff0c \u5982\u679caction\u5c5e\u6027\u7701\u7565\uff0caction\u9ed8\u8ba4\u4e3a\u5f53\u524d\u9875\u9762\u7684URL method\u5c5e\u6027 method\u5c5e\u6027\u89c4\u5b9a\u8868\u5355\u5728\u63d0\u4ea4\u65f6\u6240\u4f7f\u7528\u7684HTTP\u65b9\u6cd5\uff08GET/POST\uff09 html <form action=\"action_page.php\" method=\"GET\"> <form action=\"action_page.php\" method=\"POST\"> name\u5c5e\u6027 \u5982\u679c\u8981\u6b63\u786e\u7684\u88ab\u63d0\u4ea4\uff0c\u6bcf\u4e2a\u5b57\u6bb5\u5fc5\u987b\u8bbe\u7f6e\u4e00\u4e2aname\u5c5e\u6027","title":"13.2 \u8868\u5355\u63d0\u4ea4"},{"location":"Dev_documents/html_doc/HTML%E6%89%8B%E5%86%8C/#14-html-form","text":"","title":"14. HTML form\u5c5e\u6027"},{"location":"Dev_documents/html_doc/HTML%E6%89%8B%E5%86%8C/#141-action","text":"action\u5c5e\u6027\u5b9a\u4e49\u63d0\u4ea4\u8868\u5355\u65f6\u8981\u6267\u884c\u7684\u64cd\u4f5c \u5f53\u7528\u6237\u5355\u51fb\u201c\u63d0\u4ea4\u201d\u6309\u94ae\u65f6\uff0c\u8868\u5355\u6570\u636e\u5c06\u53d1\u9001\u5230\u670d\u52a1\u5668\u4e0a\u7684\u6587\u4ef6\u4e2d \u5982\u679c\u7701\u7565 action \u5c5e\u6027\uff0c\u5219\u5c06 action \u8bbe\u7f6e\u4e3a\u5f53\u524d\u9875\u9762\u3002","title":"14.1 action\u5c5e\u6027"},{"location":"Dev_documents/html_doc/HTML%E6%89%8B%E5%86%8C/#142-target","text":"Target\u5c5e\u6027\u89c4\u5b9a\u63d0\u4ea4\u8868\u5355\u540e\u5728\u4f55\u5904\u663e\u793a\u54cd\u5e94\u3002 target\u5c5e\u6027\u53ef\u8bbe\u7f6e\u4ee5\u4e0b\u503c\u4e4b\u4e00","title":"14.2 target\u5c5e\u6027"},{"location":"Dev_documents/html_doc/HTML%E6%89%8B%E5%86%8C/#143-method","text":"method \u5c5e\u6027\u6307\u5b9a\u63d0\u4ea4\u8868\u5355\u6570\u636e\u65f6\u8981\u4f7f\u7528\u7684 HTTP \u65b9\u6cd5\u3002 \u8868\u5355\u6570\u636e\u53ef\u4ee5\u4f5c\u4e3a URL \u53d8\u91cf\uff08\u4f7f\u7528 method=\"get\" \uff09 \u6216\u4f5c\u4e3a HTTP post \u4e8b\u52a1\uff08\u4f7f\u7528 method=\"post\" \uff09\u53d1\u9001\u3002 \u5173\u4e8eGET\u8bf7\u6c42 \u4ee5\u540d\u79f0/\u503c\u5bf9\u7684\u5f62\u5f0f\u5c06\u8868\u5355\u6570\u636e\u8ffd\u52a0\u5230 URL \u6c38\u8fdc\u4e0d\u8981\u4f7f\u7528 GET \u53d1\u9001\u654f\u611f\u6570\u636e\uff01 URL \u7684\u957f\u5ea6\u53d7\u5230\u9650\u5236\uff082048 \u4e2a\u5b57\u7b26\uff09 \u5bf9\u4e8e\u7528\u6237\u5e0c\u671b\u5c06\u7ed3\u679c\u6dfb\u52a0\u4e3a\u4e66\u7b7e\u7684\u8868\u5355\u63d0\u4ea4\u5f88\u6709\u7528 GET \u9002\u7528\u4e8e\u975e\u5b89\u5168\u6570\u636e \u5173\u4e8ePOST\u8bf7\u6c42 \u5c06\u8868\u5355\u6570\u636e\u9644\u52a0\u5728 HTTP \u8bf7\u6c42\u7684\u6b63\u6587\u4e2d POST \u6ca1\u6709\u5927\u5c0f\u9650\u5236\uff0c\u53ef\u7528\u4e8e\u53d1\u9001\u5927\u91cf\u6570\u636e\u3002","title":"14.3 method\u5c5e\u6027"},{"location":"Dev_documents/html_doc/HTML%E6%89%8B%E5%86%8C/#144-autocompelete","text":"autocompelete\u5c5e\u6027\u89c4\u5b9a\u8868\u5355\u662f\u5426\u5e94\u6253\u5f00\u81ea\u52a8\u5b8c\u6210\u529f\u80fd\u3002 \u542f\u7528\u81ea\u52a8\u5b8c\u6210\u529f\u80fd\u540e\uff0c\u6d4f\u89c8\u5668\u4f1a\u6839\u636e\u7528\u6237\u4e4b\u524d\u8f93\u5165\u7684\u503c\u81ea\u52a8\u586b\u5199\u503c\u3002","title":"14.4 autocompelete \u5c5e\u6027"},{"location":"Dev_documents/html_doc/HTML%E6%89%8B%E5%86%8C/#145-novalidate","text":"Novalidate\u5c5e\u6027\u662f\u4e00\u4e2a\u5e03\u5c14\u5c5e\u6027\u3002 \u5982\u679c\u5df2\u8bbe\u7f6e\uff0c\u5b83\u89c4\u5b9a\u63d0\u4ea4\u65f6\u4e0d\u5e94\u9a8c\u8bc1\u8868\u5355\u6570\u636e\u3002","title":"14.5 Novalidate \u5c5e\u6027"},{"location":"Dev_documents/java/meetJava/","text":"10.Java 1.\u57fa\u7840\u8bed\u6cd5 \u4e3b\u51fd\u6570\uff0c\u7a0b\u5e8f\u5165\u53e3 public class Hello { public static void main(String[] args) { System.out.println(\"\u4f60\u597d\u5440\"); } } \u6587\u4ef6\u540d \u4e00\u4e2a\u6587\u4ef6\u4e2d\u6700\u591a\u53ea\u80fd\u6709\u4e00\u4e2apublic\u7c7b \u4e14 \u6587\u4ef6\u540d\u5fc5\u987b\u548cpublic\u7c7b\u540d\u4e00\u81f4\u3002 \u5982\u679c\u6587\u4ef6\u4e2d\u6709\u591a\u4e2a\u7c7b\uff0c\u6587\u4ef6\u540d\u4e0epublic\u7c7b\u540d\u4e00\u81f4\u3002 \u5982\u679c\u6587\u4ef6\u4e2d\u6709\u591a\u4e2a\u7c7b \u4e14 \u65e0public\u7c7b\uff0c\u6587\u4ef6\u540d\u53ef\u4ee5\u662f\u4efb\u610f\u7c7b\u540d\u3002 \u7c7b\u540d \u9996\u5b57\u6bcd\u5927\u5199\u4e14\u9a7c\u5cf0\u5f0f\u547d\u540d\uff0c\u4f8b\u5982\uff1aHello\u3001UserInfo\u3001PersonApplication \u7c7b\u4fee\u9970\u7b26 public\u3001default\uff08\u4e0d\u5199\uff09 \u9759\u6001\u6210\u5458,\u65e0\u9700\u5b9e\u4f8b\u5316\u5c31\u53ef\u4ee5\u8c03\u7528 class MyTest{ public void f1(){ System.out.println(\"f1\"); } public static void f2(){ System.out.println(\"f2\"); } } public class Hello { public static void main(String[] args) { MyTest.f2(); //1.\u5b9e\u4f8b\u5316 MyTest obj = new MyTest(); // 2.\u5bf9\u8c61\u8c03\u7528 obj.f1(); } } class Person{ public static void f1(){ // \u9759\u6001\u65b9\u6cd5 System.out.println(\"\u6211\u662fF1\u51fd\u6570\"); } } public class Hello { public static void main(String[] args) { Person.f1(); } } class Person { public void f2() { // \u5b9e\u4f8b\u65b9\u6cd5 System.out.println(\"\u6211\u662fF1\u51fd\u6570\"); } } public class Hello { public static void main(String[] args) { // \u5b9e\u4f8b\u5316\u5bf9\u8c61 obj = Person(); Person obj = new Person(); // \u5bf9\u8c61\u8c03\u7528f2 obj.f2(); } } void\uff0c\u65e0\u8fd4\u56de\u503c class MyTest{ public int f1(){ System.out.println(\"f1\"); return 123; } public static String f2(){ System.out.println(\"f2\"); return \"\u54c8\u54c8\u54c8\"; } } public class Hello { public static void main(String[] args) { MyTest obj = new MyTest(); int v1 = obj.f1(); String v2 = MyTest.f2(); } } \u8695\u98df class MyTest { public int f1(int a1, int a2) { int result = a1 + a2; return result; } } public class Hello { public static void main(String[] args) { MyTest obj = new MyTest(); int v1 = obj.f1(1, 2); } } 2.3.1 \u6ce8\u91ca /** * \u5bf9\u8fd9\u4e2a\u7c7b\u8fdb\u884c\u6ce8\u91ca */ public class Hello { /** * \u8fd9\u4e2a\u65b9\u6cd5\u662f\u5e72\u561b.... * @param v1 \u5927\u5c0f * @param v2 \u5c3a\u5bf8 * @return \u8fd4\u56de\u4e00\u4e2axxx */ public static String getSign(int v1, String v2) { return \"\u54c8\u54c8\u54c8\"; } public static void main(String[] args) { // \u5355\u884c\u6ce8\u91ca // int age = 18; /* \u591a\u884c\u6ce8\u91ca String name = \"\u6b66\u6c9b\u9f50\"; int size = 18; */ } } \u6ce8\u610f\uff1aJavaScript 2.3.2 \u53d8\u91cf\u548c\u5e38\u91cf public class Hello { public static void main(String[] args) { String name = \"\u6b66\u6c9b\u9f50\"; name = \"alex\"; int age = 19; age = 20; final int size = 18; } } v1 = [111,22] v2 = 345 2.3.3 \u8f93\u5165\u548c\u8f93\u51fa import java.util.Scanner; public class Hello { public static void main(String[] args) { // \u8f93\u5165 Scanner input = new Scanner(System.in); String text = input.nextLine(); // \u8f93\u51fa System.out.println(text); // System.out.print(text); } } import java.util.Scanner; public class Hello { public static void main(String[] args) { // \u8f93\u51fa System.out.print(\"\u8bf7\u8f93\u5165\uff1a\"); // \u8f93\u5165 Scanner input = new Scanner(System.in); String text = input.nextLine(); // \u8f93\u51fa System.out.println(text); } } 2.3.4 \u6761\u4ef6\u8bed\u53e5 import java.util.Scanner; public class Hello { public static void main(String[] args) { int age = 19; if (age < 18) { System.out.println(\"\u5c11\u5e74\"); } else if (age < 40) { System.out.println(\"\u5927\u53d4\"); } else { System.out.println(\"\u8001\u6c49\"); } } } public class Hello { public static void main(String[] args) { int score = 19; switch (score) { case 10: System.out.println(\"xxx\"); System.out.println(\"xxx\"); System.out.println(\"xxx\"); break; case 20: System.out.println(\"xxx\"); System.out.println(\"xxx\"); System.out.println(\"xxx\"); break; default: System.out.println(\"xxx\"); break; } } } 2.3.5 \u5faa\u73af\u8bed\u53e5 while\u5faa\u73af public class Hello { public static void main(String[] args) { int count = 0; while (count < 3) { System.out.println(\"\u6267\u884c\u4e2d...\"); count += 1; } } } do while\u5faa\u73af\uff08\u81f3\u5c11\u6267\u884c1\u6b21\uff09 public class Hello { public static void main(String[] args) { int count = 0; do { System.out.println(\"\u6267\u884c\u4e2d...\"); count += 1; } while (count < 3); } } for\u5faa\u73af public class Hello { public static void main(String[] args) { for (int i = 0; i < 10; i++) { System.out.println(\"\u54c8\u54c8\u54c8\"); } } } public class Hello { public static void main(String[] args) { String[] nameList = {\"\u4fee\u4ed9\", \"\u8096\u5cf0\", \"\u9ebb\u5b50\", \"\u5341\u5206\"}; // nameList.length 4 // nameList[0] for (int idx = 0; idx < nameList.length; idx++) { String ele = nameList[idx]; System.out.println(ele); } } } \u6ce8\u610f\uff1a\u4e5f\u652f\u6301break/continue\u3002 2. \u6570\u636e\u7c7b\u578b 2.1 \u6574\u6570\u7c7b\u578b byte\uff0c\u5b57\u8282 \u30101\u5b57\u8282\u3011\u8868\u793a\u8303\u56f4\uff1a-128 ~ 127 \u5373\uff1a -2^7 ~ 2^7 -1 short\uff0c\u77ed\u6574\u578b \u30102\u5b57\u8282\u3011\u8868\u793a\u8303\u56f4\uff1a-32768 ~ 32767 int\uff0c\u6574\u578b \u30104\u5b57\u8282\u3011\u8868\u793a\u8303\u56f4\uff1a-2147483648 ~ 2147483647 long\uff0c\u957f\u6574\u578b \u30108\u5b57\u8282\u3011\u8868\u793a\u8303\u56f4\uff1a-9223372036854775808 ~ 9223372036854775807 2.2 \u6570\u7ec4 \u5b58\u653e\u56fa\u5b9a\u957f\u5ea6\u7684\u5143\u7d20\u3002 \u5bb9\u5668 \u56fa\u5b9a\u957f\u5ea6 \u7279\u5b9a\u7c7b\u578b import java.util.Arrays; public class Hello { public static void main(String[] args) { // [123,1,999] int[] numArray = new int[3]; numArray[0] = 123; numArray[1] = 1; numArray[2] = 99; System.out.println(Arrays.toString(numArray)); String[] names = new String[]{\"\u6b66\u6c9b\u9f50\", \"alex\", \"eric\"}; System.out.println(Arrays.toString(names)); String[] nameArray = {\"\u6b66\u6c9b\u9f50\", \"alex\", \"eric\"}; System.out.println(Arrays.toString(nameArray)); // nameArray[0] // nameArray.length for (int idx = 0; idx < nameArray.length; idx++) { String item = nameArray[idx]; } } } \u6ce8\u610f\uff1a\u6570\u7ec4\u4e00\u65e6\u521b\u5efa\u4e2a\u6570\u5c31\u4e0d\u53ef\u8c03\u6574\u3002 2.3 \u5173\u4e8eObject \u5728Java\u6240\u6709\u7684\u7c7b\u90fd\u662f\u9ed8\u8ba4\u7ee7\u627fObject\u7c7b\u3002 \u7528\u57fa\u7c7b\u53ef\u4ee5\u6cdb\u6307\u4ed6\u7684\u5b50\u7c7b\u7684\u7c7b\u578b\u3002 import sun.lwawt.macosx.CSystemTray; import java.util.Arrays; public class Hello { public static void main(String[] args) { // String v1 = \"wupeiqi\"; Object v1 = new String(\"wupeiqi\"); System.out.println(v1); System.out.println(v1.getClass()); Object v2 = 123; System.out.println(v2); System.out.println(v2.getClass()); } } import sun.lwawt.macosx.CSystemTray; import java.util.Arrays; public class Hello { public static void main(String[] args) { // \u58f0\u660e\u6570\u7ec4\uff0c\u6570\u7ec4\u4e2d\u5143\u7d20\u5fc5\u987bint\u7c7b\u578b; int[] v1 = new int[3]; // \u58f0\u660e\u6570\u7ec4\uff0c\u6570\u7ec4\u4e2d\u5143\u7d20\u5fc5\u987bString\u7c7b\u578b; String[] v2 = new String[3]; // \u58f0\u660e\u6570\u7ec4\uff0c\u6570\u7ec4\u4e2d\u53ef\u4ee5\u662f\u5fc5\u987bint/String\u7c7b\u578b; Object[] v3 = new Object[3]; v3[0] = 123; v3[1] = \"wupeiqi\"; } } \u6240\u4ee5\uff0c\u5982\u679c\u4ee5\u540e\u60f3\u8981\u58f0\u660e\u7684\u6570\u7ec4\u4e2d\u60f3\u8981\u662f\u6df7\u5408\u7c7b\u578b\uff0c\u5c31\u53ef\u4ee5\u7528Object\u6765\u5b9e\u73b0\u3002 import java.util.Arrays; public class Hello { public static void main(String[] args) { // v1\u662f\u6307\u4e0a\u5b57\u7b26\u4e32\u5bf9\u8c61\uff1bString String v1 = new String(\"wupeiqi\"); String res = v1.toUpperCase(); System.out.println(res); // v2\u672c\u8d28\u662f\u5b57\u7b26\u4e32\u5bf9\u8c61\uff1bObject Object v2 = new String(\"wupeiqi\"); String data = (String)v2; } } import java.util.Arrays; public class Hello { public static void func(Object v1) { // System.out.println(v1); // System.out.println(v1.getClass()); if (v1 instanceof Integer) { System.out.println(\"\u6574\u578b\"); } else if (v1 instanceof String) { System.out.println(\"\u5b57\u7b26\u4e32\u7c7b\u578b\"); } else { System.out.println(\"\u672a\u77e5\u7c7b\u578b\"); } } public static void main(String[] args) { func(123); func(\"123\"); } } Java\u4e2d\u6240\u6709\u7684\u7c7b\u90fd\u7ee7\u627fObject\uff0cObject\u4ee3\u6307\u6240\u6709\u7684\u7c7b\u578b\u3002 \u81ea\u5df1\u521b\u5efa\u5173\u7cfb ArrayList v1 = new ArrayList(); LinkedList v2 = new LinkedList(); List v1 = new ArrayList(); List v2 = new LinkedList(); Object v1 = new ArrayList(); Object v2 = new LinkedList(); import java.util.Arrays; public class Hello { public static void main(String[] args) { // \u58f0\u660e\u6570\u7ec4\uff0c\u6570\u7ec4\u4e2d\u5143\u7d20\u5fc5\u987bint\u7c7b\u578b; int[] v1 = new int[3]; // \u58f0\u660e\u6570\u7ec4\uff0c\u6570\u7ec4\u4e2d\u5143\u7d20\u5fc5\u987bString\u7c7b\u578b; String[] v2 = new String[3]; // \u58f0\u660e\u6570\u7ec4\uff0c\u6570\u7ec4\u4e2d\u53ef\u4ee5\u662f\u5fc5\u987bint/String\u7c7b\u578b; Object[] v3 = new Object[3]; v3[0] = 123; v3[1] = \"wupeiqi\"; } } \u6240\u4ee5\uff0c\u5982\u679c\u4ee5\u540e\u60f3\u8981\u58f0\u660e\u7684\u6570\u7ec4\u4e2d\u60f3\u8981\u662f\u6df7\u5408\u7c7b\u578b\uff0c\u5c31\u53ef\u4ee5\u7528Object\u6765\u5b9e\u73b0\u3002 3.\u5e38\u89c1\u6570\u636e\u7c7b\u578b 3.1 List\u7cfb\u5217 \u7c7b\u4f3c\u4e8ePython\u4e2d\u7684\u5217\u8868\u3002 List\u662f\u4e00\u4e2a\u63a5\u53e3\uff0c\u63a5\u53e3\u4e0b\u9762\u6709\u4e24\u4e2a\u5e38\u89c1\u7684\u7c7b\u578b\uff08\u76ee\u7684\u662f\u53ef\u4ee5\u5b58\u653e\u52a8\u6001\u7684\u591a\u4e2a\u6570\u636e\uff09 ArrayList\uff0c\u8fde\u7eed\u7684\u5185\u5b58\u5730\u5740\u7684\u5b58\u50a8\uff08\u5185\u90e8\u81ea\u52a8\u6269\u5bb9\uff09\u3002 -> Python\u5217\u8868\u7684\u7279\u70b9 LinkedList\uff0c\u5e95\u5c42\u57fa\u4e8e\u94fe\u8868\u5b9e\u73b0\uff08\u81ea\u884c\u8f66\u94fe\u6761\uff09\u3002 -> Python\u5217\u8868\u7684\u7279\u70b9 ArrayList v1 = new ArrayList(); v1.add(\"\u6b66\u6c9b\u9f50\"); v1.add(\"\u9ebb\u5b50\"); LinkedList v1 = new LinkedList(); v1.add(\"\u6b66\u6c9b\u9f50\"); v1.add(\"\u9ebb\u5b50\"); Java\u4e2d\u63a5\u53e3\uff0c\u662f\u7528\u6765\u7ea6\u675f\u5b9e\u73b0\u4ed6\u7684\u7c7b\uff0c\u7ea6\u675f\u4ed6\u91cc\u9762\u7684\u6210\u5458\u5fc5\u987b\u6709xx\u3002 interface List{ public void add(Object data); // \u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5\uff0c\u4e0d\u5199\u5177\u4f53\u7684\u5b9e\u73b0\uff0c\u53ea\u7528\u4e8e\u7ea6\u675f\u3002 } // \u7c7bArrayList\u5b9e\u73b0\u4e86\u63a5\u53e3List\uff0c\u6b64\u65f6\u8fd9\u4e2a\u7c7b\u5c31\u5fc5\u987b\u6709\u4e00\u4e2aadd\u65b9\u6cd5\u3002 class ArrayList implements List{ public void add(Object data){ // \u5c06\u6570\u636edata\u6309\u7167\u8fde\u7eed\u5b58\u50a8\u7684\u65b9\u6cd5\u653e\u5728\u5185\u5b58\u3002 // .. } } // \u7c7bLinkedList\u5b9e\u73b0\u4e86\u63a5\u53e3List\uff0c\u6b64\u65f6\u8fd9\u4e2a\u7c7b\u5c31\u5fc5\u987b\u6709\u4e00\u4e2aadd\u65b9\u6cd5\u3002 class LinkedList implements List{ public void add(Object data){ // \u5c06\u6570\u636edata\u6309\u7167\u94fe\u8868\u7684\u5f62\u5f0f\u5b58\u50a8 // .. } } List v1 = new ArrayList(); v1.add(\"\u6b66\u6c9b\u9f50\"); v1.add(\"\u9ebb\u5b50\"); List v1 = new LinkedList(); v1.add(\"\u6b66\u6c9b\u9f50\"); v1.add(\"\u9ebb\u5b50\"); ArrayList\u793a\u4f8b\uff1a import java.util.ArrayList; import java.util.Arrays; public class Hello { public static void main(String[] args) { // ArrayList\uff0c\u9ed8\u8ba4\u5185\u90e8\u5b58\u653e\u7684\u662f\u6df7\u5408\u6570\u636e\u7c7b\u578b\u3002 // ArrayList<String> data = new ArrayList<String>(); // ArrayList<Object> data = new ArrayList<Object>(); ArrayList data = new ArrayList(); data.add(\"\u6b66\u6c9b\u9f50\"); data.add(\"alex\"); data.add(666); data.add(\"tony\"); String value = data.get(1); // String value = (String) data.get(1); Object temp = data.get(1); String value = (String) temp; // \u8f6c\u5316\u53ef\u8f6c\u6362\u7684\u6570\u636e System.out.println(value); int xo = (int) data.get(2); System.out.println(xo); data.set(0, \"\u54c8\u54c8\u54c8\u54c8\"); System.out.println(data); data.remove(\"eric\"); data.remove(0); System.out.println(data); int size = data.size(); System.out.println(size); boolean exists = data.contains(\"\u6b66\u6c9b\u9f50\"); System.out.println(exists); for (Object item : data) { System.out.println(item); } for (int i = 0; i < data.size(); i++) { Object item = data.get(i); System.out.println(item); } } } LinkedList\u793a\u4f8b\uff1a import java.util.LinkedList; public class Hello { public static void main(String[] args) { LinkedList<Integer> v1 = new LinkedList<Integer>(); v1.add(11); v1.add(22); LinkedList<Object> v2 = new LinkedList<Object>(); v2.add(\"\u6709\u962a\u6df1\u96ea\"); v2.add(\"\u5927\u6865\u672a\u4e45\"); v2.add(666); v2.add(123); //v2.remove(1); //v2.remove(\"\u8def\u98de\"); v2.set(2, \"\u82cd\u8001\u5e08\"); v2.push(\"\u54c8\u54c8\u54c8\"); // v2.addFirst(11); for (int i = 0; i < v2.size(); i++) { Object item = v2.get(i); System.out.println(item); } for (Object item : v2) { System.out.println(item); } } } \u5173\u4e8e\u8fed\u4ee3\u5668\uff1a import java.util.*; public class Hello { public static void main(String[] args) { ArrayList s1 = new ArrayList(); s1.add(\"P\u7ad9\"); s1.add(\"B\u7ad9\"); s1.add(\"A\u7ad9\"); Iterator it = s1.iterator(); // \u8fed\u4ee3\u5668 while (it.hasNext()) { String item = (String) it.next(); System.out.println(item); } } } 3.2 Set\u7cfb\u5217 Set\u662f\u4e00\u4e2a \u63a5\u53e3 \uff0c\u5e38\u89c1\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\u7684\u6709\u4e24\u4e2a\u7c7b\uff0c\u7528\u4e8e\u5b9e\u73b0\u4e0d\u91cd\u590d\u7684\u591a\u5143\u7d20\u96c6\u5408\u3002 HashSet\uff0c\u53bb\u91cd\uff0c\u65e0\u5e8f\u3002 TreeSet\uff0c\u53bb\u91cd\uff0c\u5185\u90e8\u9ed8\u8ba4\u6392\u5e8f\uff08ascii\u3001unicode\uff09\u3010\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\uff0c\u65e0\u6cd5\u8fdb\u884c\u6bd4\u8f83\u3011\u3002 import java.util.*; public class Hello { public static void main(String[] args) { // HashSet s1 = new HashSet(); // Set s1 = new HashSet(); // HashSet<String> s1 = new HashSet<String>(); HashSet s1 = new HashSet(); s1.add(\"P\u7ad9\"); s1.add(\"B\u7ad9\"); s1.add(\"A\u7ad9\"); s1.add(\"P\u7ad9\"); s1.add(666); System.out.println(s1); // [B\u7ad9, A\u7ad9, P\u7ad9,666] // s2 = {\"\u4e1c\u4eac\u70ed\",\"\u4e1c\u5317\u70ed\",\"\u5357\u4eac\u70ed\"} HashSet s2 = new HashSet(){ { add(\"\u4e1c\u4eac\u70ed\"); add(\"\u4e1c\u5317\u70ed\"); add(\"\u5357\u4eac\u70ed\"); } }; System.out.println(s2); // Set s2 = new TreeSet(); // TreeSet<String> s2 = new TreeSet<String>(); TreeSet s3 = new TreeSet(); s3.add(\"P\u7ad9\"); s3.add(\"B\u7ad9\"); s3.add(\"A\u7ad9\"); s3.add(\"P\u7ad9\"); // s3.add(666); //\u4e0d\u53ef\u4ee5 System.out.println(s3); // [B\u7ad9, A\u7ad9, P\u7ad9] TreeSet s4 = new TreeSet(){ { add(\"P\u7ad9\"); add(\"B\u7ad9\"); add(\"A\u7ad9\"); add(\"P\u7ad9\"); } }; System.out.println(s4); // [B\u7ad9, A\u7ad9, P\u7ad9] } } \u5173\u4e8e\u4ea4\u5e76\u5dee\uff1a import java.util.*; public class Hello { public static void main(String[] args) { // Set s1 = new HashSet(); HashSet s1 = new HashSet(); s1.add(\"P\u7ad9\"); s1.add(\"B\u7ad9\"); s1.add(\"A\u7ad9\"); s1.remove(\"P\u7ad9\"); System.out.println(s1); // [B\u7ad9, A\u7ad9, P\u7ad9] boolean exists = s1.contains(\"B\u7ad9\"); System.out.println(exists); HashSet s2 = new HashSet(); s2.add(123); s2.add(456); HashSet v1 = new HashSet(); // \u7a7a -> [B\u7ad9, A\u7ad9, P\u7ad9] v1.addAll(s1); v1.retainAll(s2); // \u4ea4\u96c6 & System.out.println(v1); HashSet v2 = new HashSet(); v2.addAll(s1); v2.addAll(s2); // \u5e76\u96c6 | System.out.println(v2); HashSet v3 = new HashSet(); v3.addAll(s1); v3.removeAll(s2); // \u5dee\u96c6 s1 - s2 System.out.println(v3); HashSet v4 = new HashSet(); v4.addAll(s2); v4.removeAll(s1); // \u5dee\u96c6 s2 - s1 System.out.println(v4); } } \u5173\u4e8e\u5faa\u73af\u83b7\u53d6\uff1a import java.util.*; public class Hello { public static void main(String[] args) { TreeSet s1 = new TreeSet(); s1.add(\"P\u7ad9\"); s1.add(\"B\u7ad9\"); s1.add(\"A\u7ad9\"); for (Object item : s1) { System.out.println(item); } } } \u5173\u4e8e\u8fed\u4ee3\u5668\uff1a import java.util.*; public class Hello { public static void main(String[] args) { TreeSet s1 = new TreeSet(); s1.add(\"P\u7ad9\"); s1.add(\"B\u7ad9\"); s1.add(\"A\u7ad9\"); Iterator it = s1.iterator(); while (it.hasNext()) { String item = (String) it.next(); System.out.println(item); } } } 3.3 Map\u7cfb\u5217 Map\u662f\u4e00\u4e2a\u63a5\u53e3\uff0c\u5e38\u89c1\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\u7684\u6709\u4e24\u4e2a\u7c7b\uff0c\u7528\u4e8e\u5b58\u50a8\u952e\u503c\u5bf9\u3002 HashMap\uff0c\u65e0\u5e8f\u3002 TreeMap\uff0c\u9ed8\u8ba4\u6839\u636ekey\u6392\u5e8f\u3002\uff08\u5e38\u7528\uff09 \u5728Python\u4e2d\u9700\u8981\u81ea\u5df1\u5904\u7406key\u6392\u5e8f\u7684\u95ee\u9898\u3002 v4 = { \"aid\":123, \"xx\":999, \"wid\":888 } # 1.\u6839\u636ekey\u8fdb\u884c\u6392\u5e8f # data = [\"{}={}\".format(key,v4[key]) for key in sorted(v4.keys())] # 2.\u518d\u8fdb\u884c\u62fc\u63a5 # result = \"&\".join(data) result = \"&\".join([\"{}={}\".format(key,v4[key]) for key in sorted(v4.keys())]) import java.util.*; public class Hello { public static void main(String[] args) { HashMap h1 = new HashMap(); h1.put(\"name\",\"alex\"); h1.put(\"age\",18); h1.put(\"hobby\",\"\u7537\"); System.out.println(h1); // {gender=\u7537, name=alex, age=18} HashMap<String,String> h2 = new HashMap<String,String>(); h2.put(\"name\",\"alex\"); h2.put(\"age\",\"18\"); h2.put(\"hobby\",\"\u7537\"); System.out.println(h2); // {gender=\u7537, name=alex, age=18} HashMap<String,String> h3 = new HashMap<String,String>(){ { put(\"name\",\"alex\"); put(\"age\",\"18\"); put(\"hobby\",\"\u7537\"); } }; System.out.println(h3); // {gender=\u7537, name=alex, age=18} } } import java.util.*; public class Hello { public static void main(String[] args) { TreeMap h1 = new TreeMap(); // \u6539\u4e3a\u4e86TreeMap h1.put(\"name\",\"alex\"); h1.put(\"age\",18); h1.put(\"hobby\",\"\u7537\"); System.out.println(h1); // {age=18, hobby=\u7537, name=alex} TreeMap<String,String> h2 = new TreeMap<String,String>(); h2.put(\"name\",\"alex\"); h2.put(\"age\",\"18\"); h2.put(\"hobby\",\"\u7537\"); System.out.println(h2); // {age=18, hobby=\u7537, name=alex} TreeMap<String,String> h3 = new TreeMap<String,String>(){ { put(\"name\",\"alex\"); put(\"age\",\"18\"); put(\"hobby\",\"\u7537\"); } }; System.out.println(h3); // {age=18, hobby=\u7537, name=alex} Map h4 = new TreeMap(); h4.put(\"name\",\"alex\"); h4.put(\"age\",18); h4.put(\"hobby\",\"\u7537\"); System.out.println(h4); // {age=18, hobby=\u7537, name=alex} } } \u5e38\u89c1\u64cd\u4f5c\uff1a import java.util.*; public class Hello { public static void main(String[] args) { TreeMap h1 = new TreeMap(); // \u6539\u4e3a\u4e86TreeMap h1.put(\"name\", \"alex\"); h1.put(\"age\", \"18\"); h1.put(\"hobby\", \"\u7537\"); h1.put(\"hobby\", \"\u5973\u4eba\"); h1.remove(\"age\"); int size = h1.size(); Object value = h1.get(\"name\"); // \u4e0d\u5b58\u5728\uff0c\u8fd4\u56denull System.out.println(value); boolean existsKey = h1.containsKey(\"age\"); boolean existsValue = h1.containsValue(\"alex\"); h1.replace(\"name\", \"\u674e\u6770\"); System.out.println(h1); // \u5faa\u73af: \u793a\u4f8b1 // { (\"name\", \"alex\")\uff0c(\"age\", \"18\"), } Set<Map.Entry<String, String>> s1 = h1.entrySet(); Iterator it1 = s1.iterator(); while (it1.hasNext()) { // (\"name\", \"alex\") Map.Entry<String, String> entry = (Map.Entry<String, String>) it1.next(); String k = (String) entry.getKey(); String v = (String) entry.getValue(); } // \u5faa\u73af: \u793a\u4f8b2 Set s2 = h1.entrySet(); Iterator it2 = s2.iterator(); while (it2.hasNext()) { Map.Entry entry = (Map.Entry) it2.next(); String k = (String) entry.getKey(); String v = (String) entry.getValue(); } // \u5faa\u73af: \u793a\u4f8b3 TreeMap<String, String> h2 = new TreeMap<String, String>(); // \u6539\u4e3a\u4e86TreeMap h2.put(\"name\", \"alex\"); h2.put(\"age\", \"18\"); for (Map.Entry<String, String> entry : h2.entrySet()) { String k = entry.getKey(); String v = entry.getValue(); } // \u5faa\u73af: \u793a\u4f8b4 TreeMap h3 = new TreeMap(); // \u6539\u4e3a\u4e86TreeMap h3.put(\"name\", \"alex\"); h3.put(\"age\", 18); for (Object entry : h3.entrySet()) { Map.Entry<String, Object> entryMap = (Map.Entry<String, Object>) entry; String k = entryMap.getKey(); Object v = entryMap.getValue(); // 18 \"alex\" if (v instanceof Integer) { System.out.println(\"\u6570\u5b57\uff1a\" + Integer.toString((Integer) v)); } else if (v instanceof String) { System.out.println(\"\u5b57\u7b26\u4e32\uff1a\" + (String) v); } else { System.out.println(\"\u672a\u77e5\u7c7b\u578b\uff1a\" + v.toString()); } } } } 4.\u9762\u5411\u5bf9\u8c61\u76f8\u5173 Python\uff0c\u51fd\u6570\u5f0f+\u9762\u5411\u5bf9\u8c61\u3002 Java\uff0c\u9762\u5411\u5bf9\u8c61\u3002 4.1 \u7c7b\u548c\u5bf9\u8c61 class Person { // \u5b9e\u4f8b\u53d8\u91cf public String name; public Integer age; // \u6784\u9020\u65b9\u6cd51 public Person() { this.name = \"Eric\"; this.age = 99999; } } Person obj = new Person(); class Person: # \u521d\u59cb\u5316\u65b9\u6cd5\uff0c 1. __new__\u65b9\u6cd5\uff0c\u6784\u9020\u65b9\u6cd5\u521b\u5efa\u7a7a\u5bf9\u8c61 2.__init___\u65b9\u6cd5 def __init__(self): self.name = \"eric\" self.age = 999999 obj = Person() class Person { // \u5b9e\u4f8b\u53d8\u91cf public String name; public Integer age; public String email; // \u6784\u9020\u65b9\u6cd51 public Person() { this.name = \"Eric\"; this.age = 99999; } // \u6784\u9020\u65b9\u6cd52 public Person(String name, Integer age) { this.name = name; this.age = age; this.email = \"xxx@live.com\"; } // \u6784\u9020\u65b9\u6cd53 public Person(String name, String email) { this.name = name; this.age = 83; this.email = email; } } Person obj1 = new Person(\"wupeiqi\",11); Person obj2 = new Person(); class Person { // \u5b9e\u4f8b\u53d8\u91cf public String name; public Integer age; public String email; // \u6784\u9020\u65b9\u6cd51 public Person() { this.name = \"Eric\"; this.age = 99999; } // \u6784\u9020\u65b9\u6cd52 public Person(String name, Integer age) { this.name = name; this.age = age; this.email = \"xxx@live.com\"; } // \u6784\u9020\u65b9\u6cd53 public Person(String name, String email) { this.name = name; this.age = 83; this.email = email; } // \u5b9a\u4e49\u65b9\u6cd5\uff08\u91cd\u8f7d\uff09 public void doSomething() { System.out.println(this.name); } // \u5b9a\u4e49\u65b9\u6cd5\uff08\u91cd\u8f7d\uff09 public void doSomething(String prev) { String text = String.format(\"%s-%s\", prev, this.name); System.out.println(text); } } public class Hello { public static void main(String[] args) { // \u5b9e\u4f8b\u5316\u5bf9\u8c61\u65f6\uff0c\u4f53\u73b0\u7684\u4e3b\u8981\u662f\u5c01\u88c5\u3002 Person p1 = new Person(); Person p2 = new Person(\"alex\", 73); Person p3 = new Person(\"tony\", \"alex@sb.com\"); p1.doSomething(); p1.doSomething(\"\u4f60\u597d\u5440\uff0c\"); p2.doSomething(); p2.doSomething(\"\u4f60\u597d\u5440\uff0c\"); p3.doSomething(); p3.doSomething(\"\u4f60\u597d\u5440\uff0c\"); } } 4.2 \u9759\u6001\u6210\u5458 class Foo: v1 = \"\u6b66\u6c9b\u9f50\" # \u9759\u6001\u53d8\u91cf\uff08\u5c5e\u4e8e\u7c7b\uff0c\u4e0e\u5bf9\u8c61\u65e0\u5173\uff09 def __init__(self): self.name = \"alex\" # \u5b9e\u4f8b\u53d8\u91cf\uff0c\u5c5e\u4e8e\u5bf9\u8c61 print(Foo.v1) # 1.\u521b\u5efa\u7a7a\u7684\u533a\u57df # 2.\u81ea\u52a8\u6267\u884c\u6784\u9020\u65b9\u6cd5 __init__ obj = Foo() print(obj.name) print(obj.v1) class Person { // \u9759\u6001\u53d8\u91cf public static String city = \"\u5317\u4eac\"; // \u5b9e\u4f8b\u53d8\u91cf public String name; public Integer age; // \u6784\u9020\u65b9\u6cd51 public Person() { this.name = \"Eric\"; this.age = 99999; } // \u7ed1\u5b9a\u65b9\u6cd5 public void showInfo(){ System.out.println(\"\u54c8\u54c8\u54c8\u54c8\"); } // \u9759\u6001\u65b9\u6cd5 public static void showData(){ System.out.println(\"\u54c8\u54c8\u54c8\u54c8\"); } } Person.city; Person.showData(); Person obj = new Person(); obj.name; obj.age; obj.showInfo(); \u672c\u8d28\uff1a\u9759\u6001\u5c5e\u4e8e\u7c7b\uff1b\u975e\u9759\u6001\u5c5e\u4e8e\u5bf9\u8c61\u3002 4.3 \u7ee7\u627f Java\u4e2d\u7684\u7ee7\u627f\uff0c\u53ea\u652f\u6301\u5355 \u7ee7\u627f \uff0c\u4e0d\u652f\u6301\u591a\u7ee7\u627f\uff0c\u4f46\u652f\u6301 \u5b9e\u73b0 \u591a\u4e2a\u63a5\u53e3\u3002 class Base{ ... } class Foo{ ... } class Son(Base){ } interface Base{ public void add(); } interface Foo{ public void plus(); } class Son implements Base,Foo { public void add(){ } public void plus(){ } } Python\u4e2d\u4e4b\u548c\u591a\u7ee7\u627f\u3002 class Foo(Base,Bar): pass class Foo(IBase,IBar): pass class Base { public String email; public Base(String email) { this.email = email; } public String getSubInfo() { return String.format(\"%s\", this.email); } } // Base obj1 = new Base(\"xx\"); // obj1.email; // \"xx\" // obj1.getSubInfo(); class Person extends Base { public String name; public Integer age; public Person(String name, Integer age, String email) { super(email);// \u6267\u884c\u7236\u7c7b\u7684\u6784\u9020\u65b9\u6cd5 this.name = name; this.age = age; } public String getInfo(String v1) { return String.format(\"%s-%d-%s\", this.name, this.age, this.email); } } // obj2 ==> email=\"xxx@live.com\" name=\"wupeiqi\" age=19 Person obj2 = new Person(\"wupeiqi\",19,\"xxx@live.com\"); // obj2.name; // obj2.age; // obj2.email; // obj2.getInfo(\"xxx\"); // obj2.getSubInfo(); \u7528\u7236\u7c7b\u6cdb\u6307\u6240\u6709\u7684\u5b50\u7c7b\u3002 class Base { } class Person extends Base { } Person v1 = new Person(); // v1\u662fPerson\u7c7b\u578b\u7684\u5bf9\u8c61 Base v2 = new Person(); // v2\u662fPerson\u7c7b\u578b\u7684\u5bf9\u8c61 class Base { public void show() { System.out.println(\"111\"); } } class Person extends Base { public void show() { System.out.println(\"222\"); } } Person v1 = new Person(); v1.show(); // 222 Base v2 = new Base(); v2.show(); // 111 Base v3 = new Person(); v3.show(); // 222 class Base { public String email; public Base(String email) { this.email = email; } public void getSubInfo() { System.out.println(\"111\"); } } // Person\u7c7b\u7ee7\u627fBase\u7c7b class Person extends Base { public String name; public Person(String name, Integer age, String email) { super(email);// \u6267\u884c\u7236\u7c7b\u7684\u6784\u9020\u65b9\u6cd5 this.name = name; } public void getSubInfo() { System.out.println(\"222\"); } } public class Hello { public static void handler(Base v1){ v1.getSubInfo(); } // \u4e3b\u51fd\u6570 public static void main(String[] args) { Person obj1 = new Person(\"wupeiqi\",19,\"xxx@live.com\"); handler(obj1); // 222 Base obj2 = new Base(\"xxx@live.com\"); handler(obj2); // 111 Base obj3 = new Person(\"wupeiqi\",19,\"xxx@live.com\"); handler(obj3); // 222 } } 4.4 \u63a5\u53e3 \u63a5\u53e3\uff1a \u7ea6\u675f\uff0c\u5b9e\u73b0\u4ed6\u7684\u7c7b\u3002 \u6cdb\u6307 \u5b9e\u73b0 \u4ed6\u4e86\u7c7b\u3002 interface IMessage { public void send(); } // Wechat\u7c7b\"\u5b9e\u73b0\"\u4e86Imessage\u63a5\u53e3 class Wechat implements IMessage { public void send() { System.out.println(\"\u53d1\u9001\u5fae\u4fe1\"); } } class DingDing implements IMessage { public void send() { System.out.println(\"\u53d1\u9001\u9489\u9489\"); } } class Sms implements IMessage { public void send() { System.out.println(\"\u53d1\u9001\u77ed\u4fe1\"); } } Wechat v1 = new Wechat(); IMessage v2 = new Wechat(); public class Hello { // \u591a\u6001 -> \u591a\u79cd\u5f62\u6001 IMessage public static void handler(IMessage v1){ v1.send(); } // \u4e3b\u51fd\u6570 public static void main(String[] args) { Sms v1 = new Sms(); handler(v1); } } \u5728Java\u4e2d\uff1a\u4e0d\u652f\u6301\u540c\u65f6\u7ee7\u627f\u591a\u4e2a\u7c7b\uff1b\u652f\u6301\u5b9e\u73b0\u591a\u4e2a\u63a5\u53e3\u3002 interface IPerson { public void f1(); public void f1(int age); public void f2(String info); } interface IUser { public String f3(int num); } class Base { public String name; public Integer age; public String email; public Base(String name, Integer age, String email) { this.name = name; this.age = age; this.email = email; } public String getSubInfo() { return String.format(\"%s\", this.email); } } class Person extends Base implements IUser, IPerson { public Person(String name, Integer age, String email) { super(name, age, email); } public String getInfo() { return String.format(\"%s-%d-%s\", this.name, this.age, this.email); } public void f1() { System.out.println(\"F1,\u65e0\u53c2\u6570\"); } public void f1(int age) { System.out.println(\"F1,age\u53c2\u6570\"); } public void f2(String info) { System.out.println(\"F2\"); } public String f3(int num) { return \"\u54c8\u54c8\u54c8\"; } } public class Hello { public static void main(String[] args) { Person p = new Person(\"\u65e5\u5929\", 83, \"ritian@live.com\"); p.f1(); } } \u5047\u8bbe\u6211\u73b0\u5728\u5728\u8fdb\u884c\u9006\u5411\uff0c\u62ff\u5230apk\uff0c\u5173\u4e8e\u5173\u952e\u5b57\u53bb\u641c\u7d22\uff1af2 \uff0c\u5b9a\u4f4d\u5230\u4e00\u4e2a\u63a5\u53e3\u4e86\u3002 interface IPerson { public void f1(); public void f1(int age); public void f2(String info); } \u63a5\u4e0b\u6765\uff0c\u4f60\u5c31\u5e94\u8be5\u53bb\u770b\u90fd\u6709\u54ea\u4e9b\u7c7b \u5b9e\u73b0\u4e86 IPerson \u63a5\u53e3\u3002 \u53ea\u67091\u4e2a\u7c7b\u5b9e\u73b0 IPerson\u3002 \u591a\u7c7b\u7c7b\u5b9e\u73b0 IPerson \u63a5\u53e3\uff0c\u7b5b\u9009\u5230\u5e95\u662f\u90a3\u4e2a\u7c7b\uff1f 4.5 \u62bd\u8c61 // \u62bd\u8c61\u7c7b abstract class Base { // \u62bd\u8c61\u65b9\u6cd5\uff08\u7ea6\u675f\u5b50\u7c7b\u4e2d\u5fc5\u987b\u6709\u8fd9\u4e2a\u65b9\u6cd5\uff09 public abstract void play(String name); // \u666e\u901a\u65b9\u6cd5 public void stop() { System.out.println(\"Stop\"); } } class Son extends Base{ public void play(String name){ // ... } } Son obj = new Son(); obj.stop(); obj.play(); Base obj1 = new Son(); \u6ce8\u610f\uff1a\u4e5f\u53ef\u4ee5\u6cdb\u6307\u4ed6\u7684\u5b50\u7c7b\u3002 5.\u5305\u6982\u5ff5 src \u251c\u2500\u2500 Hello.java \u2514\u2500\u2500 utils \u2514\u2500\u2500 Helper.java // hello.java import utils.Helper; public class Hello { public static void main(String[] args) { String data = Helper.getInfo(); System.out.println(data); } } // helper.java package utils; public class Helper { public static String getInfo() { return \"\u54c8\u54c8\u54c8\"; } } \u7c7b\u7684\u4fee\u9970\u7b26\uff1a public\uff0c\u516c\u5171\uff08\u4efb\u4f55\u4eba\u90fd\u80fd\u8c03\u7528\u5305\u4e2d\u7684\u7c7b\uff09\u3002 default\uff0c\u53ea\u80fd\u5728\u5f53\u524d\u5305\u4e2d\u88ab\u8c03\u7528\u3002 \u7c7b\u6210\u5458\u4fee\u9970\u7b26\uff1a public\uff0c\u516c\u5171\uff0c\u6240\u6709\u7684\u53ea\u8981\u6709\u6743\u9650\u8bbf\u95ee\u7c7b\uff0c\u7c7b\u4e2d\u7684\u6210\u5458\u90fd\u53ef\u4ee5\u8bbf\u95ee\u5230\u3002 private\uff0c\u79c1\u6709\uff0c\u53ea\u5141\u8bb8\u81ea\u5df1\u7c7b\u8c03\u7528\u3002 protected\uff0c\u540c\u4e00\u4e2a\u5305 \u6216 \u5b50\u7c7b\u53ef\u4ee5\u8bbf\u95ee\uff08\u5373\u4f7f\u6ca1\u6709\u5728\u540c\u4e00\u4e2a\u5305\u5185\uff0c\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u7236\u7c7b\u4e2d\u7684\u53d7\u4fdd\u62a4\u6210\u5458\uff09\u3002 default\uff0c\u53ea\u80fd\u5728\u540c\u4e00\u4e2a\u5305\u5185\u8bbf\u95ee\u3002 \u76ee\u7684\uff1a\u901a\u8fc7\u5173\u952e\u5b57\u8ba9\u8c03\u7528\u5173\u7cfb\u66f4\u52a0\u6e05\u6670\uff08\u4e0d\u8fc7\uff0c\u5f88\u591a\u9879\u76ee\u4e0d\u4f1a\u7528\u7684\u90a3\u4e48\u4e13\u4e1a\uff09\u3002","title":"10.Java"},{"location":"Dev_documents/java/meetJava/#10java","text":"","title":"10.Java"},{"location":"Dev_documents/java/meetJava/#1","text":"\u4e3b\u51fd\u6570\uff0c\u7a0b\u5e8f\u5165\u53e3 public class Hello { public static void main(String[] args) { System.out.println(\"\u4f60\u597d\u5440\"); } } \u6587\u4ef6\u540d \u4e00\u4e2a\u6587\u4ef6\u4e2d\u6700\u591a\u53ea\u80fd\u6709\u4e00\u4e2apublic\u7c7b \u4e14 \u6587\u4ef6\u540d\u5fc5\u987b\u548cpublic\u7c7b\u540d\u4e00\u81f4\u3002 \u5982\u679c\u6587\u4ef6\u4e2d\u6709\u591a\u4e2a\u7c7b\uff0c\u6587\u4ef6\u540d\u4e0epublic\u7c7b\u540d\u4e00\u81f4\u3002 \u5982\u679c\u6587\u4ef6\u4e2d\u6709\u591a\u4e2a\u7c7b \u4e14 \u65e0public\u7c7b\uff0c\u6587\u4ef6\u540d\u53ef\u4ee5\u662f\u4efb\u610f\u7c7b\u540d\u3002 \u7c7b\u540d \u9996\u5b57\u6bcd\u5927\u5199\u4e14\u9a7c\u5cf0\u5f0f\u547d\u540d\uff0c\u4f8b\u5982\uff1aHello\u3001UserInfo\u3001PersonApplication \u7c7b\u4fee\u9970\u7b26 public\u3001default\uff08\u4e0d\u5199\uff09 \u9759\u6001\u6210\u5458,\u65e0\u9700\u5b9e\u4f8b\u5316\u5c31\u53ef\u4ee5\u8c03\u7528 class MyTest{ public void f1(){ System.out.println(\"f1\"); } public static void f2(){ System.out.println(\"f2\"); } } public class Hello { public static void main(String[] args) { MyTest.f2(); //1.\u5b9e\u4f8b\u5316 MyTest obj = new MyTest(); // 2.\u5bf9\u8c61\u8c03\u7528 obj.f1(); } } class Person{ public static void f1(){ // \u9759\u6001\u65b9\u6cd5 System.out.println(\"\u6211\u662fF1\u51fd\u6570\"); } } public class Hello { public static void main(String[] args) { Person.f1(); } } class Person { public void f2() { // \u5b9e\u4f8b\u65b9\u6cd5 System.out.println(\"\u6211\u662fF1\u51fd\u6570\"); } } public class Hello { public static void main(String[] args) { // \u5b9e\u4f8b\u5316\u5bf9\u8c61 obj = Person(); Person obj = new Person(); // \u5bf9\u8c61\u8c03\u7528f2 obj.f2(); } } void\uff0c\u65e0\u8fd4\u56de\u503c class MyTest{ public int f1(){ System.out.println(\"f1\"); return 123; } public static String f2(){ System.out.println(\"f2\"); return \"\u54c8\u54c8\u54c8\"; } } public class Hello { public static void main(String[] args) { MyTest obj = new MyTest(); int v1 = obj.f1(); String v2 = MyTest.f2(); } } \u8695\u98df class MyTest { public int f1(int a1, int a2) { int result = a1 + a2; return result; } } public class Hello { public static void main(String[] args) { MyTest obj = new MyTest(); int v1 = obj.f1(1, 2); } }","title":"1.\u57fa\u7840\u8bed\u6cd5"},{"location":"Dev_documents/java/meetJava/#231","text":"/** * \u5bf9\u8fd9\u4e2a\u7c7b\u8fdb\u884c\u6ce8\u91ca */ public class Hello { /** * \u8fd9\u4e2a\u65b9\u6cd5\u662f\u5e72\u561b.... * @param v1 \u5927\u5c0f * @param v2 \u5c3a\u5bf8 * @return \u8fd4\u56de\u4e00\u4e2axxx */ public static String getSign(int v1, String v2) { return \"\u54c8\u54c8\u54c8\"; } public static void main(String[] args) { // \u5355\u884c\u6ce8\u91ca // int age = 18; /* \u591a\u884c\u6ce8\u91ca String name = \"\u6b66\u6c9b\u9f50\"; int size = 18; */ } } \u6ce8\u610f\uff1aJavaScript","title":"2.3.1 \u6ce8\u91ca"},{"location":"Dev_documents/java/meetJava/#232","text":"public class Hello { public static void main(String[] args) { String name = \"\u6b66\u6c9b\u9f50\"; name = \"alex\"; int age = 19; age = 20; final int size = 18; } } v1 = [111,22] v2 = 345","title":"2.3.2 \u53d8\u91cf\u548c\u5e38\u91cf"},{"location":"Dev_documents/java/meetJava/#233","text":"import java.util.Scanner; public class Hello { public static void main(String[] args) { // \u8f93\u5165 Scanner input = new Scanner(System.in); String text = input.nextLine(); // \u8f93\u51fa System.out.println(text); // System.out.print(text); } } import java.util.Scanner; public class Hello { public static void main(String[] args) { // \u8f93\u51fa System.out.print(\"\u8bf7\u8f93\u5165\uff1a\"); // \u8f93\u5165 Scanner input = new Scanner(System.in); String text = input.nextLine(); // \u8f93\u51fa System.out.println(text); } }","title":"2.3.3 \u8f93\u5165\u548c\u8f93\u51fa"},{"location":"Dev_documents/java/meetJava/#234","text":"import java.util.Scanner; public class Hello { public static void main(String[] args) { int age = 19; if (age < 18) { System.out.println(\"\u5c11\u5e74\"); } else if (age < 40) { System.out.println(\"\u5927\u53d4\"); } else { System.out.println(\"\u8001\u6c49\"); } } } public class Hello { public static void main(String[] args) { int score = 19; switch (score) { case 10: System.out.println(\"xxx\"); System.out.println(\"xxx\"); System.out.println(\"xxx\"); break; case 20: System.out.println(\"xxx\"); System.out.println(\"xxx\"); System.out.println(\"xxx\"); break; default: System.out.println(\"xxx\"); break; } } }","title":"2.3.4 \u6761\u4ef6\u8bed\u53e5"},{"location":"Dev_documents/java/meetJava/#235","text":"while\u5faa\u73af public class Hello { public static void main(String[] args) { int count = 0; while (count < 3) { System.out.println(\"\u6267\u884c\u4e2d...\"); count += 1; } } } do while\u5faa\u73af\uff08\u81f3\u5c11\u6267\u884c1\u6b21\uff09 public class Hello { public static void main(String[] args) { int count = 0; do { System.out.println(\"\u6267\u884c\u4e2d...\"); count += 1; } while (count < 3); } } for\u5faa\u73af public class Hello { public static void main(String[] args) { for (int i = 0; i < 10; i++) { System.out.println(\"\u54c8\u54c8\u54c8\"); } } } public class Hello { public static void main(String[] args) { String[] nameList = {\"\u4fee\u4ed9\", \"\u8096\u5cf0\", \"\u9ebb\u5b50\", \"\u5341\u5206\"}; // nameList.length 4 // nameList[0] for (int idx = 0; idx < nameList.length; idx++) { String ele = nameList[idx]; System.out.println(ele); } } } \u6ce8\u610f\uff1a\u4e5f\u652f\u6301break/continue\u3002","title":"2.3.5 \u5faa\u73af\u8bed\u53e5"},{"location":"Dev_documents/java/meetJava/#2","text":"","title":"2. \u6570\u636e\u7c7b\u578b"},{"location":"Dev_documents/java/meetJava/#21","text":"byte\uff0c\u5b57\u8282 \u30101\u5b57\u8282\u3011\u8868\u793a\u8303\u56f4\uff1a-128 ~ 127 \u5373\uff1a -2^7 ~ 2^7 -1 short\uff0c\u77ed\u6574\u578b \u30102\u5b57\u8282\u3011\u8868\u793a\u8303\u56f4\uff1a-32768 ~ 32767 int\uff0c\u6574\u578b \u30104\u5b57\u8282\u3011\u8868\u793a\u8303\u56f4\uff1a-2147483648 ~ 2147483647 long\uff0c\u957f\u6574\u578b \u30108\u5b57\u8282\u3011\u8868\u793a\u8303\u56f4\uff1a-9223372036854775808 ~ 9223372036854775807","title":"2.1 \u6574\u6570\u7c7b\u578b"},{"location":"Dev_documents/java/meetJava/#22","text":"\u5b58\u653e\u56fa\u5b9a\u957f\u5ea6\u7684\u5143\u7d20\u3002 \u5bb9\u5668 \u56fa\u5b9a\u957f\u5ea6 \u7279\u5b9a\u7c7b\u578b import java.util.Arrays; public class Hello { public static void main(String[] args) { // [123,1,999] int[] numArray = new int[3]; numArray[0] = 123; numArray[1] = 1; numArray[2] = 99; System.out.println(Arrays.toString(numArray)); String[] names = new String[]{\"\u6b66\u6c9b\u9f50\", \"alex\", \"eric\"}; System.out.println(Arrays.toString(names)); String[] nameArray = {\"\u6b66\u6c9b\u9f50\", \"alex\", \"eric\"}; System.out.println(Arrays.toString(nameArray)); // nameArray[0] // nameArray.length for (int idx = 0; idx < nameArray.length; idx++) { String item = nameArray[idx]; } } } \u6ce8\u610f\uff1a\u6570\u7ec4\u4e00\u65e6\u521b\u5efa\u4e2a\u6570\u5c31\u4e0d\u53ef\u8c03\u6574\u3002","title":"2.2 \u6570\u7ec4"},{"location":"Dev_documents/java/meetJava/#23-object","text":"\u5728Java\u6240\u6709\u7684\u7c7b\u90fd\u662f\u9ed8\u8ba4\u7ee7\u627fObject\u7c7b\u3002 \u7528\u57fa\u7c7b\u53ef\u4ee5\u6cdb\u6307\u4ed6\u7684\u5b50\u7c7b\u7684\u7c7b\u578b\u3002 import sun.lwawt.macosx.CSystemTray; import java.util.Arrays; public class Hello { public static void main(String[] args) { // String v1 = \"wupeiqi\"; Object v1 = new String(\"wupeiqi\"); System.out.println(v1); System.out.println(v1.getClass()); Object v2 = 123; System.out.println(v2); System.out.println(v2.getClass()); } } import sun.lwawt.macosx.CSystemTray; import java.util.Arrays; public class Hello { public static void main(String[] args) { // \u58f0\u660e\u6570\u7ec4\uff0c\u6570\u7ec4\u4e2d\u5143\u7d20\u5fc5\u987bint\u7c7b\u578b; int[] v1 = new int[3]; // \u58f0\u660e\u6570\u7ec4\uff0c\u6570\u7ec4\u4e2d\u5143\u7d20\u5fc5\u987bString\u7c7b\u578b; String[] v2 = new String[3]; // \u58f0\u660e\u6570\u7ec4\uff0c\u6570\u7ec4\u4e2d\u53ef\u4ee5\u662f\u5fc5\u987bint/String\u7c7b\u578b; Object[] v3 = new Object[3]; v3[0] = 123; v3[1] = \"wupeiqi\"; } } \u6240\u4ee5\uff0c\u5982\u679c\u4ee5\u540e\u60f3\u8981\u58f0\u660e\u7684\u6570\u7ec4\u4e2d\u60f3\u8981\u662f\u6df7\u5408\u7c7b\u578b\uff0c\u5c31\u53ef\u4ee5\u7528Object\u6765\u5b9e\u73b0\u3002 import java.util.Arrays; public class Hello { public static void main(String[] args) { // v1\u662f\u6307\u4e0a\u5b57\u7b26\u4e32\u5bf9\u8c61\uff1bString String v1 = new String(\"wupeiqi\"); String res = v1.toUpperCase(); System.out.println(res); // v2\u672c\u8d28\u662f\u5b57\u7b26\u4e32\u5bf9\u8c61\uff1bObject Object v2 = new String(\"wupeiqi\"); String data = (String)v2; } } import java.util.Arrays; public class Hello { public static void func(Object v1) { // System.out.println(v1); // System.out.println(v1.getClass()); if (v1 instanceof Integer) { System.out.println(\"\u6574\u578b\"); } else if (v1 instanceof String) { System.out.println(\"\u5b57\u7b26\u4e32\u7c7b\u578b\"); } else { System.out.println(\"\u672a\u77e5\u7c7b\u578b\"); } } public static void main(String[] args) { func(123); func(\"123\"); } } Java\u4e2d\u6240\u6709\u7684\u7c7b\u90fd\u7ee7\u627fObject\uff0cObject\u4ee3\u6307\u6240\u6709\u7684\u7c7b\u578b\u3002 \u81ea\u5df1\u521b\u5efa\u5173\u7cfb ArrayList v1 = new ArrayList(); LinkedList v2 = new LinkedList(); List v1 = new ArrayList(); List v2 = new LinkedList(); Object v1 = new ArrayList(); Object v2 = new LinkedList(); import java.util.Arrays; public class Hello { public static void main(String[] args) { // \u58f0\u660e\u6570\u7ec4\uff0c\u6570\u7ec4\u4e2d\u5143\u7d20\u5fc5\u987bint\u7c7b\u578b; int[] v1 = new int[3]; // \u58f0\u660e\u6570\u7ec4\uff0c\u6570\u7ec4\u4e2d\u5143\u7d20\u5fc5\u987bString\u7c7b\u578b; String[] v2 = new String[3]; // \u58f0\u660e\u6570\u7ec4\uff0c\u6570\u7ec4\u4e2d\u53ef\u4ee5\u662f\u5fc5\u987bint/String\u7c7b\u578b; Object[] v3 = new Object[3]; v3[0] = 123; v3[1] = \"wupeiqi\"; } } \u6240\u4ee5\uff0c\u5982\u679c\u4ee5\u540e\u60f3\u8981\u58f0\u660e\u7684\u6570\u7ec4\u4e2d\u60f3\u8981\u662f\u6df7\u5408\u7c7b\u578b\uff0c\u5c31\u53ef\u4ee5\u7528Object\u6765\u5b9e\u73b0\u3002","title":"2.3 \u5173\u4e8eObject"},{"location":"Dev_documents/java/meetJava/#3","text":"","title":"3.\u5e38\u89c1\u6570\u636e\u7c7b\u578b"},{"location":"Dev_documents/java/meetJava/#31-list","text":"\u7c7b\u4f3c\u4e8ePython\u4e2d\u7684\u5217\u8868\u3002 List\u662f\u4e00\u4e2a\u63a5\u53e3\uff0c\u63a5\u53e3\u4e0b\u9762\u6709\u4e24\u4e2a\u5e38\u89c1\u7684\u7c7b\u578b\uff08\u76ee\u7684\u662f\u53ef\u4ee5\u5b58\u653e\u52a8\u6001\u7684\u591a\u4e2a\u6570\u636e\uff09 ArrayList\uff0c\u8fde\u7eed\u7684\u5185\u5b58\u5730\u5740\u7684\u5b58\u50a8\uff08\u5185\u90e8\u81ea\u52a8\u6269\u5bb9\uff09\u3002 -> Python\u5217\u8868\u7684\u7279\u70b9 LinkedList\uff0c\u5e95\u5c42\u57fa\u4e8e\u94fe\u8868\u5b9e\u73b0\uff08\u81ea\u884c\u8f66\u94fe\u6761\uff09\u3002 -> Python\u5217\u8868\u7684\u7279\u70b9 ArrayList v1 = new ArrayList(); v1.add(\"\u6b66\u6c9b\u9f50\"); v1.add(\"\u9ebb\u5b50\"); LinkedList v1 = new LinkedList(); v1.add(\"\u6b66\u6c9b\u9f50\"); v1.add(\"\u9ebb\u5b50\"); Java\u4e2d\u63a5\u53e3\uff0c\u662f\u7528\u6765\u7ea6\u675f\u5b9e\u73b0\u4ed6\u7684\u7c7b\uff0c\u7ea6\u675f\u4ed6\u91cc\u9762\u7684\u6210\u5458\u5fc5\u987b\u6709xx\u3002 interface List{ public void add(Object data); // \u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5\uff0c\u4e0d\u5199\u5177\u4f53\u7684\u5b9e\u73b0\uff0c\u53ea\u7528\u4e8e\u7ea6\u675f\u3002 } // \u7c7bArrayList\u5b9e\u73b0\u4e86\u63a5\u53e3List\uff0c\u6b64\u65f6\u8fd9\u4e2a\u7c7b\u5c31\u5fc5\u987b\u6709\u4e00\u4e2aadd\u65b9\u6cd5\u3002 class ArrayList implements List{ public void add(Object data){ // \u5c06\u6570\u636edata\u6309\u7167\u8fde\u7eed\u5b58\u50a8\u7684\u65b9\u6cd5\u653e\u5728\u5185\u5b58\u3002 // .. } } // \u7c7bLinkedList\u5b9e\u73b0\u4e86\u63a5\u53e3List\uff0c\u6b64\u65f6\u8fd9\u4e2a\u7c7b\u5c31\u5fc5\u987b\u6709\u4e00\u4e2aadd\u65b9\u6cd5\u3002 class LinkedList implements List{ public void add(Object data){ // \u5c06\u6570\u636edata\u6309\u7167\u94fe\u8868\u7684\u5f62\u5f0f\u5b58\u50a8 // .. } } List v1 = new ArrayList(); v1.add(\"\u6b66\u6c9b\u9f50\"); v1.add(\"\u9ebb\u5b50\"); List v1 = new LinkedList(); v1.add(\"\u6b66\u6c9b\u9f50\"); v1.add(\"\u9ebb\u5b50\"); ArrayList\u793a\u4f8b\uff1a import java.util.ArrayList; import java.util.Arrays; public class Hello { public static void main(String[] args) { // ArrayList\uff0c\u9ed8\u8ba4\u5185\u90e8\u5b58\u653e\u7684\u662f\u6df7\u5408\u6570\u636e\u7c7b\u578b\u3002 // ArrayList<String> data = new ArrayList<String>(); // ArrayList<Object> data = new ArrayList<Object>(); ArrayList data = new ArrayList(); data.add(\"\u6b66\u6c9b\u9f50\"); data.add(\"alex\"); data.add(666); data.add(\"tony\"); String value = data.get(1); // String value = (String) data.get(1); Object temp = data.get(1); String value = (String) temp; // \u8f6c\u5316\u53ef\u8f6c\u6362\u7684\u6570\u636e System.out.println(value); int xo = (int) data.get(2); System.out.println(xo); data.set(0, \"\u54c8\u54c8\u54c8\u54c8\"); System.out.println(data); data.remove(\"eric\"); data.remove(0); System.out.println(data); int size = data.size(); System.out.println(size); boolean exists = data.contains(\"\u6b66\u6c9b\u9f50\"); System.out.println(exists); for (Object item : data) { System.out.println(item); } for (int i = 0; i < data.size(); i++) { Object item = data.get(i); System.out.println(item); } } } LinkedList\u793a\u4f8b\uff1a import java.util.LinkedList; public class Hello { public static void main(String[] args) { LinkedList<Integer> v1 = new LinkedList<Integer>(); v1.add(11); v1.add(22); LinkedList<Object> v2 = new LinkedList<Object>(); v2.add(\"\u6709\u962a\u6df1\u96ea\"); v2.add(\"\u5927\u6865\u672a\u4e45\"); v2.add(666); v2.add(123); //v2.remove(1); //v2.remove(\"\u8def\u98de\"); v2.set(2, \"\u82cd\u8001\u5e08\"); v2.push(\"\u54c8\u54c8\u54c8\"); // v2.addFirst(11); for (int i = 0; i < v2.size(); i++) { Object item = v2.get(i); System.out.println(item); } for (Object item : v2) { System.out.println(item); } } } \u5173\u4e8e\u8fed\u4ee3\u5668\uff1a import java.util.*; public class Hello { public static void main(String[] args) { ArrayList s1 = new ArrayList(); s1.add(\"P\u7ad9\"); s1.add(\"B\u7ad9\"); s1.add(\"A\u7ad9\"); Iterator it = s1.iterator(); // \u8fed\u4ee3\u5668 while (it.hasNext()) { String item = (String) it.next(); System.out.println(item); } } }","title":"3.1 List\u7cfb\u5217"},{"location":"Dev_documents/java/meetJava/#32-set","text":"Set\u662f\u4e00\u4e2a \u63a5\u53e3 \uff0c\u5e38\u89c1\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\u7684\u6709\u4e24\u4e2a\u7c7b\uff0c\u7528\u4e8e\u5b9e\u73b0\u4e0d\u91cd\u590d\u7684\u591a\u5143\u7d20\u96c6\u5408\u3002 HashSet\uff0c\u53bb\u91cd\uff0c\u65e0\u5e8f\u3002 TreeSet\uff0c\u53bb\u91cd\uff0c\u5185\u90e8\u9ed8\u8ba4\u6392\u5e8f\uff08ascii\u3001unicode\uff09\u3010\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\uff0c\u65e0\u6cd5\u8fdb\u884c\u6bd4\u8f83\u3011\u3002 import java.util.*; public class Hello { public static void main(String[] args) { // HashSet s1 = new HashSet(); // Set s1 = new HashSet(); // HashSet<String> s1 = new HashSet<String>(); HashSet s1 = new HashSet(); s1.add(\"P\u7ad9\"); s1.add(\"B\u7ad9\"); s1.add(\"A\u7ad9\"); s1.add(\"P\u7ad9\"); s1.add(666); System.out.println(s1); // [B\u7ad9, A\u7ad9, P\u7ad9,666] // s2 = {\"\u4e1c\u4eac\u70ed\",\"\u4e1c\u5317\u70ed\",\"\u5357\u4eac\u70ed\"} HashSet s2 = new HashSet(){ { add(\"\u4e1c\u4eac\u70ed\"); add(\"\u4e1c\u5317\u70ed\"); add(\"\u5357\u4eac\u70ed\"); } }; System.out.println(s2); // Set s2 = new TreeSet(); // TreeSet<String> s2 = new TreeSet<String>(); TreeSet s3 = new TreeSet(); s3.add(\"P\u7ad9\"); s3.add(\"B\u7ad9\"); s3.add(\"A\u7ad9\"); s3.add(\"P\u7ad9\"); // s3.add(666); //\u4e0d\u53ef\u4ee5 System.out.println(s3); // [B\u7ad9, A\u7ad9, P\u7ad9] TreeSet s4 = new TreeSet(){ { add(\"P\u7ad9\"); add(\"B\u7ad9\"); add(\"A\u7ad9\"); add(\"P\u7ad9\"); } }; System.out.println(s4); // [B\u7ad9, A\u7ad9, P\u7ad9] } } \u5173\u4e8e\u4ea4\u5e76\u5dee\uff1a import java.util.*; public class Hello { public static void main(String[] args) { // Set s1 = new HashSet(); HashSet s1 = new HashSet(); s1.add(\"P\u7ad9\"); s1.add(\"B\u7ad9\"); s1.add(\"A\u7ad9\"); s1.remove(\"P\u7ad9\"); System.out.println(s1); // [B\u7ad9, A\u7ad9, P\u7ad9] boolean exists = s1.contains(\"B\u7ad9\"); System.out.println(exists); HashSet s2 = new HashSet(); s2.add(123); s2.add(456); HashSet v1 = new HashSet(); // \u7a7a -> [B\u7ad9, A\u7ad9, P\u7ad9] v1.addAll(s1); v1.retainAll(s2); // \u4ea4\u96c6 & System.out.println(v1); HashSet v2 = new HashSet(); v2.addAll(s1); v2.addAll(s2); // \u5e76\u96c6 | System.out.println(v2); HashSet v3 = new HashSet(); v3.addAll(s1); v3.removeAll(s2); // \u5dee\u96c6 s1 - s2 System.out.println(v3); HashSet v4 = new HashSet(); v4.addAll(s2); v4.removeAll(s1); // \u5dee\u96c6 s2 - s1 System.out.println(v4); } } \u5173\u4e8e\u5faa\u73af\u83b7\u53d6\uff1a import java.util.*; public class Hello { public static void main(String[] args) { TreeSet s1 = new TreeSet(); s1.add(\"P\u7ad9\"); s1.add(\"B\u7ad9\"); s1.add(\"A\u7ad9\"); for (Object item : s1) { System.out.println(item); } } } \u5173\u4e8e\u8fed\u4ee3\u5668\uff1a import java.util.*; public class Hello { public static void main(String[] args) { TreeSet s1 = new TreeSet(); s1.add(\"P\u7ad9\"); s1.add(\"B\u7ad9\"); s1.add(\"A\u7ad9\"); Iterator it = s1.iterator(); while (it.hasNext()) { String item = (String) it.next(); System.out.println(item); } } }","title":"3.2 Set\u7cfb\u5217"},{"location":"Dev_documents/java/meetJava/#33-map","text":"Map\u662f\u4e00\u4e2a\u63a5\u53e3\uff0c\u5e38\u89c1\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\u7684\u6709\u4e24\u4e2a\u7c7b\uff0c\u7528\u4e8e\u5b58\u50a8\u952e\u503c\u5bf9\u3002 HashMap\uff0c\u65e0\u5e8f\u3002 TreeMap\uff0c\u9ed8\u8ba4\u6839\u636ekey\u6392\u5e8f\u3002\uff08\u5e38\u7528\uff09 \u5728Python\u4e2d\u9700\u8981\u81ea\u5df1\u5904\u7406key\u6392\u5e8f\u7684\u95ee\u9898\u3002 v4 = { \"aid\":123, \"xx\":999, \"wid\":888 } # 1.\u6839\u636ekey\u8fdb\u884c\u6392\u5e8f # data = [\"{}={}\".format(key,v4[key]) for key in sorted(v4.keys())] # 2.\u518d\u8fdb\u884c\u62fc\u63a5 # result = \"&\".join(data) result = \"&\".join([\"{}={}\".format(key,v4[key]) for key in sorted(v4.keys())]) import java.util.*; public class Hello { public static void main(String[] args) { HashMap h1 = new HashMap(); h1.put(\"name\",\"alex\"); h1.put(\"age\",18); h1.put(\"hobby\",\"\u7537\"); System.out.println(h1); // {gender=\u7537, name=alex, age=18} HashMap<String,String> h2 = new HashMap<String,String>(); h2.put(\"name\",\"alex\"); h2.put(\"age\",\"18\"); h2.put(\"hobby\",\"\u7537\"); System.out.println(h2); // {gender=\u7537, name=alex, age=18} HashMap<String,String> h3 = new HashMap<String,String>(){ { put(\"name\",\"alex\"); put(\"age\",\"18\"); put(\"hobby\",\"\u7537\"); } }; System.out.println(h3); // {gender=\u7537, name=alex, age=18} } } import java.util.*; public class Hello { public static void main(String[] args) { TreeMap h1 = new TreeMap(); // \u6539\u4e3a\u4e86TreeMap h1.put(\"name\",\"alex\"); h1.put(\"age\",18); h1.put(\"hobby\",\"\u7537\"); System.out.println(h1); // {age=18, hobby=\u7537, name=alex} TreeMap<String,String> h2 = new TreeMap<String,String>(); h2.put(\"name\",\"alex\"); h2.put(\"age\",\"18\"); h2.put(\"hobby\",\"\u7537\"); System.out.println(h2); // {age=18, hobby=\u7537, name=alex} TreeMap<String,String> h3 = new TreeMap<String,String>(){ { put(\"name\",\"alex\"); put(\"age\",\"18\"); put(\"hobby\",\"\u7537\"); } }; System.out.println(h3); // {age=18, hobby=\u7537, name=alex} Map h4 = new TreeMap(); h4.put(\"name\",\"alex\"); h4.put(\"age\",18); h4.put(\"hobby\",\"\u7537\"); System.out.println(h4); // {age=18, hobby=\u7537, name=alex} } } \u5e38\u89c1\u64cd\u4f5c\uff1a import java.util.*; public class Hello { public static void main(String[] args) { TreeMap h1 = new TreeMap(); // \u6539\u4e3a\u4e86TreeMap h1.put(\"name\", \"alex\"); h1.put(\"age\", \"18\"); h1.put(\"hobby\", \"\u7537\"); h1.put(\"hobby\", \"\u5973\u4eba\"); h1.remove(\"age\"); int size = h1.size(); Object value = h1.get(\"name\"); // \u4e0d\u5b58\u5728\uff0c\u8fd4\u56denull System.out.println(value); boolean existsKey = h1.containsKey(\"age\"); boolean existsValue = h1.containsValue(\"alex\"); h1.replace(\"name\", \"\u674e\u6770\"); System.out.println(h1); // \u5faa\u73af: \u793a\u4f8b1 // { (\"name\", \"alex\")\uff0c(\"age\", \"18\"), } Set<Map.Entry<String, String>> s1 = h1.entrySet(); Iterator it1 = s1.iterator(); while (it1.hasNext()) { // (\"name\", \"alex\") Map.Entry<String, String> entry = (Map.Entry<String, String>) it1.next(); String k = (String) entry.getKey(); String v = (String) entry.getValue(); } // \u5faa\u73af: \u793a\u4f8b2 Set s2 = h1.entrySet(); Iterator it2 = s2.iterator(); while (it2.hasNext()) { Map.Entry entry = (Map.Entry) it2.next(); String k = (String) entry.getKey(); String v = (String) entry.getValue(); } // \u5faa\u73af: \u793a\u4f8b3 TreeMap<String, String> h2 = new TreeMap<String, String>(); // \u6539\u4e3a\u4e86TreeMap h2.put(\"name\", \"alex\"); h2.put(\"age\", \"18\"); for (Map.Entry<String, String> entry : h2.entrySet()) { String k = entry.getKey(); String v = entry.getValue(); } // \u5faa\u73af: \u793a\u4f8b4 TreeMap h3 = new TreeMap(); // \u6539\u4e3a\u4e86TreeMap h3.put(\"name\", \"alex\"); h3.put(\"age\", 18); for (Object entry : h3.entrySet()) { Map.Entry<String, Object> entryMap = (Map.Entry<String, Object>) entry; String k = entryMap.getKey(); Object v = entryMap.getValue(); // 18 \"alex\" if (v instanceof Integer) { System.out.println(\"\u6570\u5b57\uff1a\" + Integer.toString((Integer) v)); } else if (v instanceof String) { System.out.println(\"\u5b57\u7b26\u4e32\uff1a\" + (String) v); } else { System.out.println(\"\u672a\u77e5\u7c7b\u578b\uff1a\" + v.toString()); } } } }","title":"3.3 Map\u7cfb\u5217"},{"location":"Dev_documents/java/meetJava/#4","text":"Python\uff0c\u51fd\u6570\u5f0f+\u9762\u5411\u5bf9\u8c61\u3002 Java\uff0c\u9762\u5411\u5bf9\u8c61\u3002","title":"4.\u9762\u5411\u5bf9\u8c61\u76f8\u5173"},{"location":"Dev_documents/java/meetJava/#41","text":"class Person { // \u5b9e\u4f8b\u53d8\u91cf public String name; public Integer age; // \u6784\u9020\u65b9\u6cd51 public Person() { this.name = \"Eric\"; this.age = 99999; } } Person obj = new Person(); class Person: # \u521d\u59cb\u5316\u65b9\u6cd5\uff0c 1. __new__\u65b9\u6cd5\uff0c\u6784\u9020\u65b9\u6cd5\u521b\u5efa\u7a7a\u5bf9\u8c61 2.__init___\u65b9\u6cd5 def __init__(self): self.name = \"eric\" self.age = 999999 obj = Person() class Person { // \u5b9e\u4f8b\u53d8\u91cf public String name; public Integer age; public String email; // \u6784\u9020\u65b9\u6cd51 public Person() { this.name = \"Eric\"; this.age = 99999; } // \u6784\u9020\u65b9\u6cd52 public Person(String name, Integer age) { this.name = name; this.age = age; this.email = \"xxx@live.com\"; } // \u6784\u9020\u65b9\u6cd53 public Person(String name, String email) { this.name = name; this.age = 83; this.email = email; } } Person obj1 = new Person(\"wupeiqi\",11); Person obj2 = new Person(); class Person { // \u5b9e\u4f8b\u53d8\u91cf public String name; public Integer age; public String email; // \u6784\u9020\u65b9\u6cd51 public Person() { this.name = \"Eric\"; this.age = 99999; } // \u6784\u9020\u65b9\u6cd52 public Person(String name, Integer age) { this.name = name; this.age = age; this.email = \"xxx@live.com\"; } // \u6784\u9020\u65b9\u6cd53 public Person(String name, String email) { this.name = name; this.age = 83; this.email = email; } // \u5b9a\u4e49\u65b9\u6cd5\uff08\u91cd\u8f7d\uff09 public void doSomething() { System.out.println(this.name); } // \u5b9a\u4e49\u65b9\u6cd5\uff08\u91cd\u8f7d\uff09 public void doSomething(String prev) { String text = String.format(\"%s-%s\", prev, this.name); System.out.println(text); } } public class Hello { public static void main(String[] args) { // \u5b9e\u4f8b\u5316\u5bf9\u8c61\u65f6\uff0c\u4f53\u73b0\u7684\u4e3b\u8981\u662f\u5c01\u88c5\u3002 Person p1 = new Person(); Person p2 = new Person(\"alex\", 73); Person p3 = new Person(\"tony\", \"alex@sb.com\"); p1.doSomething(); p1.doSomething(\"\u4f60\u597d\u5440\uff0c\"); p2.doSomething(); p2.doSomething(\"\u4f60\u597d\u5440\uff0c\"); p3.doSomething(); p3.doSomething(\"\u4f60\u597d\u5440\uff0c\"); } }","title":"4.1 \u7c7b\u548c\u5bf9\u8c61"},{"location":"Dev_documents/java/meetJava/#42","text":"class Foo: v1 = \"\u6b66\u6c9b\u9f50\" # \u9759\u6001\u53d8\u91cf\uff08\u5c5e\u4e8e\u7c7b\uff0c\u4e0e\u5bf9\u8c61\u65e0\u5173\uff09 def __init__(self): self.name = \"alex\" # \u5b9e\u4f8b\u53d8\u91cf\uff0c\u5c5e\u4e8e\u5bf9\u8c61 print(Foo.v1) # 1.\u521b\u5efa\u7a7a\u7684\u533a\u57df # 2.\u81ea\u52a8\u6267\u884c\u6784\u9020\u65b9\u6cd5 __init__ obj = Foo() print(obj.name) print(obj.v1) class Person { // \u9759\u6001\u53d8\u91cf public static String city = \"\u5317\u4eac\"; // \u5b9e\u4f8b\u53d8\u91cf public String name; public Integer age; // \u6784\u9020\u65b9\u6cd51 public Person() { this.name = \"Eric\"; this.age = 99999; } // \u7ed1\u5b9a\u65b9\u6cd5 public void showInfo(){ System.out.println(\"\u54c8\u54c8\u54c8\u54c8\"); } // \u9759\u6001\u65b9\u6cd5 public static void showData(){ System.out.println(\"\u54c8\u54c8\u54c8\u54c8\"); } } Person.city; Person.showData(); Person obj = new Person(); obj.name; obj.age; obj.showInfo(); \u672c\u8d28\uff1a\u9759\u6001\u5c5e\u4e8e\u7c7b\uff1b\u975e\u9759\u6001\u5c5e\u4e8e\u5bf9\u8c61\u3002","title":"4.2 \u9759\u6001\u6210\u5458"},{"location":"Dev_documents/java/meetJava/#43","text":"Java\u4e2d\u7684\u7ee7\u627f\uff0c\u53ea\u652f\u6301\u5355 \u7ee7\u627f \uff0c\u4e0d\u652f\u6301\u591a\u7ee7\u627f\uff0c\u4f46\u652f\u6301 \u5b9e\u73b0 \u591a\u4e2a\u63a5\u53e3\u3002 class Base{ ... } class Foo{ ... } class Son(Base){ } interface Base{ public void add(); } interface Foo{ public void plus(); } class Son implements Base,Foo { public void add(){ } public void plus(){ } } Python\u4e2d\u4e4b\u548c\u591a\u7ee7\u627f\u3002 class Foo(Base,Bar): pass class Foo(IBase,IBar): pass class Base { public String email; public Base(String email) { this.email = email; } public String getSubInfo() { return String.format(\"%s\", this.email); } } // Base obj1 = new Base(\"xx\"); // obj1.email; // \"xx\" // obj1.getSubInfo(); class Person extends Base { public String name; public Integer age; public Person(String name, Integer age, String email) { super(email);// \u6267\u884c\u7236\u7c7b\u7684\u6784\u9020\u65b9\u6cd5 this.name = name; this.age = age; } public String getInfo(String v1) { return String.format(\"%s-%d-%s\", this.name, this.age, this.email); } } // obj2 ==> email=\"xxx@live.com\" name=\"wupeiqi\" age=19 Person obj2 = new Person(\"wupeiqi\",19,\"xxx@live.com\"); // obj2.name; // obj2.age; // obj2.email; // obj2.getInfo(\"xxx\"); // obj2.getSubInfo(); \u7528\u7236\u7c7b\u6cdb\u6307\u6240\u6709\u7684\u5b50\u7c7b\u3002 class Base { } class Person extends Base { } Person v1 = new Person(); // v1\u662fPerson\u7c7b\u578b\u7684\u5bf9\u8c61 Base v2 = new Person(); // v2\u662fPerson\u7c7b\u578b\u7684\u5bf9\u8c61 class Base { public void show() { System.out.println(\"111\"); } } class Person extends Base { public void show() { System.out.println(\"222\"); } } Person v1 = new Person(); v1.show(); // 222 Base v2 = new Base(); v2.show(); // 111 Base v3 = new Person(); v3.show(); // 222 class Base { public String email; public Base(String email) { this.email = email; } public void getSubInfo() { System.out.println(\"111\"); } } // Person\u7c7b\u7ee7\u627fBase\u7c7b class Person extends Base { public String name; public Person(String name, Integer age, String email) { super(email);// \u6267\u884c\u7236\u7c7b\u7684\u6784\u9020\u65b9\u6cd5 this.name = name; } public void getSubInfo() { System.out.println(\"222\"); } } public class Hello { public static void handler(Base v1){ v1.getSubInfo(); } // \u4e3b\u51fd\u6570 public static void main(String[] args) { Person obj1 = new Person(\"wupeiqi\",19,\"xxx@live.com\"); handler(obj1); // 222 Base obj2 = new Base(\"xxx@live.com\"); handler(obj2); // 111 Base obj3 = new Person(\"wupeiqi\",19,\"xxx@live.com\"); handler(obj3); // 222 } }","title":"4.3 \u7ee7\u627f"},{"location":"Dev_documents/java/meetJava/#44","text":"\u63a5\u53e3\uff1a \u7ea6\u675f\uff0c\u5b9e\u73b0\u4ed6\u7684\u7c7b\u3002 \u6cdb\u6307 \u5b9e\u73b0 \u4ed6\u4e86\u7c7b\u3002 interface IMessage { public void send(); } // Wechat\u7c7b\"\u5b9e\u73b0\"\u4e86Imessage\u63a5\u53e3 class Wechat implements IMessage { public void send() { System.out.println(\"\u53d1\u9001\u5fae\u4fe1\"); } } class DingDing implements IMessage { public void send() { System.out.println(\"\u53d1\u9001\u9489\u9489\"); } } class Sms implements IMessage { public void send() { System.out.println(\"\u53d1\u9001\u77ed\u4fe1\"); } } Wechat v1 = new Wechat(); IMessage v2 = new Wechat(); public class Hello { // \u591a\u6001 -> \u591a\u79cd\u5f62\u6001 IMessage public static void handler(IMessage v1){ v1.send(); } // \u4e3b\u51fd\u6570 public static void main(String[] args) { Sms v1 = new Sms(); handler(v1); } } \u5728Java\u4e2d\uff1a\u4e0d\u652f\u6301\u540c\u65f6\u7ee7\u627f\u591a\u4e2a\u7c7b\uff1b\u652f\u6301\u5b9e\u73b0\u591a\u4e2a\u63a5\u53e3\u3002 interface IPerson { public void f1(); public void f1(int age); public void f2(String info); } interface IUser { public String f3(int num); } class Base { public String name; public Integer age; public String email; public Base(String name, Integer age, String email) { this.name = name; this.age = age; this.email = email; } public String getSubInfo() { return String.format(\"%s\", this.email); } } class Person extends Base implements IUser, IPerson { public Person(String name, Integer age, String email) { super(name, age, email); } public String getInfo() { return String.format(\"%s-%d-%s\", this.name, this.age, this.email); } public void f1() { System.out.println(\"F1,\u65e0\u53c2\u6570\"); } public void f1(int age) { System.out.println(\"F1,age\u53c2\u6570\"); } public void f2(String info) { System.out.println(\"F2\"); } public String f3(int num) { return \"\u54c8\u54c8\u54c8\"; } } public class Hello { public static void main(String[] args) { Person p = new Person(\"\u65e5\u5929\", 83, \"ritian@live.com\"); p.f1(); } } \u5047\u8bbe\u6211\u73b0\u5728\u5728\u8fdb\u884c\u9006\u5411\uff0c\u62ff\u5230apk\uff0c\u5173\u4e8e\u5173\u952e\u5b57\u53bb\u641c\u7d22\uff1af2 \uff0c\u5b9a\u4f4d\u5230\u4e00\u4e2a\u63a5\u53e3\u4e86\u3002 interface IPerson { public void f1(); public void f1(int age); public void f2(String info); } \u63a5\u4e0b\u6765\uff0c\u4f60\u5c31\u5e94\u8be5\u53bb\u770b\u90fd\u6709\u54ea\u4e9b\u7c7b \u5b9e\u73b0\u4e86 IPerson \u63a5\u53e3\u3002 \u53ea\u67091\u4e2a\u7c7b\u5b9e\u73b0 IPerson\u3002 \u591a\u7c7b\u7c7b\u5b9e\u73b0 IPerson \u63a5\u53e3\uff0c\u7b5b\u9009\u5230\u5e95\u662f\u90a3\u4e2a\u7c7b\uff1f","title":"4.4 \u63a5\u53e3"},{"location":"Dev_documents/java/meetJava/#45","text":"// \u62bd\u8c61\u7c7b abstract class Base { // \u62bd\u8c61\u65b9\u6cd5\uff08\u7ea6\u675f\u5b50\u7c7b\u4e2d\u5fc5\u987b\u6709\u8fd9\u4e2a\u65b9\u6cd5\uff09 public abstract void play(String name); // \u666e\u901a\u65b9\u6cd5 public void stop() { System.out.println(\"Stop\"); } } class Son extends Base{ public void play(String name){ // ... } } Son obj = new Son(); obj.stop(); obj.play(); Base obj1 = new Son(); \u6ce8\u610f\uff1a\u4e5f\u53ef\u4ee5\u6cdb\u6307\u4ed6\u7684\u5b50\u7c7b\u3002","title":"4.5 \u62bd\u8c61"},{"location":"Dev_documents/java/meetJava/#5","text":"src \u251c\u2500\u2500 Hello.java \u2514\u2500\u2500 utils \u2514\u2500\u2500 Helper.java // hello.java import utils.Helper; public class Hello { public static void main(String[] args) { String data = Helper.getInfo(); System.out.println(data); } } // helper.java package utils; public class Helper { public static String getInfo() { return \"\u54c8\u54c8\u54c8\"; } } \u7c7b\u7684\u4fee\u9970\u7b26\uff1a public\uff0c\u516c\u5171\uff08\u4efb\u4f55\u4eba\u90fd\u80fd\u8c03\u7528\u5305\u4e2d\u7684\u7c7b\uff09\u3002 default\uff0c\u53ea\u80fd\u5728\u5f53\u524d\u5305\u4e2d\u88ab\u8c03\u7528\u3002 \u7c7b\u6210\u5458\u4fee\u9970\u7b26\uff1a public\uff0c\u516c\u5171\uff0c\u6240\u6709\u7684\u53ea\u8981\u6709\u6743\u9650\u8bbf\u95ee\u7c7b\uff0c\u7c7b\u4e2d\u7684\u6210\u5458\u90fd\u53ef\u4ee5\u8bbf\u95ee\u5230\u3002 private\uff0c\u79c1\u6709\uff0c\u53ea\u5141\u8bb8\u81ea\u5df1\u7c7b\u8c03\u7528\u3002 protected\uff0c\u540c\u4e00\u4e2a\u5305 \u6216 \u5b50\u7c7b\u53ef\u4ee5\u8bbf\u95ee\uff08\u5373\u4f7f\u6ca1\u6709\u5728\u540c\u4e00\u4e2a\u5305\u5185\uff0c\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u7236\u7c7b\u4e2d\u7684\u53d7\u4fdd\u62a4\u6210\u5458\uff09\u3002 default\uff0c\u53ea\u80fd\u5728\u540c\u4e00\u4e2a\u5305\u5185\u8bbf\u95ee\u3002 \u76ee\u7684\uff1a\u901a\u8fc7\u5173\u952e\u5b57\u8ba9\u8c03\u7528\u5173\u7cfb\u66f4\u52a0\u6e05\u6670\uff08\u4e0d\u8fc7\uff0c\u5f88\u591a\u9879\u76ee\u4e0d\u4f1a\u7528\u7684\u90a3\u4e48\u4e13\u4e1a\uff09\u3002","title":"5.\u5305\u6982\u5ff5"},{"location":"Dev_documents/javaGUI/javaGUI/","text":"11.Java GUI AWT 1.\u7ec4\u4ef6\u548c\u5bb9\u5668 Frame \u5f39\u51fa\u4e00\u4e2a\u7a97\u53e3\u3002 package uichuan; import java.awt.*; import java.awt.event.WindowAdapter; import java.awt.event.WindowEvent; public class TestFrame { public static void main(String[] args) { Frame frame = new Frame(\"First_windows\"); //\u770b\u5f97\u89c1 frame.setVisible(true); //\u5c3a\u5bf8 frame.setSize(400,400); //\u80cc\u666f\u8272 frame.setBackground(Color.BLACK); //\u5f39\u51fa\u521d\u59cb\u4f4d\u7f6e frame.setLocation(200,200); //\u8bbe\u7f6e\u5927\u5c0f\u56fa\u5b9a frame.setResizable(false); // \u7b80\u542c\u7a97\u53e3\u5173\u95ed\u4e8b\u4ef6 frame.addWindowListener(new WindowAdapter() { //\u7a97\u53e3\u5173\u95ed\u65f6\u505a\u7684\u4e8b\u60c5 @Override public void windowClosing(WindowEvent e) { System.exit(0); } }); } } \u5f39\u51fa\u591a\u4e2a\u7a97\u53e3\uff08\u5c01\u88c5\uff09 package uichuan; import java.awt.*; public class TestFrame_2 { public static void main(String[] args) { //\u5c55\u793a\u591a\u4e2a\u7a97\u53e3 MyFrame myFrame1 = new MyFrame(100,100,200,200); MyFrame myFrame2 = new MyFrame(300,100,200,200); MyFrame myFrame3 = new MyFrame(100,300,200,200); MyFrame myFrame4 = new MyFrame(300,300,200,200); } } class MyFrame extends Frame{ // \u591a\u4e2a\u7a97\u53e3\uff0c\u8ba1\u6570\u5668 static int id = 0; public MyFrame(int x,int y,int w,int h){ super(\"MyFrame\"+(++id)); setVisible(true); setBounds(x,y,w,h); setBackground(Color.BLACK); } } \u5173\u95ed\u7a97\u53e3\uff08\u70b9\u51fb\u5173\u95ed\u6309\u94ae->\u7a0b\u5e8f\u7ed3\u675f\uff09 \u9002\u7528\u4e8eAWT \u91cd\u5199\u4e86windowClosing\u65b9\u6cd5 // \u7b80\u542c\u7a97\u53e3\u5173\u95ed\u4e8b\u4ef6 frame.addWindowListener(new WindowAdapter() { //\u7a97\u53e3\u5173\u95ed\u65f6\u505a\u7684\u4e8b\u60c5 @Override public void windowClosing(WindowEvent e) { System.exit(0); } }); 2.\u9762\u677fPanel Panel\u9762\u677f\u9700\u8981frame\u4e2d \u4f7f\u7528 frame.add(panel); \u5c06\u9762\u677f\u6dfb\u52a0\u5230frame\u4e2d\u53bb \u540c\u6837\u7684\uff0cpanel\u4e5f\u80fd\u8bbe\u7f6e\u76f8\u5e94\u7684\u53c2\u6570 \u5750\u6807 \u80cc\u666f\u989c\u8272 \u5c3a\u5bf8 ...... package uichuan; import java.awt.*; import java.awt.event.WindowAdapter; import java.awt.event.WindowEvent; import java.awt.event.WindowListener; //panel\u770b\u4f5c\u4e00\u4e2a\u7a7a\u95f4\uff0c\u4e0d\u80fd\u5355\u72ec\u5b58\u5728 public class TestPanel { public static void main(String[] args) { Frame frame = new Frame(\"xx\"); frame.setVisible(true); // \u5e03\u5c40 Panel panel = new Panel(); // \u8bbe\u7f6e\u5e03\u5c40 frame.setLayout(null); frame.setSize(400,400); //\u5750\u6807 frame.setBounds(300,300,500,500); frame.setBackground(Color.BLACK); //panel\u8bbe\u7f6e\u5750\u6807\uff0cpanel\u76f8\u5bf9\u4e0eframe panel.setBounds(50,50,400,400); panel.setBackground(Color.WHITE); frame.add(panel); // \u7b80\u542c\u7a97\u53e3\u5173\u95ed\u4e8b\u4ef6 frame.addWindowListener(new WindowAdapter() { //\u7a97\u53e3\u5173\u95ed\u65f6\u505a\u7684\u4e8b\u60c5 @Override public void windowClosing(WindowEvent e) { System.exit(0); } }); } } 3.\u5e03\u5c40 - \u6d41\u5f0f\u5e03\u5c40 frame.setLayout(new FlowLayout()); \u7528\u4e8e\u8bbe\u7f6e\u6d41\u5f0f\u5e03\u5c40\u7684\u662f FlowLayout() \u5bf9\u8c61\uff0c\u5176\u4e2d\u7684\u53c2\u6570\u7528\u6765\u8bbe\u7f6e\u6d41\u5f0f\u5e03\u5c40\u7684\u7ec6\u8282 frame.setLayout(new FlowLayout(FlowLayout.LEFT)); frame.setLayout(new FlowLayout(FlowLayout.RIGHT)); package uichuan; import java.awt.*; import java.awt.event.WindowAdapter; import java.awt.event.WindowEvent; public class TestFlowLayout { public static void main(String[] args) { Frame frame = new Frame(); frame.setSize(500, 500); frame.setVisible(true); frame.addWindowListener(new WindowAdapter() { //\u7a97\u53e3\u5173\u95ed\u65f6\u505a\u7684\u4e8b\u60c5 @Override public void windowClosing(WindowEvent e) { System.exit(0); } }); //\u6309\u94ae\u7ec4\u4ef6 Button button1 = new Button(\"\u70b9\u6211\"); Button button2 = new Button(\"\u70b9\u6211\"); Button button3 = new Button(\"\u70b9\u6211\"); frame.add(button1); frame.add(button2); frame.add(button3); // \u8bbe\u7f6e\u4e3a\u6d41\u5f0f\u5e03\u5c40 frame.setLayout(new FlowLayout()); // frame.setLayout(new FlowLayout(FlowLayout.LEFT)); // frame.setLayout(new FlowLayout(FlowLayout.RIGHT)); } } - \u4e1c\u897f\u5357\u5317\u4e2d frame.add(button1,BorderLayout.EAST); add()\u4e2d\u4f20\u5165\u4e00\u4e2a Component \u5bf9\u8c61\uff0c\u4e5f\u53ef\u4ee5\u4f20\u5165\u5e03\u5c40 BorderLayout.EAST \u6e90\u7801 public void add(Component comp, Object constraints) { addImpl(comp, constraints, -1); } \u5b9e\u73b0\u4e1c\u897f\u5357\u5317\u4e2d\u5e03\u5c40 package uichuan; import java.awt.*; import java.awt.event.WindowAdapter; import java.awt.event.WindowEvent; public class TestBoderLayout { public static void main(String[] args) { Frame frame = new Frame(\"TestBoderLayout\"); frame.setVisible(true); frame.setSize(400,400); frame.addWindowListener(new WindowAdapter() { //\u7a97\u53e3\u5173\u95ed\u65f6\u505a\u7684\u4e8b\u60c5 @Override public void windowClosing(WindowEvent e) { System.exit(0); } }); Button button1 = new Button(\"East\"); Button button2 = new Button(\"West\"); Button button3 = new Button(\"South\"); Button button4 = new Button(\"North\"); Button button5 = new Button(\"center\"); frame.add(button1,BorderLayout.EAST); frame.add(button2,BorderLayout.WEST); frame.add(button3,BorderLayout.SOUTH); frame.add(button4,BorderLayout.NORTH); frame.add(button5,BorderLayout.CENTER); } } - \u8868\u683c\u5e03\u5c40 frame.setLayout(new GridLayout(3,2)); \u4f20\u5165 GridLayout \u5bf9\u8c61 package uichuan; import java.awt.*; import java.awt.event.WindowAdapter; import java.awt.event.WindowEvent; public class TestGridLayout { public static void main(String[] args) { Frame frame = new Frame(\"TestGridLayout\"); frame.setVisible(true); frame.setSize(400, 400); frame.addWindowListener(new WindowAdapter() { //\u7a97\u53e3\u5173\u95ed\u65f6\u505a\u7684\u4e8b\u60c5 @Override public void windowClosing(WindowEvent e) { System.exit(0); } }); Button button1 = new Button(\"\u70b9\u6211\"); Button button2 = new Button(\"\u70b9\u6211\"); Button button3 = new Button(\"\u70b9\u6211\"); Button button4 = new Button(\"\u70b9\u6211\"); Button button5 = new Button(\"\u70b9\u6211\"); Button button6 = new Button(\"\u70b9\u6211\"); frame.setLayout(new GridLayout(3,2)); frame.add(button1); frame.add(button2); frame.add(button3); frame.add(button4); frame.add(button5); frame.add(button6); } } - \u7ec3\u4e60 \u5b9e\u73b0\u5982\u4e0b\u5e03\u5c40\uff1a \u601d\u8def\uff1a - frame - \u4e0a\u534a\u90e8\u5206 - Grid\u4e1c\u897f + Center\u5e03\u5c40 - \u4e1c\uff0c\u897fbutton - Center\u4e2d\u5d4c\u5957\u8868\u683c\u5e03\u5c40Grid - Grid\u5206\u6210\u4e24\u884c\u4e00\u5217\u7684\u4e0a\u4e0b\u5e03\u5c40 - Button1 - Button2 - \u4e0b\u534a\u90e8\u5206\u4e0e\u4e0a\u534a\u90e8\u5206\u76f8\u540c - Center\u90e8\u5206\u7565\u5fae\u4e0d\u540c Center\u653e\u7f6e\u4e86\u4e00\u4e2a2*2\u7684\u8868\u683c\u5e03\u5c40 - \u5728\u8868\u683cGrid\u4e2d\u586b\u5145button\u5373\u53ef \u6838\u5fc3\u5e03\u5c40\u4ee3\u7801\uff1a // Frame\u91c7\u7528\u8868\u683c\u5e03\u5c40 frame.setLayout(new GridLayout(2, 1)); // \u56db\u4e2a\u9762\u677f Panel panel1 = new Panel(new BorderLayout()); Panel panel2 = new Panel(new GridLayout(2, 1)); Panel panel3 = new Panel(new BorderLayout()); Panel panel4 = new Panel(new GridLayout(2, 2)); //\u6dfb\u52a0\u6309\u94ae,\u4e0a\u534a\u90e8\u5206 panel1.add(new Button(\"East-1\"), BorderLayout.EAST); panel1.add(new Button(\"West-1\"), BorderLayout.WEST); panel2.add(new Button(\"p2-btn-1\")); panel2.add(new Button(\"p2-btn-2\")); panel1.add(panel2, BorderLayout.CENTER); //\u6dfb\u52a0\u6309\u94ae,\u4e0b\u534a\u90e8\u5206 panel3.add(new Button(\"East-2\"), BorderLayout.EAST); panel3.add(new Button(\"West-2\"), BorderLayout.WEST); //\u4e2d\u95f4\u56db\u4e2a,\u5faa\u73af\u5b9e\u73b0 for (int i = 0; i < 4; i++) { panel4.add(new Button(\"for-\" + i)); } panel3.add(panel4, BorderLayout.CENTER); //Frame\u6dfb\u52a0Panel frame.add(panel1); frame.add(panel3); \u6240\u6709\u4ee3\u7801\uff1a package uichuan; import javafx.scene.layout.Pane; import java.awt.*; import java.awt.event.WindowAdapter; import java.awt.event.WindowEvent; public class TestPractice { public static void main(String[] args) { Frame frame = new Frame(\"practice\"); frame.setVisible(true); frame.setSize(400, 400); frame.addWindowListener(new WindowAdapter() { //\u7a97\u53e3\u5173\u95ed\u65f6\u505a\u7684\u4e8b\u60c5 @Override public void windowClosing(WindowEvent e) { System.exit(0); } }); // Frame\u91c7\u7528\u8868\u683c\u5e03\u5c40 frame.setLayout(new GridLayout(2, 1)); // \u56db\u4e2a\u9762\u677f Panel panel1 = new Panel(new BorderLayout()); Panel panel2 = new Panel(new GridLayout(2, 1)); Panel panel3 = new Panel(new BorderLayout()); Panel panel4 = new Panel(new GridLayout(2, 2)); //\u6dfb\u52a0\u6309\u94ae,\u4e0a\u534a\u90e8\u5206 panel1.add(new Button(\"East-1\"), BorderLayout.EAST); panel1.add(new Button(\"West-1\"), BorderLayout.WEST); panel2.add(new Button(\"p2-btn-1\")); panel2.add(new Button(\"p2-btn-2\")); panel1.add(panel2, BorderLayout.CENTER); //\u6dfb\u52a0\u6309\u94ae,\u4e0b\u534a\u90e8\u5206 panel3.add(new Button(\"East-2\"), BorderLayout.EAST); panel3.add(new Button(\"West-2\"), BorderLayout.WEST); //\u4e2d\u95f4\u56db\u4e2a,\u5faa\u73af\u5b9e\u73b0 for (int i = 0; i < 4; i++) { panel4.add(new Button(\"for-\" + i)); } panel3.add(panel4, BorderLayout.CENTER); //Frame\u6dfb\u52a0Panel frame.add(panel1); frame.add(panel3); } } 4.\u4e8b\u4ef6\u76d1\u542cButton addActionListener \u4ee5\u6309\u94ae\u4e3e\u4f8b \u9996\u5148\u5b9e\u73b0 ActionListener class MyActionListener implements ActionListener { @Override public void actionPerformed(ActionEvent e) { System.out.println(\"aaa\"); } } \u5728\u4e3b\u51fd\u6570\u4e2d\u5b9e\u4f8b\u5316 MyActionListener \u7c7b\u7684\u5bf9\u8c61\uff0c\u5e76\u4e14\u4f20\u5165\u7ed9 button.addActionListener(myActionListener); MyActionListener myActionListener = new MyActionListener(); button.addActionListener(myActionListener); \u5168\u90e8\u4ee3\u7801\uff1a package part2; import java.awt.*; import java.awt.event.ActionEvent; import java.awt.event.ActionListener; import java.awt.event.WindowAdapter; import java.awt.event.WindowEvent; public class TestActionEvent { public static void main(String[] args) { Frame frame = new Frame(); frame.setSize(500, 500); frame.setVisible(true); windowClose(frame); Button button = new Button(\"\u70b9\u6211\"); // \u5b9e\u4f8b\u5316\u4e8b\u4ef6\u76d1\u542c\u7c7b\u7684\u5bf9\u8c61\uff0c\u4f20\u5165 MyActionListener myActionListener = new MyActionListener(); button.addActionListener(myActionListener); frame.add(button, BorderLayout.CENTER); } // \u7b80\u5316\u4e00\u4e9b\uff0c\u5c01\u88c5\u4e2a\u79c1\u6709\u6210\u5458\uff0c\u7528\u4e8e\u65b9\u4fbf\u7684\u5173\u95ed\u7a97\u53e3 private static void windowClose(Frame frame){ frame.addWindowListener(new WindowAdapter() { @Override public void windowClosing(WindowEvent e) { System.exit(0); } }); } } // \u4e8b\u4ef6\u76d1\u542c class MyActionListener implements ActionListener { @Override public void actionPerformed(ActionEvent e) { System.out.println(\"aaa\"); } } \u62d3\u5c55\uff1a\u5c01\u88c5\u4e00\u4e2a\u79c1\u6709\u6210\u5458\u6765\u65b9\u4fbf\u7684\u5173\u95ed\u7a97\u53e3 \u79c1\u6709\u6210\u5458: private static void windowClose(Frame frame){ frame.addWindowListener(new WindowAdapter() { @Override public void windowClosing(WindowEvent e) { System.exit(0); } }); } main windowClose(frame); 5.\u4e8b\u4ef6\u76d1\u542cTextField MyActionListener2 myActionListener2 = new MyActionListener2(); textField.addActionListener(myActionListener2); package part2; import java.awt.*; import java.awt.event.ActionEvent; import java.awt.event.ActionListener; import java.awt.event.WindowAdapter; import java.awt.event.WindowEvent; public class TestText01 { public static void main(String[] args) { new MyFrame(); } } // \u5199\u4e00\u4e2aMyframe\u7c7b\u76f4\u63a5\u7ee7\u627fFrame\u7c7b\uff0c\u62e5\u6709Frame\u7c7b\u4e2d\u7684\u6240\u6709\u529f\u80fd class MyFrame extends Frame { public MyFrame() { TextField textField = new TextField(); setSize(400, 400); setVisible(true); add(textField); // \u76d1\u542c\u8fd9\u4e2a\u6587\u672c\u6846\u8f93\u5165\u7684\u6587\u5b57 MyActionListener2 myActionListener2 = new MyActionListener2(); textField.addActionListener(myActionListener2); } } class MyActionListener2 implements ActionListener { @Override public void actionPerformed(ActionEvent e) { // \u83b7\u5f97\u4e00\u4e9b\u8d44\u6e90-->\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61 TextField field = (TextField) e.getSource(); field.getText(); //\u83b7\u5f97\u8f93\u5165\u6846\u4e2d\u7684\u6587\u672c System.out.println(field.getText()); } }","title":"11.Java GUI"},{"location":"Dev_documents/javaGUI/javaGUI/#11java-gui","text":"","title":"11.Java GUI"},{"location":"Dev_documents/javaGUI/javaGUI/#awt","text":"","title":"AWT"},{"location":"Dev_documents/javaGUI/javaGUI/#1","text":"Frame \u5f39\u51fa\u4e00\u4e2a\u7a97\u53e3\u3002 package uichuan; import java.awt.*; import java.awt.event.WindowAdapter; import java.awt.event.WindowEvent; public class TestFrame { public static void main(String[] args) { Frame frame = new Frame(\"First_windows\"); //\u770b\u5f97\u89c1 frame.setVisible(true); //\u5c3a\u5bf8 frame.setSize(400,400); //\u80cc\u666f\u8272 frame.setBackground(Color.BLACK); //\u5f39\u51fa\u521d\u59cb\u4f4d\u7f6e frame.setLocation(200,200); //\u8bbe\u7f6e\u5927\u5c0f\u56fa\u5b9a frame.setResizable(false); // \u7b80\u542c\u7a97\u53e3\u5173\u95ed\u4e8b\u4ef6 frame.addWindowListener(new WindowAdapter() { //\u7a97\u53e3\u5173\u95ed\u65f6\u505a\u7684\u4e8b\u60c5 @Override public void windowClosing(WindowEvent e) { System.exit(0); } }); } } \u5f39\u51fa\u591a\u4e2a\u7a97\u53e3\uff08\u5c01\u88c5\uff09 package uichuan; import java.awt.*; public class TestFrame_2 { public static void main(String[] args) { //\u5c55\u793a\u591a\u4e2a\u7a97\u53e3 MyFrame myFrame1 = new MyFrame(100,100,200,200); MyFrame myFrame2 = new MyFrame(300,100,200,200); MyFrame myFrame3 = new MyFrame(100,300,200,200); MyFrame myFrame4 = new MyFrame(300,300,200,200); } } class MyFrame extends Frame{ // \u591a\u4e2a\u7a97\u53e3\uff0c\u8ba1\u6570\u5668 static int id = 0; public MyFrame(int x,int y,int w,int h){ super(\"MyFrame\"+(++id)); setVisible(true); setBounds(x,y,w,h); setBackground(Color.BLACK); } } \u5173\u95ed\u7a97\u53e3\uff08\u70b9\u51fb\u5173\u95ed\u6309\u94ae->\u7a0b\u5e8f\u7ed3\u675f\uff09 \u9002\u7528\u4e8eAWT \u91cd\u5199\u4e86windowClosing\u65b9\u6cd5 // \u7b80\u542c\u7a97\u53e3\u5173\u95ed\u4e8b\u4ef6 frame.addWindowListener(new WindowAdapter() { //\u7a97\u53e3\u5173\u95ed\u65f6\u505a\u7684\u4e8b\u60c5 @Override public void windowClosing(WindowEvent e) { System.exit(0); } });","title":"1.\u7ec4\u4ef6\u548c\u5bb9\u5668"},{"location":"Dev_documents/javaGUI/javaGUI/#2panel","text":"Panel\u9762\u677f\u9700\u8981frame\u4e2d \u4f7f\u7528 frame.add(panel); \u5c06\u9762\u677f\u6dfb\u52a0\u5230frame\u4e2d\u53bb \u540c\u6837\u7684\uff0cpanel\u4e5f\u80fd\u8bbe\u7f6e\u76f8\u5e94\u7684\u53c2\u6570 \u5750\u6807 \u80cc\u666f\u989c\u8272 \u5c3a\u5bf8 ...... package uichuan; import java.awt.*; import java.awt.event.WindowAdapter; import java.awt.event.WindowEvent; import java.awt.event.WindowListener; //panel\u770b\u4f5c\u4e00\u4e2a\u7a7a\u95f4\uff0c\u4e0d\u80fd\u5355\u72ec\u5b58\u5728 public class TestPanel { public static void main(String[] args) { Frame frame = new Frame(\"xx\"); frame.setVisible(true); // \u5e03\u5c40 Panel panel = new Panel(); // \u8bbe\u7f6e\u5e03\u5c40 frame.setLayout(null); frame.setSize(400,400); //\u5750\u6807 frame.setBounds(300,300,500,500); frame.setBackground(Color.BLACK); //panel\u8bbe\u7f6e\u5750\u6807\uff0cpanel\u76f8\u5bf9\u4e0eframe panel.setBounds(50,50,400,400); panel.setBackground(Color.WHITE); frame.add(panel); // \u7b80\u542c\u7a97\u53e3\u5173\u95ed\u4e8b\u4ef6 frame.addWindowListener(new WindowAdapter() { //\u7a97\u53e3\u5173\u95ed\u65f6\u505a\u7684\u4e8b\u60c5 @Override public void windowClosing(WindowEvent e) { System.exit(0); } }); } }","title":"2.\u9762\u677fPanel"},{"location":"Dev_documents/javaGUI/javaGUI/#3","text":"","title":"3.\u5e03\u5c40"},{"location":"Dev_documents/javaGUI/javaGUI/#-","text":"frame.setLayout(new FlowLayout()); \u7528\u4e8e\u8bbe\u7f6e\u6d41\u5f0f\u5e03\u5c40\u7684\u662f FlowLayout() \u5bf9\u8c61\uff0c\u5176\u4e2d\u7684\u53c2\u6570\u7528\u6765\u8bbe\u7f6e\u6d41\u5f0f\u5e03\u5c40\u7684\u7ec6\u8282 frame.setLayout(new FlowLayout(FlowLayout.LEFT)); frame.setLayout(new FlowLayout(FlowLayout.RIGHT)); package uichuan; import java.awt.*; import java.awt.event.WindowAdapter; import java.awt.event.WindowEvent; public class TestFlowLayout { public static void main(String[] args) { Frame frame = new Frame(); frame.setSize(500, 500); frame.setVisible(true); frame.addWindowListener(new WindowAdapter() { //\u7a97\u53e3\u5173\u95ed\u65f6\u505a\u7684\u4e8b\u60c5 @Override public void windowClosing(WindowEvent e) { System.exit(0); } }); //\u6309\u94ae\u7ec4\u4ef6 Button button1 = new Button(\"\u70b9\u6211\"); Button button2 = new Button(\"\u70b9\u6211\"); Button button3 = new Button(\"\u70b9\u6211\"); frame.add(button1); frame.add(button2); frame.add(button3); // \u8bbe\u7f6e\u4e3a\u6d41\u5f0f\u5e03\u5c40 frame.setLayout(new FlowLayout()); // frame.setLayout(new FlowLayout(FlowLayout.LEFT)); // frame.setLayout(new FlowLayout(FlowLayout.RIGHT)); } }","title":"- \u6d41\u5f0f\u5e03\u5c40"},{"location":"Dev_documents/javaGUI/javaGUI/#-_1","text":"frame.add(button1,BorderLayout.EAST); add()\u4e2d\u4f20\u5165\u4e00\u4e2a Component \u5bf9\u8c61\uff0c\u4e5f\u53ef\u4ee5\u4f20\u5165\u5e03\u5c40 BorderLayout.EAST \u6e90\u7801 public void add(Component comp, Object constraints) { addImpl(comp, constraints, -1); } \u5b9e\u73b0\u4e1c\u897f\u5357\u5317\u4e2d\u5e03\u5c40 package uichuan; import java.awt.*; import java.awt.event.WindowAdapter; import java.awt.event.WindowEvent; public class TestBoderLayout { public static void main(String[] args) { Frame frame = new Frame(\"TestBoderLayout\"); frame.setVisible(true); frame.setSize(400,400); frame.addWindowListener(new WindowAdapter() { //\u7a97\u53e3\u5173\u95ed\u65f6\u505a\u7684\u4e8b\u60c5 @Override public void windowClosing(WindowEvent e) { System.exit(0); } }); Button button1 = new Button(\"East\"); Button button2 = new Button(\"West\"); Button button3 = new Button(\"South\"); Button button4 = new Button(\"North\"); Button button5 = new Button(\"center\"); frame.add(button1,BorderLayout.EAST); frame.add(button2,BorderLayout.WEST); frame.add(button3,BorderLayout.SOUTH); frame.add(button4,BorderLayout.NORTH); frame.add(button5,BorderLayout.CENTER); } }","title":"- \u4e1c\u897f\u5357\u5317\u4e2d"},{"location":"Dev_documents/javaGUI/javaGUI/#-_2","text":"frame.setLayout(new GridLayout(3,2)); \u4f20\u5165 GridLayout \u5bf9\u8c61 package uichuan; import java.awt.*; import java.awt.event.WindowAdapter; import java.awt.event.WindowEvent; public class TestGridLayout { public static void main(String[] args) { Frame frame = new Frame(\"TestGridLayout\"); frame.setVisible(true); frame.setSize(400, 400); frame.addWindowListener(new WindowAdapter() { //\u7a97\u53e3\u5173\u95ed\u65f6\u505a\u7684\u4e8b\u60c5 @Override public void windowClosing(WindowEvent e) { System.exit(0); } }); Button button1 = new Button(\"\u70b9\u6211\"); Button button2 = new Button(\"\u70b9\u6211\"); Button button3 = new Button(\"\u70b9\u6211\"); Button button4 = new Button(\"\u70b9\u6211\"); Button button5 = new Button(\"\u70b9\u6211\"); Button button6 = new Button(\"\u70b9\u6211\"); frame.setLayout(new GridLayout(3,2)); frame.add(button1); frame.add(button2); frame.add(button3); frame.add(button4); frame.add(button5); frame.add(button6); } }","title":"- \u8868\u683c\u5e03\u5c40"},{"location":"Dev_documents/javaGUI/javaGUI/#-_3","text":"\u5b9e\u73b0\u5982\u4e0b\u5e03\u5c40\uff1a \u601d\u8def\uff1a - frame - \u4e0a\u534a\u90e8\u5206 - Grid\u4e1c\u897f + Center\u5e03\u5c40 - \u4e1c\uff0c\u897fbutton - Center\u4e2d\u5d4c\u5957\u8868\u683c\u5e03\u5c40Grid - Grid\u5206\u6210\u4e24\u884c\u4e00\u5217\u7684\u4e0a\u4e0b\u5e03\u5c40 - Button1 - Button2 - \u4e0b\u534a\u90e8\u5206\u4e0e\u4e0a\u534a\u90e8\u5206\u76f8\u540c - Center\u90e8\u5206\u7565\u5fae\u4e0d\u540c Center\u653e\u7f6e\u4e86\u4e00\u4e2a2*2\u7684\u8868\u683c\u5e03\u5c40 - \u5728\u8868\u683cGrid\u4e2d\u586b\u5145button\u5373\u53ef \u6838\u5fc3\u5e03\u5c40\u4ee3\u7801\uff1a // Frame\u91c7\u7528\u8868\u683c\u5e03\u5c40 frame.setLayout(new GridLayout(2, 1)); // \u56db\u4e2a\u9762\u677f Panel panel1 = new Panel(new BorderLayout()); Panel panel2 = new Panel(new GridLayout(2, 1)); Panel panel3 = new Panel(new BorderLayout()); Panel panel4 = new Panel(new GridLayout(2, 2)); //\u6dfb\u52a0\u6309\u94ae,\u4e0a\u534a\u90e8\u5206 panel1.add(new Button(\"East-1\"), BorderLayout.EAST); panel1.add(new Button(\"West-1\"), BorderLayout.WEST); panel2.add(new Button(\"p2-btn-1\")); panel2.add(new Button(\"p2-btn-2\")); panel1.add(panel2, BorderLayout.CENTER); //\u6dfb\u52a0\u6309\u94ae,\u4e0b\u534a\u90e8\u5206 panel3.add(new Button(\"East-2\"), BorderLayout.EAST); panel3.add(new Button(\"West-2\"), BorderLayout.WEST); //\u4e2d\u95f4\u56db\u4e2a,\u5faa\u73af\u5b9e\u73b0 for (int i = 0; i < 4; i++) { panel4.add(new Button(\"for-\" + i)); } panel3.add(panel4, BorderLayout.CENTER); //Frame\u6dfb\u52a0Panel frame.add(panel1); frame.add(panel3); \u6240\u6709\u4ee3\u7801\uff1a package uichuan; import javafx.scene.layout.Pane; import java.awt.*; import java.awt.event.WindowAdapter; import java.awt.event.WindowEvent; public class TestPractice { public static void main(String[] args) { Frame frame = new Frame(\"practice\"); frame.setVisible(true); frame.setSize(400, 400); frame.addWindowListener(new WindowAdapter() { //\u7a97\u53e3\u5173\u95ed\u65f6\u505a\u7684\u4e8b\u60c5 @Override public void windowClosing(WindowEvent e) { System.exit(0); } }); // Frame\u91c7\u7528\u8868\u683c\u5e03\u5c40 frame.setLayout(new GridLayout(2, 1)); // \u56db\u4e2a\u9762\u677f Panel panel1 = new Panel(new BorderLayout()); Panel panel2 = new Panel(new GridLayout(2, 1)); Panel panel3 = new Panel(new BorderLayout()); Panel panel4 = new Panel(new GridLayout(2, 2)); //\u6dfb\u52a0\u6309\u94ae,\u4e0a\u534a\u90e8\u5206 panel1.add(new Button(\"East-1\"), BorderLayout.EAST); panel1.add(new Button(\"West-1\"), BorderLayout.WEST); panel2.add(new Button(\"p2-btn-1\")); panel2.add(new Button(\"p2-btn-2\")); panel1.add(panel2, BorderLayout.CENTER); //\u6dfb\u52a0\u6309\u94ae,\u4e0b\u534a\u90e8\u5206 panel3.add(new Button(\"East-2\"), BorderLayout.EAST); panel3.add(new Button(\"West-2\"), BorderLayout.WEST); //\u4e2d\u95f4\u56db\u4e2a,\u5faa\u73af\u5b9e\u73b0 for (int i = 0; i < 4; i++) { panel4.add(new Button(\"for-\" + i)); } panel3.add(panel4, BorderLayout.CENTER); //Frame\u6dfb\u52a0Panel frame.add(panel1); frame.add(panel3); } }","title":"- \u7ec3\u4e60"},{"location":"Dev_documents/javaGUI/javaGUI/#4button","text":"addActionListener \u4ee5\u6309\u94ae\u4e3e\u4f8b \u9996\u5148\u5b9e\u73b0 ActionListener class MyActionListener implements ActionListener { @Override public void actionPerformed(ActionEvent e) { System.out.println(\"aaa\"); } } \u5728\u4e3b\u51fd\u6570\u4e2d\u5b9e\u4f8b\u5316 MyActionListener \u7c7b\u7684\u5bf9\u8c61\uff0c\u5e76\u4e14\u4f20\u5165\u7ed9 button.addActionListener(myActionListener); MyActionListener myActionListener = new MyActionListener(); button.addActionListener(myActionListener); \u5168\u90e8\u4ee3\u7801\uff1a package part2; import java.awt.*; import java.awt.event.ActionEvent; import java.awt.event.ActionListener; import java.awt.event.WindowAdapter; import java.awt.event.WindowEvent; public class TestActionEvent { public static void main(String[] args) { Frame frame = new Frame(); frame.setSize(500, 500); frame.setVisible(true); windowClose(frame); Button button = new Button(\"\u70b9\u6211\"); // \u5b9e\u4f8b\u5316\u4e8b\u4ef6\u76d1\u542c\u7c7b\u7684\u5bf9\u8c61\uff0c\u4f20\u5165 MyActionListener myActionListener = new MyActionListener(); button.addActionListener(myActionListener); frame.add(button, BorderLayout.CENTER); } // \u7b80\u5316\u4e00\u4e9b\uff0c\u5c01\u88c5\u4e2a\u79c1\u6709\u6210\u5458\uff0c\u7528\u4e8e\u65b9\u4fbf\u7684\u5173\u95ed\u7a97\u53e3 private static void windowClose(Frame frame){ frame.addWindowListener(new WindowAdapter() { @Override public void windowClosing(WindowEvent e) { System.exit(0); } }); } } // \u4e8b\u4ef6\u76d1\u542c class MyActionListener implements ActionListener { @Override public void actionPerformed(ActionEvent e) { System.out.println(\"aaa\"); } } \u62d3\u5c55\uff1a\u5c01\u88c5\u4e00\u4e2a\u79c1\u6709\u6210\u5458\u6765\u65b9\u4fbf\u7684\u5173\u95ed\u7a97\u53e3 \u79c1\u6709\u6210\u5458: private static void windowClose(Frame frame){ frame.addWindowListener(new WindowAdapter() { @Override public void windowClosing(WindowEvent e) { System.exit(0); } }); } main windowClose(frame);","title":"4.\u4e8b\u4ef6\u76d1\u542cButton"},{"location":"Dev_documents/javaGUI/javaGUI/#5textfield","text":"MyActionListener2 myActionListener2 = new MyActionListener2(); textField.addActionListener(myActionListener2); package part2; import java.awt.*; import java.awt.event.ActionEvent; import java.awt.event.ActionListener; import java.awt.event.WindowAdapter; import java.awt.event.WindowEvent; public class TestText01 { public static void main(String[] args) { new MyFrame(); } } // \u5199\u4e00\u4e2aMyframe\u7c7b\u76f4\u63a5\u7ee7\u627fFrame\u7c7b\uff0c\u62e5\u6709Frame\u7c7b\u4e2d\u7684\u6240\u6709\u529f\u80fd class MyFrame extends Frame { public MyFrame() { TextField textField = new TextField(); setSize(400, 400); setVisible(true); add(textField); // \u76d1\u542c\u8fd9\u4e2a\u6587\u672c\u6846\u8f93\u5165\u7684\u6587\u5b57 MyActionListener2 myActionListener2 = new MyActionListener2(); textField.addActionListener(myActionListener2); } } class MyActionListener2 implements ActionListener { @Override public void actionPerformed(ActionEvent e) { // \u83b7\u5f97\u4e00\u4e9b\u8d44\u6e90-->\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61 TextField field = (TextField) e.getSource(); field.getText(); //\u83b7\u5f97\u8f93\u5165\u6846\u4e2d\u7684\u6587\u672c System.out.println(field.getText()); } }","title":"5.\u4e8b\u4ef6\u76d1\u542cTextField"},{"location":"Dev_documents/javaGUIhomework/javaGUIhomework/","text":"12.Java GUI\u4f5c\u4e1a - Frame\u7a97\u53e3 ---> BoderLayout --> center \u653e\u7f6e\u4e00\u4e2a\u9762\u677fPanel Container - \u9762\u677fContainer - \u653e\u5165\u6807\u9898 - \u653e\u5165\u56db\u4e2a\u6309\u94ae - \u521b\u5efa\u6240\u6709\u7684\u663e\u793a\u754c\u9762Frame - \u4e3b\u754c\u9762 setVisible true - \u8be6\u60c5\u7684\u8ba1\u7b97\u754c\u9762 setVisible true - \u70b9\u51fb\u6309\u94ae\u6253\u5f00\u8be6\u60c5\u754c\u9762\u65f6\uff1a \u4e3b\u754c\u9762setVisible -> false \u8be6\u60c5\u754c\u9762setVisible -> true - \u5173\u95ed\u4e3b\u754c\u9762\u65f6 -> System.exit(0) \u601d\u8def\uff1a \u4e3b\u754c\u9762Caculator\u7ee7\u627fFrame - loadFrame\u52a0\u8f7d\u4e3b\u754c\u9762 - \u4e3b\u754c\u9762\u4e2d\u76d1\u542c\u56db\u4e2a\u6309\u94ae - start\u4ee5\u53caclose\u5206\u522b\u521d\u59cb\u5316\u4ee5\u53ca\u76d1\u542c\u4e3b\u754c\u9762\u5173\u95ed->\u7ed3\u675f\u7a0b\u5e8f \u56db\u4e2a\u76d1\u542c\u63a5\u53e3 class MyActionListener1 implements ActionListener{...} ... class MyActionListener4 implements ActionListener{...} \u6bcf\u4e00\u4e2a\u76d1\u542c\u63a5\u53e3\u6839\u636e\u53c2\u6570\uff08\u6a21\u5f0f\uff09\u7684\u4e0d\u540c\uff0c\u8c03\u7528\u5b50\u754c\u9762\u5bf9\u8c61\u662f\u521d\u59cb\u5316\u65f6(\u8c03\u7528\u6784\u9020\u5668)\u4f20\u5165\u7684\u53c2\u6570\u4e5f\u4e0d\u540c class MyActionListener2 implements ActionListener { @Override public void actionPerformed(ActionEvent e) { MySonFrame mySonFrame = new MySonFrame(2); mySonFrame.loadSonFrame(); } } \u5b50\u754c\u9762\u7c7b\u7684\u5b9e\u73b0 class MySonFrame extends Frame{ private void start(){...} private int type; // \u6784\u9020\u65b9\u6cd5 public MySonFrame(int type) { this.type = type; start(); addWindowListener(new SonActionListener()); if (type == 1) { process_1(); } else if (type == 2) { process_2(); }else if (type == 3){ process_3(); } else if (type == 4) { process_4(); } } // process_n\u662fMySonFrame\u4e2d\u7684\u6210\u5458,\u5b9e\u73b0\u4e86\u5b50\u9875\u9762\u7684\u529f\u80fd public void process_1(){ ... } public void process_2(){...} public void process_3(){...} public void process_4(){...} } MySonFrame\u4e2d\u7684process_n\u65b9\u6cd5 // \u521b\u5efa\u6570\u5b66\u8ba1\u7b97\u5bf9\u8c61 Process math_master = new Process(); public void process_1() { // \u65b0\u5efa\u4e00\u4e2a\u5bb9\u5668 Panel BtnContainer1 = new Panel(); BtnContainer1.setBounds(50, 140, 400, 50); BtnContainer1.setBackground(Color.WHITE); add(BtnContainer1); // \u65b0\u5efa\u4e09\u4e2a\u8f93\u5165\u6846 TextField num1 = new TextField(3); TextField num2 = new TextField(3); TextField num3 = new TextField(8); Button resbutton1 = new Button(\"->\"); Label label = new Label(\"\u6700\u5927\u516c\u7ea6\u6570\"); //\u5e03\u5c40 BtnContainer1.setLayout(new FlowLayout()); BtnContainer1.add(num1); BtnContainer1.add(num2); BtnContainer1.add(label); BtnContainer1.add(resbutton1); BtnContainer1.add(num3); // ->\u6309\u94ae\u6dfb\u52a0\u4e8b\u4ef6 ProcessLinstener1 processLinstener1 = new ProcessLinstener1(num1, num2, num3); resbutton1.addActionListener(processLinstener1); } \u6570\u5b66\u5bf9\u8c61 class Process { public int CaculateModel1(int number1, int number2) { while (number2 != 0) { int temp = number1 % number2; number1 = number2; number2 = temp; } return number1; } public int CaculateModel2(int m, int n){...} public int CaculateModel3(int m, int n){...} public int CaculateModel4(int m, int n){...} } \u5168\u90e8\u4ee3\u7801 Github\ud83c\udf88","title":"12.Java GUI\u4f5c\u4e1a"},{"location":"Dev_documents/javaGUIhomework/javaGUIhomework/#12java-gui","text":"- Frame\u7a97\u53e3 ---> BoderLayout --> center \u653e\u7f6e\u4e00\u4e2a\u9762\u677fPanel Container - \u9762\u677fContainer - \u653e\u5165\u6807\u9898 - \u653e\u5165\u56db\u4e2a\u6309\u94ae - \u521b\u5efa\u6240\u6709\u7684\u663e\u793a\u754c\u9762Frame - \u4e3b\u754c\u9762 setVisible true - \u8be6\u60c5\u7684\u8ba1\u7b97\u754c\u9762 setVisible true - \u70b9\u51fb\u6309\u94ae\u6253\u5f00\u8be6\u60c5\u754c\u9762\u65f6\uff1a \u4e3b\u754c\u9762setVisible -> false \u8be6\u60c5\u754c\u9762setVisible -> true - \u5173\u95ed\u4e3b\u754c\u9762\u65f6 -> System.exit(0) \u601d\u8def\uff1a \u4e3b\u754c\u9762Caculator\u7ee7\u627fFrame - loadFrame\u52a0\u8f7d\u4e3b\u754c\u9762 - \u4e3b\u754c\u9762\u4e2d\u76d1\u542c\u56db\u4e2a\u6309\u94ae - start\u4ee5\u53caclose\u5206\u522b\u521d\u59cb\u5316\u4ee5\u53ca\u76d1\u542c\u4e3b\u754c\u9762\u5173\u95ed->\u7ed3\u675f\u7a0b\u5e8f \u56db\u4e2a\u76d1\u542c\u63a5\u53e3 class MyActionListener1 implements ActionListener{...} ... class MyActionListener4 implements ActionListener{...} \u6bcf\u4e00\u4e2a\u76d1\u542c\u63a5\u53e3\u6839\u636e\u53c2\u6570\uff08\u6a21\u5f0f\uff09\u7684\u4e0d\u540c\uff0c\u8c03\u7528\u5b50\u754c\u9762\u5bf9\u8c61\u662f\u521d\u59cb\u5316\u65f6(\u8c03\u7528\u6784\u9020\u5668)\u4f20\u5165\u7684\u53c2\u6570\u4e5f\u4e0d\u540c class MyActionListener2 implements ActionListener { @Override public void actionPerformed(ActionEvent e) { MySonFrame mySonFrame = new MySonFrame(2); mySonFrame.loadSonFrame(); } } \u5b50\u754c\u9762\u7c7b\u7684\u5b9e\u73b0 class MySonFrame extends Frame{ private void start(){...} private int type; // \u6784\u9020\u65b9\u6cd5 public MySonFrame(int type) { this.type = type; start(); addWindowListener(new SonActionListener()); if (type == 1) { process_1(); } else if (type == 2) { process_2(); }else if (type == 3){ process_3(); } else if (type == 4) { process_4(); } } // process_n\u662fMySonFrame\u4e2d\u7684\u6210\u5458,\u5b9e\u73b0\u4e86\u5b50\u9875\u9762\u7684\u529f\u80fd public void process_1(){ ... } public void process_2(){...} public void process_3(){...} public void process_4(){...} } MySonFrame\u4e2d\u7684process_n\u65b9\u6cd5 // \u521b\u5efa\u6570\u5b66\u8ba1\u7b97\u5bf9\u8c61 Process math_master = new Process(); public void process_1() { // \u65b0\u5efa\u4e00\u4e2a\u5bb9\u5668 Panel BtnContainer1 = new Panel(); BtnContainer1.setBounds(50, 140, 400, 50); BtnContainer1.setBackground(Color.WHITE); add(BtnContainer1); // \u65b0\u5efa\u4e09\u4e2a\u8f93\u5165\u6846 TextField num1 = new TextField(3); TextField num2 = new TextField(3); TextField num3 = new TextField(8); Button resbutton1 = new Button(\"->\"); Label label = new Label(\"\u6700\u5927\u516c\u7ea6\u6570\"); //\u5e03\u5c40 BtnContainer1.setLayout(new FlowLayout()); BtnContainer1.add(num1); BtnContainer1.add(num2); BtnContainer1.add(label); BtnContainer1.add(resbutton1); BtnContainer1.add(num3); // ->\u6309\u94ae\u6dfb\u52a0\u4e8b\u4ef6 ProcessLinstener1 processLinstener1 = new ProcessLinstener1(num1, num2, num3); resbutton1.addActionListener(processLinstener1); } \u6570\u5b66\u5bf9\u8c61 class Process { public int CaculateModel1(int number1, int number2) { while (number2 != 0) { int temp = number1 % number2; number1 = number2; number2 = temp; } return number1; } public int CaculateModel2(int m, int n){...} public int CaculateModel3(int m, int n){...} public int CaculateModel4(int m, int n){...} } \u5168\u90e8\u4ee3\u7801 Github\ud83c\udf88","title":"12.Java GUI\u4f5c\u4e1a"},{"location":"Dev_documents/oppProgramming/opp/","text":"9.\u6709\u8da3\u7684\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1 \u4e09\u5927\u7279\u6027 \u5c01\u88c5 \u7ee7\u627f \u591a\u6001 1.\u5bf9\u8c61\u548cself \u5728\u6bcf\u4e2a\u7c7b\u4e2d\u90fd\u53ef\u4ee5\u5b9a\u4e49\u4e2a\u7279\u6b8a\u7684\uff1a __init__ \u521d\u59cb\u5316\u65b9\u6cd5 \uff0c\u5728\u5b9e\u4f8b\u5316\u7c7b\u521b\u5efa\u5bf9\u8c61\u65f6\u81ea\u52a8\u6267\u884c\uff0c\u5373\uff1a \u5bf9\u8c61=\u7c7b() \u3002 class Message: def __init__(self, content): self.data = content def send_email(self, email): data = \"\u7ed9{}\u53d1\u90ae\u4ef6\uff0c\u5185\u5bb9\u662f\uff1a{}\".format(email, self.data) print(data) def send_wechat(self, vid): data = \"\u7ed9{}\u53d1\u5fae\u4fe1\uff0c\u5185\u5bb9\u662f\uff1a{}\".format(vid, self.data) print(data) # \u5bf9\u8c61 = \u7c7b\u540d() # \u81ea\u52a8\u6267\u884c\u7c7b\u4e2d\u7684 __init__ \u65b9\u6cd5\u3002 # 1. \u6839\u636e\u7c7b\u578b\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5185\u5b58\u7684\u4e00\u5757 \u533a\u57df \u3002 # 2. \u6267\u884c__init__\u65b9\u6cd5\uff0c\u6a21\u5757\u4f1a\u5c06\u521b\u5efa\u7684\u90a3\u5757\u533a\u57df\u7684\u5185\u5b58\u5730\u5740\u5f53self\u53c2\u6570\u4f20\u9012\u8fdb\u53bb\u3002 \u5f80\u533a\u57df\u4e2d(data=\"\u6ce8\u518c\u6210\u529f\") msg_object = Message(\"\u6ce8\u518c\u6210\u529f\") msg_object.send_email(\"uichuan_47@163.com\") # \u7ed9uichuan_47@163.com\u53d1\u90ae\u4ef6\uff0c\u5185\u5bb9\u662f\uff1a\u6ce8\u518c\u6210\u529f msg_object.send_wechat(\"uichuan\") # \u7ed9uichuan\u53d1\u5fae\u4fe1\uff0c\u5185\u5bb9\u662f\uff1a\u6ce8\u518c\u6210\u529f \u9762\u5411\u5bf9\u8c61\u7684\u601d\u60f3\uff1a\u5c06\u4e00\u4e9b\u6570\u636e\u5c01\u88c5\u5230\u5bf9\u8c61\u4e2d\uff0c\u5728\u6267\u884c\u65b9\u6cd5\u65f6\uff0c\u518d\u53bb\u5bf9\u8c61\u4e2d\u83b7\u53d6\u3002 \u51fd\u6570\u5f0f\u7684\u601d\u60f3\uff1a\u51fd\u6570\u5185\u90e8\u9700\u8981\u7684\u6570\u636e\u5747\u901a\u8fc7\u53c2\u6570\u7684\u5f62\u5f0f\u4f20\u9012\u3002 self\uff0c\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u4e2a\u53c2\u6570\u3002\u8fd9\u4e2a\u53c2\u6570\u662fPython\u5185\u90e8\u4f1a\u63d0\u4f9b\uff0c\u5176\u5b9e\u672c\u8d28\u4e0a\u5c31\u662f\u8c03\u7528\u5f53\u524d\u65b9\u6cd5\u7684\u90a3\u4e2a\u5bf9\u8c61\u3002 \u5bf9\u8c61\uff0c\u57fa\u4e8e\u7c7b\u5b9e\u4f8b\u5316\u51fa\u6765\u201d\u4e00\u5757\u5185\u5b58\u201c\uff0c\u9ed8\u8ba4\u91cc\u9762\u6ca1\u6709\u6570\u636e\uff1b\u7ecf\u8fc7\u7c7b\u7684 __init__ \u65b9\u6cd5\uff0c\u53ef\u4ee5\u5728\u5185\u5b58\u4e2d\u521d\u59cb\u5316\u4e00\u4e9b\u6570\u636e\u3002 2.\u5e38\u89c1\u6210\u5458 \u5728\u7f16\u5199\u9762\u5411\u5bf9\u8c61\u76f8\u5173\u4ee3\u7801\u65f6\uff0c\u6700\u5e38\u89c1\u6210\u5458\u6709\uff1a \u5b9e\u4f8b\u53d8\u91cf\uff0c\u5c5e\u4e8e\u5bf9\u8c61\uff0c\u53ea\u80fd\u901a\u8fc7\u5bf9\u8c61\u8c03\u7528\u3002 \u7ed1\u5b9a\u65b9\u6cd5\uff0c\u5c5e\u4e8e\u7c7b\uff0c\u901a\u8fc7\u5bf9\u8c61\u8c03\u7528 \u6216 \u901a\u8fc7\u7c7b\u8c03\u7528\u3002 class Person: def __init__(self, n1, n2): # \u5b9e\u4f8b\u53d8\u91cf self.name = n1 self.age = n2 # \u7ed1\u5b9a\u65b9\u6cd5 def show(self): msg = \"\u6211\u53eb{}\uff0c\u4eca\u5e74{}\u5c81\u3002\".format(self.name, self.age) print(msg) def all_message(self): msg = \"\u6211\u662f{}\u4eba\uff0c\u6211\u53eb{}\uff0c\u4eca\u5e74{}\u5c81\u3002\".format(Person.country, self.name, self.age) print(msg) def total_message(self): msg = \"\u6211\u662f{}\u4eba\uff0c\u6211\u53eb{}\uff0c\u4eca\u5e74{}\u5c81\u3002\".format(self.country, self.name, self.age) print(msg) 3.\u4e09\u4e2a\u7279\u6027 3.1 \u5c01\u88c5 \u5c01\u88c5\u4e3b\u8981\u4f53\u73b0\u5728\u4e24\u4e2a\u65b9\u9762\uff1a \u5c06\u540c\u4e00\u7c7b\u65b9\u6cd5\u5c01\u88c5\u5230\u4e86\u4e00\u4e2a\u7c7b\u4e2d\uff0c\u4f8b\u5982\u4e0a\u8ff0\u793a\u4f8b\u4e2d\uff1a\u532a\u5f92\u7684\u76f8\u5173\u65b9\u6cd5\u90fd\u5199\u5728Terrorist\u7c7b\u4e2d\uff1b\u8b66\u5bdf\u7684\u76f8\u5173\u65b9\u6cd5\u90fd\u5199\u5728Police\u7c7b\u4e2d\u3002 \u5c06\u6570\u636e\u5c01\u88c5\u5230\u4e86\u5bf9\u8c61\u4e2d\uff0c\u5728\u5b9e\u4f8b\u5316\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7 __init__ \u521d\u59cb\u5316\u65b9\u6cd5\u5728\u5bf9\u8c61\u4e2d\u5c01\u88c5\u4e00\u4e9b\u6570\u636e\uff0c\u4fbf\u4e8e\u4ee5\u540e\u4f7f\u7528\u3002 3.2 \u7ee7\u627f \u4f20\u7edf\u7684\u7406\u5ff5\u4e2d\u6709\uff1a\u513f\u5b50\u53ef\u4ee5\u7ee7\u627f\u7236\u4eb2\u7684\u8d22\u4ea7\u3002 \u5728\u9762\u5411\u5bf9\u8c61\u4e2d\u4e5f\u6709\u8fd9\u6837\u7684\u7406\u5ff5\uff0c\u5373\uff1a\u5b50\u7c7b\u53ef\u4ee5\u7ee7\u627f\u7236\u7c7b\u4e2d\u7684\u65b9\u6cd5\u548c\u7c7b\u53d8\u91cf\uff08\u4e0d\u662f\u62f7\u8d1d\u4e00\u4efd\uff0c\u7236\u7c7b\u7684\u8fd8\u662f\u5c5e\u4e8e\u7236\u7c7b\uff0c\u5b50\u7c7b\u53ef\u4ee5\u7ee7\u627f\u800c\u5df2\uff09\u3002 \u7236\u7c7b \u5b50\u7c7b \u57fa\u7c7b \u6d3e\u751f\u7c7b 3.3 \u591a\u6001 Python\u9ed8\u8ba4\u652f\u6301\u591a\u6001\uff08\u8fd9\u79cd\u65b9\u5f0f\u79f0\u4e4b\u4e3a\u9e2d\u5b50\u7c7b\u578b\uff09\uff0c\u6700\u7b80\u5355\u7684\u57fa\u7840\u4e0b\u9762\u7684\u8fd9\u6bb5\u4ee3\u7801\u5373\u53ef\u3002 def func(arg): v1 = arg.copy() # \u6d45\u62f7\u8d1d print(v1) func(\"\u6b66\u6c9b\u9f50\") func([11,22,33,44]) 4.\u6210\u5458 \u6210\u5458 \u53d8\u91cf \u5b9e\u4f8b\u53d8\u91cf \u7c7b\u53d8\u91cf \u65b9\u6cd5 \u7ed1\u5b9a\u65b9\u6cd5 \u7c7b\u65b9\u6cd5 \u9759\u6001\u65b9\u6cd5 \u5c5e\u6027 \u6210\u5458\u4fee\u9970\u7b26 \u5bf9\u8c61\u5d4c\u5957 \u7279\u6b8a\u6210\u5458 4.1\u53d8\u91cf \u5b9e\u4f8b\u53d8\u91cf\uff0c\u5c5e\u4e8e\u5bf9\u8c61\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u4e2d\u5404\u81ea\u7ef4\u62a4\u81ea\u5df1\u7684\u6570\u636e\u3002 \u7c7b\u53d8\u91cf\uff0c\u5c5e\u4e8e\u7c7b\uff0c\u53ef\u4ee5\u88ab\u6240\u6709\u5bf9\u8c61\u5171\u4eab\uff0c\u4e00\u822c\u7528\u4e8e\u7ed9\u5bf9\u8c61\u63d0\u4f9b\u516c\u5171\u6570\u636e\uff08\u7c7b\u4f3c\u4e8e\u5168\u5c40\u53d8\u91cf\uff09\u3002 4.2 \u65b9\u6cd5 \u7ed1\u5b9a\u65b9\u6cd5\uff0c\u9ed8\u8ba4\u6709\u4e00\u4e2aself\u53c2\u6570\uff0c\u7531\u5bf9\u8c61\u8fdb\u884c\u8c03\u7528\uff08\u6b64\u65f6self\u5c31\u7b49\u4e8e\u8c03\u7528\u65b9\u6cd5\u7684\u8fd9\u4e2a\u5bf9\u8c61\uff09\u3010\u5bf9\u8c61&\u7c7b\u5747\u53ef\u8c03\u7528\u3011 \u7c7b\u65b9\u6cd5\uff0c\u9ed8\u8ba4\u6709\u4e00\u4e2acls\u53c2\u6570\uff0c\u7528\u7c7b\u6216\u5bf9\u8c61\u90fd\u53ef\u4ee5\u8c03\u7528\uff08\u6b64\u65f6cls\u5c31\u7b49\u4e8e\u8c03\u7528\u65b9\u6cd5\u7684\u8fd9\u4e2a\u7c7b\uff09\u3010\u5bf9\u8c61&\u7c7b\u5747\u53ef\u8c03\u7528\u3011 \u9759\u6001\u65b9\u6cd5\uff0c\u65e0\u9ed8\u8ba4\u53c2\u6570\uff0c\u7528\u7c7b\u548c\u5bf9\u8c61\u90fd\u53ef\u4ee5\u8c03\u7528\u3002\u3010\u5bf9\u8c61&\u7c7b\u5747\u53ef\u8c03\u7528\u3011 4.3 \u5c5e\u6027 \u5c5e\u6027\u5176\u5b9e\u662f\u7531\u7ed1\u5b9a\u65b9\u6cd5 + \u7279\u6b8a\u88c5\u9970\u5668 \u7ec4\u5408\u521b\u9020\u51fa\u6765\u7684\uff0c\u8ba9\u6211\u4eec\u4ee5\u540e\u5728\u8c03\u7528\u65b9\u6cd5\u65f6\u53ef\u4ee5\u4e0d\u52a0\u62ec\u53f7\uff0c\u4f8b\u5982\uff1a class Foo(object): def __init__(self, name): self.name = name def f1(self): return 123 @property def f2(self): return 123 obj = Foo(\"uichuan\") v1 = obj.f1() print(v1) v2 = obj.f2 print(v2) 4.4 \u6210\u5458\u4fee\u9970\u7b26 Python\u4e2d\u6210\u5458\u7684\u4fee\u9970\u7b26\u5c31\u662f\u6307\u7684\u662f\uff1a\u516c\u6709\u3001\u79c1\u6709\u3002 \u516c\u6709\uff0c\u5728\u4efb\u4f55\u5730\u65b9\u90fd\u53ef\u4ee5\u8c03\u7528\u8fd9\u4e2a\u6210\u5458\u3002 \u79c1\u6709\uff0c\u53ea\u6709\u5728\u7c7b\u7684\u5185\u90e8\u624d\u53ef\u4ee5\u8c03\u7528\u6539\u6210\u5458\uff08\u6210\u5458\u662f\u4ee5\u4e24\u4e2a\u4e0b\u5212\u7ebf\u5f00\u5934\uff0c\u5219\u8868\u793a\u8be5\u6210\u5458\u4e3a\u79c1\u6709\uff09\u3002 4.5 \u5bf9\u8c61\u5d4c\u5957 \u57fa\u4e8e\u9762\u5411\u5bf9\u8c61\u8fdb\u884c\u7f16\u7a0b\u65f6\uff0c\u5bf9\u8c61\u4e4b\u95f4\u53ef\u4ee5\u5b58\u5728\u5404\u79cd\u5404\u6837\u7684\u5173\u7cfb\uff0c\u4f8b\u5982\uff1a\u7ec4\u5408\u3001\u5173\u8054\u3001\u4f9d\u8d56\u7b49\uff08Java\u4e2d\u7684\u79f0\u547c\uff09\uff0c\u7528\u5927\u767d\u8bdd\u6765\u8bf4\u5c31\u662f\u5404\u79cd\u5d4c\u5957\u3002 4.6 \u7279\u6b8a\u6210\u5458 \u5728Python\u7684\u7c7b\u4e2d\u5b58\u5728\u4e00\u4e9b\u7279\u6b8a\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u90fd\u662f __\u65b9\u6cd5__ \u683c\u5f0f\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5728\u5185\u90e8\u5747\u6709\u7279\u6b8a\u7684\u542b\u4e49\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u8bb2\u4e00\u4e9b\u5e38\u89c1\u7684\u7279\u6b8a\u6210\u5458\uff1a __init__ \uff0c\u521d\u59cb\u5316\u65b9\u6cd5 class Foo(object): def __init__(self, name): self.name = name obj = Foo(\"\u6b66\u6c9b\u9f50\") __new__ \uff0c\u6784\u9020\u65b9\u6cd5 class Foo(object): def __init__(self, name): print(\"\u7b2c\u4e8c\u6b65\uff1a\u521d\u59cb\u5316\u5bf9\u8c61\uff0c\u5728\u7a7a\u5bf9\u8c61\u4e2d\u521b\u5efa\u6570\u636e\") self.name = name def __new__(cls, *args, **kwargs): print(\"\u7b2c\u4e00\u6b65\uff1a\u5148\u521b\u5efa\u7a7a\u5bf9\u8c61\u5e76\u8fd4\u56de\") return object.__new__(cls) obj = Foo(\"\u6b66\u6c9b\u9f50\") \u200b \u521b\u5efa\u65b0\u5bf9\u8c61\u7684\u672c\u8d28\uff1a \u200b \u5148\u5728\u7c7b\u7684\u5185\u90e8\u6267\u884c __new__ \u65b9\u6cd5\u521b\u5efa\u7a7a\u5bf9\u8c61\u5e76\u8fd4\u56de \u200b \u7b2c\u4e8c\u6b65\u624d\u4f1a\u8c03\u7528 __init__ \u65b9\u6cd5\u5728\u7a7a\u5bf9\u8c61\u4e2d\u521b\u5efa\u6570\u636e __call__ class Foo(object): def __call__(self, *args, **kwargs): print(\"\u6267\u884ccall\u65b9\u6cd5\") obj = Foo() obj() __str__ class Foo(object): def __str__(self): return \"\u54c8\u54c8\u54c8\u54c8\" obj = Foo() data = str(obj) print(data) __dict__ class Foo(object): def __init__(self, name, age): self.name = name self.age = age obj = Foo(\"\u6b66\u6c9b\u9f50\",19) print(obj.__dict__) __getitem__ \u3001 __setitem__ \u3001 __delitem__ class Foo(object): def __enter__(self): print(\"\u8fdb\u5165\u4e86\") return 666 def __exit__(self, exc_type, exc_val, exc_tb): print(\"\u51fa\u53bb\u4e86\") obj = Foo() with obj as data: print(data) __enter__ \u3001 __exit__ class Foo(object): def __enter__(self): print(\"\u8fdb\u5165\u4e86\") return 666 def __exit__(self, exc_type, exc_val, exc_tb): print(\"\u51fa\u53bb\u4e86\") obj = Foo() with obj as data: print(data) __add__ \u7b49\u3002 class Foo(object): def __init__(self, name): self.name = name def __add__(self, other): return \"{}-{}\".format(self.name, other.name) v1 = Foo(\"alex\") v2 = Foo(\"sb\") # \u5bf9\u8c61+\u503c\uff0c\u5185\u90e8\u4f1a\u53bb\u6267\u884c \u5bf9\u8c61.__add__\u65b9\u6cd5\uff0c\u5e76\u5c06+\u540e\u9762\u7684\u503c\u5f53\u505a\u53c2\u6570\u4f20\u9012\u8fc7\u53bb\u3002 v3 = v1 + v2 print(v3) __iter__ \u8fed\u4ee3\u5668 # \u8fed\u4ee3\u5668\u7c7b\u578b\u7684\u5b9a\u4e49\uff1a 1.\u5f53\u7c7b\u4e2d\u5b9a\u4e49\u4e86 __iter__ \u548c __next__ \u4e24\u4e2a\u65b9\u6cd5\u3002 2.__iter__ \u65b9\u6cd5\u9700\u8981\u8fd4\u56de\u5bf9\u8c61\u672c\u8eab\uff0c\u5373\uff1aself 3. __next__ \u65b9\u6cd5\uff0c\u8fd4\u56de\u4e0b\u4e00\u4e2a\u6570\u636e\uff0c\u5982\u679c\u6ca1\u6709\u6570\u636e\u4e86\uff0c\u5219\u9700\u8981\u629b\u51fa\u4e00\u4e2aStopIteration\u7684\u5f02\u5e38\u3002 \u5b98\u65b9\u6587\u6863\uff1ahttps://docs.python.org/3/library/stdtypes.html#iterator-types # \u521b\u5efa \u8fed\u4ee3\u5668\u7c7b\u578b \uff1a class IT(object): def __init__(self): self.counter = 0 def __iter__(self): return self def __next__(self): self.counter += 1 if self.counter == 3: raise StopIteration() return self.counter # \u6839\u636e\u7c7b\u5b9e\u4f8b\u5316\u521b\u5efa\u4e00\u4e2a\u8fed\u4ee3\u5668\u5bf9\u8c61\uff1a obj1 = IT() # v1 = obj1.__next__() # v2 = obj1.__next__() # v3 = obj1.__next__() # \u629b\u51fa\u5f02\u5e38 v1 = next(obj1) # obj1.__next__() print(v1) v2 = next(obj1) print(v2) v3 = next(obj1) print(v3) obj2 = IT() for item in obj2: # \u9996\u5148\u4f1a\u6267\u884c\u8fed\u4ee3\u5668\u5bf9\u8c61\u7684__iter__\u65b9\u6cd5\u5e76\u83b7\u53d6\u8fd4\u56de\u503c\uff0c\u4e00\u76f4\u53bb\u53cd\u590d\u7684\u6267\u884c next(\u5bf9\u8c61) print(item) \u8fed\u4ee3\u5668\u5bf9\u8c61\u652f\u6301\u901a\u8fc7next\u53d6\u503c\uff0c\u5982\u679c\u53d6\u503c\u7ed3\u675f\u5219\u81ea\u52a8\u629b\u51faStopIteration\u3002 for\u5faa\u73af\u5185\u90e8\u5728\u5faa\u73af\u65f6\uff0c\u5148\u6267\u884c__iter__\u65b9\u6cd5\uff0c\u83b7\u53d6\u4e00\u4e2a\u8fed\u4ee3\u5668\u5bf9\u8c61\uff0c\u7136\u540e\u4e0d\u65ad\u6267\u884c\u7684next\u53d6\u503c\uff08\u6709\u5f02\u5e38StopIteration\u5219\u7ec8\u6b62\u5faa\u73af\uff09\u3002 \u751f\u6210\u5668 # \u8fed\u4ee3\u5668\u7c7b\u578b\u7684\u5b9a\u4e49\uff1a 1.\u5f53\u7c7b\u4e2d\u5b9a\u4e49\u4e86 __iter__ \u548c __next__ \u4e24\u4e2a\u65b9\u6cd5\u3002 2.__iter__ \u65b9\u6cd5\u9700\u8981\u8fd4\u56de\u5bf9\u8c61\u672c\u8eab\uff0c\u5373\uff1aself 3. __next__ \u65b9\u6cd5\uff0c\u8fd4\u56de\u4e0b\u4e00\u4e2a\u6570\u636e\uff0c\u5982\u679c\u6ca1\u6709\u6570\u636e\u4e86\uff0c\u5219\u9700\u8981\u629b\u51fa\u4e00\u4e2aStopIteration\u7684\u5f02\u5e38\u3002 \u5b98\u65b9\u6587\u6863\uff1ahttps://docs.python.org/3/library/stdtypes.html#iterator-types # \u521b\u5efa \u8fed\u4ee3\u5668\u7c7b\u578b \uff1a class IT(object): def __init__(self): self.counter = 0 def __iter__(self): return self def __next__(self): self.counter += 1 if self.counter == 3: raise StopIteration() return self.counter # \u6839\u636e\u7c7b\u5b9e\u4f8b\u5316\u521b\u5efa\u4e00\u4e2a\u8fed\u4ee3\u5668\u5bf9\u8c61\uff1a obj1 = IT() # v1 = obj1.__next__() # v2 = obj1.__next__() # v3 = obj1.__next__() # \u629b\u51fa\u5f02\u5e38 v1 = next(obj1) # obj1.__next__() print(v1) v2 = next(obj1) print(v2) v3 = next(obj1) print(v3) obj2 = IT() for item in obj2: # \u9996\u5148\u4f1a\u6267\u884c\u8fed\u4ee3\u5668\u5bf9\u8c61\u7684__iter__\u65b9\u6cd5\u5e76\u83b7\u53d6\u8fd4\u56de\u503c\uff0c\u4e00\u76f4\u53bb\u53cd\u590d\u7684\u6267\u884c next(\u5bf9\u8c61) print(item) \u8fed\u4ee3\u5668\u5bf9\u8c61\u652f\u6301\u901a\u8fc7next\u53d6\u503c\uff0c\u5982\u679c\u53d6\u503c\u7ed3\u675f\u5219\u81ea\u52a8\u629b\u51faStopIteration\u3002 for\u5faa\u73af\u5185\u90e8\u5728\u5faa\u73af\u65f6\uff0c\u5148\u6267\u884c__iter__\u65b9\u6cd5\uff0c\u83b7\u53d6\u4e00\u4e2a\u8fed\u4ee3\u5668\u5bf9\u8c61\uff0c\u7136\u540e\u4e0d\u65ad\u6267\u884c\u7684next\u53d6\u503c\uff08\u6709\u5f02\u5e38StopIteration\u5219\u7ec8\u6b62\u5faa\u73af\uff09\u3002 \u53ef\u8fed\u4ee3\u5bf9\u8c61 # \u5982\u679c\u4e00\u4e2a\u7c7b\u4e2d\u6709__iter__\u65b9\u6cd5\u4e14\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\u5bf9\u8c61 \uff1b\u5219\u6211\u4eec\u79f0\u4ee5\u8fd9\u4e2a\u7c7b\u521b\u5efa\u7684\u5bf9\u8c61\u4e3a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u3002 class Foo(object): def __iter__(self): return \u8fed\u4ee3\u5668\u5bf9\u8c61(\u751f\u6210\u5668\u5bf9\u8c61) obj = Foo() # obj\u662f \u53ef\u8fed\u4ee3\u5bf9\u8c61\u3002 # \u53ef\u8fed\u4ee3\u5bf9\u8c61\u662f\u53ef\u4ee5\u4f7f\u7528for\u6765\u8fdb\u884c\u5faa\u73af\uff0c\u5728\u5faa\u73af\u7684\u5185\u90e8\u5176\u5b9e\u662f\u5148\u6267\u884c __iter__ \u65b9\u6cd5\uff0c\u83b7\u53d6\u5176\u8fed\u4ee3\u5668\u5bf9\u8c61\uff0c\u7136\u540e\u518d\u5728\u5185\u90e8\u6267\u884c\u8fd9\u4e2a\u8fed\u4ee3\u5668\u5bf9\u8c61\u7684next\u529f\u80fd\uff0c\u9010\u6b65\u53d6\u503c\u3002 for item in obj: pass class IT(object): def __init__(self): self.counter = 0 def __iter__(self): return self def __next__(self): self.counter += 1 if self.counter == 3: raise StopIteration() return self.counter class Foo(object): def __iter__(self): return IT() obj = Foo() # \u53ef\u8fed\u4ee3\u5bf9\u8c61 for item in obj: # \u5faa\u73af\u53ef\u8fed\u4ee3\u5bf9\u8c61\u65f6\uff0c\u5185\u90e8\u5148\u6267\u884cobj.__iter__\u5e76\u83b7\u53d6\u8fed\u4ee3\u5668\u5bf9\u8c61\uff1b\u4e0d\u65ad\u5730\u6267\u884c\u8fed\u4ee3\u5668\u5bf9\u8c61\u7684next\u65b9\u6cd5\u3002 print(item)","title":"9.\u6709\u8da3\u7684\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1"},{"location":"Dev_documents/oppProgramming/opp/#9","text":"\u4e09\u5927\u7279\u6027 \u5c01\u88c5 \u7ee7\u627f \u591a\u6001","title":"9.\u6709\u8da3\u7684\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1"},{"location":"Dev_documents/oppProgramming/opp/#1self","text":"\u5728\u6bcf\u4e2a\u7c7b\u4e2d\u90fd\u53ef\u4ee5\u5b9a\u4e49\u4e2a\u7279\u6b8a\u7684\uff1a __init__ \u521d\u59cb\u5316\u65b9\u6cd5 \uff0c\u5728\u5b9e\u4f8b\u5316\u7c7b\u521b\u5efa\u5bf9\u8c61\u65f6\u81ea\u52a8\u6267\u884c\uff0c\u5373\uff1a \u5bf9\u8c61=\u7c7b() \u3002 class Message: def __init__(self, content): self.data = content def send_email(self, email): data = \"\u7ed9{}\u53d1\u90ae\u4ef6\uff0c\u5185\u5bb9\u662f\uff1a{}\".format(email, self.data) print(data) def send_wechat(self, vid): data = \"\u7ed9{}\u53d1\u5fae\u4fe1\uff0c\u5185\u5bb9\u662f\uff1a{}\".format(vid, self.data) print(data) # \u5bf9\u8c61 = \u7c7b\u540d() # \u81ea\u52a8\u6267\u884c\u7c7b\u4e2d\u7684 __init__ \u65b9\u6cd5\u3002 # 1. \u6839\u636e\u7c7b\u578b\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5185\u5b58\u7684\u4e00\u5757 \u533a\u57df \u3002 # 2. \u6267\u884c__init__\u65b9\u6cd5\uff0c\u6a21\u5757\u4f1a\u5c06\u521b\u5efa\u7684\u90a3\u5757\u533a\u57df\u7684\u5185\u5b58\u5730\u5740\u5f53self\u53c2\u6570\u4f20\u9012\u8fdb\u53bb\u3002 \u5f80\u533a\u57df\u4e2d(data=\"\u6ce8\u518c\u6210\u529f\") msg_object = Message(\"\u6ce8\u518c\u6210\u529f\") msg_object.send_email(\"uichuan_47@163.com\") # \u7ed9uichuan_47@163.com\u53d1\u90ae\u4ef6\uff0c\u5185\u5bb9\u662f\uff1a\u6ce8\u518c\u6210\u529f msg_object.send_wechat(\"uichuan\") # \u7ed9uichuan\u53d1\u5fae\u4fe1\uff0c\u5185\u5bb9\u662f\uff1a\u6ce8\u518c\u6210\u529f \u9762\u5411\u5bf9\u8c61\u7684\u601d\u60f3\uff1a\u5c06\u4e00\u4e9b\u6570\u636e\u5c01\u88c5\u5230\u5bf9\u8c61\u4e2d\uff0c\u5728\u6267\u884c\u65b9\u6cd5\u65f6\uff0c\u518d\u53bb\u5bf9\u8c61\u4e2d\u83b7\u53d6\u3002 \u51fd\u6570\u5f0f\u7684\u601d\u60f3\uff1a\u51fd\u6570\u5185\u90e8\u9700\u8981\u7684\u6570\u636e\u5747\u901a\u8fc7\u53c2\u6570\u7684\u5f62\u5f0f\u4f20\u9012\u3002 self\uff0c\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u4e2a\u53c2\u6570\u3002\u8fd9\u4e2a\u53c2\u6570\u662fPython\u5185\u90e8\u4f1a\u63d0\u4f9b\uff0c\u5176\u5b9e\u672c\u8d28\u4e0a\u5c31\u662f\u8c03\u7528\u5f53\u524d\u65b9\u6cd5\u7684\u90a3\u4e2a\u5bf9\u8c61\u3002 \u5bf9\u8c61\uff0c\u57fa\u4e8e\u7c7b\u5b9e\u4f8b\u5316\u51fa\u6765\u201d\u4e00\u5757\u5185\u5b58\u201c\uff0c\u9ed8\u8ba4\u91cc\u9762\u6ca1\u6709\u6570\u636e\uff1b\u7ecf\u8fc7\u7c7b\u7684 __init__ \u65b9\u6cd5\uff0c\u53ef\u4ee5\u5728\u5185\u5b58\u4e2d\u521d\u59cb\u5316\u4e00\u4e9b\u6570\u636e\u3002","title":"1.\u5bf9\u8c61\u548cself"},{"location":"Dev_documents/oppProgramming/opp/#2","text":"\u5728\u7f16\u5199\u9762\u5411\u5bf9\u8c61\u76f8\u5173\u4ee3\u7801\u65f6\uff0c\u6700\u5e38\u89c1\u6210\u5458\u6709\uff1a \u5b9e\u4f8b\u53d8\u91cf\uff0c\u5c5e\u4e8e\u5bf9\u8c61\uff0c\u53ea\u80fd\u901a\u8fc7\u5bf9\u8c61\u8c03\u7528\u3002 \u7ed1\u5b9a\u65b9\u6cd5\uff0c\u5c5e\u4e8e\u7c7b\uff0c\u901a\u8fc7\u5bf9\u8c61\u8c03\u7528 \u6216 \u901a\u8fc7\u7c7b\u8c03\u7528\u3002 class Person: def __init__(self, n1, n2): # \u5b9e\u4f8b\u53d8\u91cf self.name = n1 self.age = n2 # \u7ed1\u5b9a\u65b9\u6cd5 def show(self): msg = \"\u6211\u53eb{}\uff0c\u4eca\u5e74{}\u5c81\u3002\".format(self.name, self.age) print(msg) def all_message(self): msg = \"\u6211\u662f{}\u4eba\uff0c\u6211\u53eb{}\uff0c\u4eca\u5e74{}\u5c81\u3002\".format(Person.country, self.name, self.age) print(msg) def total_message(self): msg = \"\u6211\u662f{}\u4eba\uff0c\u6211\u53eb{}\uff0c\u4eca\u5e74{}\u5c81\u3002\".format(self.country, self.name, self.age) print(msg)","title":"2.\u5e38\u89c1\u6210\u5458"},{"location":"Dev_documents/oppProgramming/opp/#3","text":"","title":"3.\u4e09\u4e2a\u7279\u6027"},{"location":"Dev_documents/oppProgramming/opp/#31","text":"\u5c01\u88c5\u4e3b\u8981\u4f53\u73b0\u5728\u4e24\u4e2a\u65b9\u9762\uff1a \u5c06\u540c\u4e00\u7c7b\u65b9\u6cd5\u5c01\u88c5\u5230\u4e86\u4e00\u4e2a\u7c7b\u4e2d\uff0c\u4f8b\u5982\u4e0a\u8ff0\u793a\u4f8b\u4e2d\uff1a\u532a\u5f92\u7684\u76f8\u5173\u65b9\u6cd5\u90fd\u5199\u5728Terrorist\u7c7b\u4e2d\uff1b\u8b66\u5bdf\u7684\u76f8\u5173\u65b9\u6cd5\u90fd\u5199\u5728Police\u7c7b\u4e2d\u3002 \u5c06\u6570\u636e\u5c01\u88c5\u5230\u4e86\u5bf9\u8c61\u4e2d\uff0c\u5728\u5b9e\u4f8b\u5316\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7 __init__ \u521d\u59cb\u5316\u65b9\u6cd5\u5728\u5bf9\u8c61\u4e2d\u5c01\u88c5\u4e00\u4e9b\u6570\u636e\uff0c\u4fbf\u4e8e\u4ee5\u540e\u4f7f\u7528\u3002","title":"3.1 \u5c01\u88c5"},{"location":"Dev_documents/oppProgramming/opp/#32","text":"\u4f20\u7edf\u7684\u7406\u5ff5\u4e2d\u6709\uff1a\u513f\u5b50\u53ef\u4ee5\u7ee7\u627f\u7236\u4eb2\u7684\u8d22\u4ea7\u3002 \u5728\u9762\u5411\u5bf9\u8c61\u4e2d\u4e5f\u6709\u8fd9\u6837\u7684\u7406\u5ff5\uff0c\u5373\uff1a\u5b50\u7c7b\u53ef\u4ee5\u7ee7\u627f\u7236\u7c7b\u4e2d\u7684\u65b9\u6cd5\u548c\u7c7b\u53d8\u91cf\uff08\u4e0d\u662f\u62f7\u8d1d\u4e00\u4efd\uff0c\u7236\u7c7b\u7684\u8fd8\u662f\u5c5e\u4e8e\u7236\u7c7b\uff0c\u5b50\u7c7b\u53ef\u4ee5\u7ee7\u627f\u800c\u5df2\uff09\u3002 \u7236\u7c7b \u5b50\u7c7b \u57fa\u7c7b \u6d3e\u751f\u7c7b","title":"3.2 \u7ee7\u627f"},{"location":"Dev_documents/oppProgramming/opp/#33","text":"Python\u9ed8\u8ba4\u652f\u6301\u591a\u6001\uff08\u8fd9\u79cd\u65b9\u5f0f\u79f0\u4e4b\u4e3a\u9e2d\u5b50\u7c7b\u578b\uff09\uff0c\u6700\u7b80\u5355\u7684\u57fa\u7840\u4e0b\u9762\u7684\u8fd9\u6bb5\u4ee3\u7801\u5373\u53ef\u3002 def func(arg): v1 = arg.copy() # \u6d45\u62f7\u8d1d print(v1) func(\"\u6b66\u6c9b\u9f50\") func([11,22,33,44])","title":"3.3 \u591a\u6001"},{"location":"Dev_documents/oppProgramming/opp/#4","text":"\u6210\u5458 \u53d8\u91cf \u5b9e\u4f8b\u53d8\u91cf \u7c7b\u53d8\u91cf \u65b9\u6cd5 \u7ed1\u5b9a\u65b9\u6cd5 \u7c7b\u65b9\u6cd5 \u9759\u6001\u65b9\u6cd5 \u5c5e\u6027 \u6210\u5458\u4fee\u9970\u7b26 \u5bf9\u8c61\u5d4c\u5957 \u7279\u6b8a\u6210\u5458","title":"4.\u6210\u5458"},{"location":"Dev_documents/oppProgramming/opp/#41","text":"\u5b9e\u4f8b\u53d8\u91cf\uff0c\u5c5e\u4e8e\u5bf9\u8c61\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u4e2d\u5404\u81ea\u7ef4\u62a4\u81ea\u5df1\u7684\u6570\u636e\u3002 \u7c7b\u53d8\u91cf\uff0c\u5c5e\u4e8e\u7c7b\uff0c\u53ef\u4ee5\u88ab\u6240\u6709\u5bf9\u8c61\u5171\u4eab\uff0c\u4e00\u822c\u7528\u4e8e\u7ed9\u5bf9\u8c61\u63d0\u4f9b\u516c\u5171\u6570\u636e\uff08\u7c7b\u4f3c\u4e8e\u5168\u5c40\u53d8\u91cf\uff09\u3002","title":"4.1\u53d8\u91cf"},{"location":"Dev_documents/oppProgramming/opp/#42","text":"\u7ed1\u5b9a\u65b9\u6cd5\uff0c\u9ed8\u8ba4\u6709\u4e00\u4e2aself\u53c2\u6570\uff0c\u7531\u5bf9\u8c61\u8fdb\u884c\u8c03\u7528\uff08\u6b64\u65f6self\u5c31\u7b49\u4e8e\u8c03\u7528\u65b9\u6cd5\u7684\u8fd9\u4e2a\u5bf9\u8c61\uff09\u3010\u5bf9\u8c61&\u7c7b\u5747\u53ef\u8c03\u7528\u3011 \u7c7b\u65b9\u6cd5\uff0c\u9ed8\u8ba4\u6709\u4e00\u4e2acls\u53c2\u6570\uff0c\u7528\u7c7b\u6216\u5bf9\u8c61\u90fd\u53ef\u4ee5\u8c03\u7528\uff08\u6b64\u65f6cls\u5c31\u7b49\u4e8e\u8c03\u7528\u65b9\u6cd5\u7684\u8fd9\u4e2a\u7c7b\uff09\u3010\u5bf9\u8c61&\u7c7b\u5747\u53ef\u8c03\u7528\u3011 \u9759\u6001\u65b9\u6cd5\uff0c\u65e0\u9ed8\u8ba4\u53c2\u6570\uff0c\u7528\u7c7b\u548c\u5bf9\u8c61\u90fd\u53ef\u4ee5\u8c03\u7528\u3002\u3010\u5bf9\u8c61&\u7c7b\u5747\u53ef\u8c03\u7528\u3011","title":"4.2 \u65b9\u6cd5"},{"location":"Dev_documents/oppProgramming/opp/#43","text":"\u5c5e\u6027\u5176\u5b9e\u662f\u7531\u7ed1\u5b9a\u65b9\u6cd5 + \u7279\u6b8a\u88c5\u9970\u5668 \u7ec4\u5408\u521b\u9020\u51fa\u6765\u7684\uff0c\u8ba9\u6211\u4eec\u4ee5\u540e\u5728\u8c03\u7528\u65b9\u6cd5\u65f6\u53ef\u4ee5\u4e0d\u52a0\u62ec\u53f7\uff0c\u4f8b\u5982\uff1a class Foo(object): def __init__(self, name): self.name = name def f1(self): return 123 @property def f2(self): return 123 obj = Foo(\"uichuan\") v1 = obj.f1() print(v1) v2 = obj.f2 print(v2)","title":"4.3 \u5c5e\u6027"},{"location":"Dev_documents/oppProgramming/opp/#44","text":"Python\u4e2d\u6210\u5458\u7684\u4fee\u9970\u7b26\u5c31\u662f\u6307\u7684\u662f\uff1a\u516c\u6709\u3001\u79c1\u6709\u3002 \u516c\u6709\uff0c\u5728\u4efb\u4f55\u5730\u65b9\u90fd\u53ef\u4ee5\u8c03\u7528\u8fd9\u4e2a\u6210\u5458\u3002 \u79c1\u6709\uff0c\u53ea\u6709\u5728\u7c7b\u7684\u5185\u90e8\u624d\u53ef\u4ee5\u8c03\u7528\u6539\u6210\u5458\uff08\u6210\u5458\u662f\u4ee5\u4e24\u4e2a\u4e0b\u5212\u7ebf\u5f00\u5934\uff0c\u5219\u8868\u793a\u8be5\u6210\u5458\u4e3a\u79c1\u6709\uff09\u3002","title":"4.4 \u6210\u5458\u4fee\u9970\u7b26"},{"location":"Dev_documents/oppProgramming/opp/#45","text":"\u57fa\u4e8e\u9762\u5411\u5bf9\u8c61\u8fdb\u884c\u7f16\u7a0b\u65f6\uff0c\u5bf9\u8c61\u4e4b\u95f4\u53ef\u4ee5\u5b58\u5728\u5404\u79cd\u5404\u6837\u7684\u5173\u7cfb\uff0c\u4f8b\u5982\uff1a\u7ec4\u5408\u3001\u5173\u8054\u3001\u4f9d\u8d56\u7b49\uff08Java\u4e2d\u7684\u79f0\u547c\uff09\uff0c\u7528\u5927\u767d\u8bdd\u6765\u8bf4\u5c31\u662f\u5404\u79cd\u5d4c\u5957\u3002","title":"4.5 \u5bf9\u8c61\u5d4c\u5957"},{"location":"Dev_documents/oppProgramming/opp/#46","text":"\u5728Python\u7684\u7c7b\u4e2d\u5b58\u5728\u4e00\u4e9b\u7279\u6b8a\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u90fd\u662f __\u65b9\u6cd5__ \u683c\u5f0f\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5728\u5185\u90e8\u5747\u6709\u7279\u6b8a\u7684\u542b\u4e49\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u8bb2\u4e00\u4e9b\u5e38\u89c1\u7684\u7279\u6b8a\u6210\u5458\uff1a __init__ \uff0c\u521d\u59cb\u5316\u65b9\u6cd5 class Foo(object): def __init__(self, name): self.name = name obj = Foo(\"\u6b66\u6c9b\u9f50\") __new__ \uff0c\u6784\u9020\u65b9\u6cd5 class Foo(object): def __init__(self, name): print(\"\u7b2c\u4e8c\u6b65\uff1a\u521d\u59cb\u5316\u5bf9\u8c61\uff0c\u5728\u7a7a\u5bf9\u8c61\u4e2d\u521b\u5efa\u6570\u636e\") self.name = name def __new__(cls, *args, **kwargs): print(\"\u7b2c\u4e00\u6b65\uff1a\u5148\u521b\u5efa\u7a7a\u5bf9\u8c61\u5e76\u8fd4\u56de\") return object.__new__(cls) obj = Foo(\"\u6b66\u6c9b\u9f50\") \u200b \u521b\u5efa\u65b0\u5bf9\u8c61\u7684\u672c\u8d28\uff1a \u200b \u5148\u5728\u7c7b\u7684\u5185\u90e8\u6267\u884c __new__ \u65b9\u6cd5\u521b\u5efa\u7a7a\u5bf9\u8c61\u5e76\u8fd4\u56de \u200b \u7b2c\u4e8c\u6b65\u624d\u4f1a\u8c03\u7528 __init__ \u65b9\u6cd5\u5728\u7a7a\u5bf9\u8c61\u4e2d\u521b\u5efa\u6570\u636e __call__ class Foo(object): def __call__(self, *args, **kwargs): print(\"\u6267\u884ccall\u65b9\u6cd5\") obj = Foo() obj() __str__ class Foo(object): def __str__(self): return \"\u54c8\u54c8\u54c8\u54c8\" obj = Foo() data = str(obj) print(data) __dict__ class Foo(object): def __init__(self, name, age): self.name = name self.age = age obj = Foo(\"\u6b66\u6c9b\u9f50\",19) print(obj.__dict__) __getitem__ \u3001 __setitem__ \u3001 __delitem__ class Foo(object): def __enter__(self): print(\"\u8fdb\u5165\u4e86\") return 666 def __exit__(self, exc_type, exc_val, exc_tb): print(\"\u51fa\u53bb\u4e86\") obj = Foo() with obj as data: print(data) __enter__ \u3001 __exit__ class Foo(object): def __enter__(self): print(\"\u8fdb\u5165\u4e86\") return 666 def __exit__(self, exc_type, exc_val, exc_tb): print(\"\u51fa\u53bb\u4e86\") obj = Foo() with obj as data: print(data) __add__ \u7b49\u3002 class Foo(object): def __init__(self, name): self.name = name def __add__(self, other): return \"{}-{}\".format(self.name, other.name) v1 = Foo(\"alex\") v2 = Foo(\"sb\") # \u5bf9\u8c61+\u503c\uff0c\u5185\u90e8\u4f1a\u53bb\u6267\u884c \u5bf9\u8c61.__add__\u65b9\u6cd5\uff0c\u5e76\u5c06+\u540e\u9762\u7684\u503c\u5f53\u505a\u53c2\u6570\u4f20\u9012\u8fc7\u53bb\u3002 v3 = v1 + v2 print(v3) __iter__ \u8fed\u4ee3\u5668 # \u8fed\u4ee3\u5668\u7c7b\u578b\u7684\u5b9a\u4e49\uff1a 1.\u5f53\u7c7b\u4e2d\u5b9a\u4e49\u4e86 __iter__ \u548c __next__ \u4e24\u4e2a\u65b9\u6cd5\u3002 2.__iter__ \u65b9\u6cd5\u9700\u8981\u8fd4\u56de\u5bf9\u8c61\u672c\u8eab\uff0c\u5373\uff1aself 3. __next__ \u65b9\u6cd5\uff0c\u8fd4\u56de\u4e0b\u4e00\u4e2a\u6570\u636e\uff0c\u5982\u679c\u6ca1\u6709\u6570\u636e\u4e86\uff0c\u5219\u9700\u8981\u629b\u51fa\u4e00\u4e2aStopIteration\u7684\u5f02\u5e38\u3002 \u5b98\u65b9\u6587\u6863\uff1ahttps://docs.python.org/3/library/stdtypes.html#iterator-types # \u521b\u5efa \u8fed\u4ee3\u5668\u7c7b\u578b \uff1a class IT(object): def __init__(self): self.counter = 0 def __iter__(self): return self def __next__(self): self.counter += 1 if self.counter == 3: raise StopIteration() return self.counter # \u6839\u636e\u7c7b\u5b9e\u4f8b\u5316\u521b\u5efa\u4e00\u4e2a\u8fed\u4ee3\u5668\u5bf9\u8c61\uff1a obj1 = IT() # v1 = obj1.__next__() # v2 = obj1.__next__() # v3 = obj1.__next__() # \u629b\u51fa\u5f02\u5e38 v1 = next(obj1) # obj1.__next__() print(v1) v2 = next(obj1) print(v2) v3 = next(obj1) print(v3) obj2 = IT() for item in obj2: # \u9996\u5148\u4f1a\u6267\u884c\u8fed\u4ee3\u5668\u5bf9\u8c61\u7684__iter__\u65b9\u6cd5\u5e76\u83b7\u53d6\u8fd4\u56de\u503c\uff0c\u4e00\u76f4\u53bb\u53cd\u590d\u7684\u6267\u884c next(\u5bf9\u8c61) print(item) \u8fed\u4ee3\u5668\u5bf9\u8c61\u652f\u6301\u901a\u8fc7next\u53d6\u503c\uff0c\u5982\u679c\u53d6\u503c\u7ed3\u675f\u5219\u81ea\u52a8\u629b\u51faStopIteration\u3002 for\u5faa\u73af\u5185\u90e8\u5728\u5faa\u73af\u65f6\uff0c\u5148\u6267\u884c__iter__\u65b9\u6cd5\uff0c\u83b7\u53d6\u4e00\u4e2a\u8fed\u4ee3\u5668\u5bf9\u8c61\uff0c\u7136\u540e\u4e0d\u65ad\u6267\u884c\u7684next\u53d6\u503c\uff08\u6709\u5f02\u5e38StopIteration\u5219\u7ec8\u6b62\u5faa\u73af\uff09\u3002 \u751f\u6210\u5668 # \u8fed\u4ee3\u5668\u7c7b\u578b\u7684\u5b9a\u4e49\uff1a 1.\u5f53\u7c7b\u4e2d\u5b9a\u4e49\u4e86 __iter__ \u548c __next__ \u4e24\u4e2a\u65b9\u6cd5\u3002 2.__iter__ \u65b9\u6cd5\u9700\u8981\u8fd4\u56de\u5bf9\u8c61\u672c\u8eab\uff0c\u5373\uff1aself 3. __next__ \u65b9\u6cd5\uff0c\u8fd4\u56de\u4e0b\u4e00\u4e2a\u6570\u636e\uff0c\u5982\u679c\u6ca1\u6709\u6570\u636e\u4e86\uff0c\u5219\u9700\u8981\u629b\u51fa\u4e00\u4e2aStopIteration\u7684\u5f02\u5e38\u3002 \u5b98\u65b9\u6587\u6863\uff1ahttps://docs.python.org/3/library/stdtypes.html#iterator-types # \u521b\u5efa \u8fed\u4ee3\u5668\u7c7b\u578b \uff1a class IT(object): def __init__(self): self.counter = 0 def __iter__(self): return self def __next__(self): self.counter += 1 if self.counter == 3: raise StopIteration() return self.counter # \u6839\u636e\u7c7b\u5b9e\u4f8b\u5316\u521b\u5efa\u4e00\u4e2a\u8fed\u4ee3\u5668\u5bf9\u8c61\uff1a obj1 = IT() # v1 = obj1.__next__() # v2 = obj1.__next__() # v3 = obj1.__next__() # \u629b\u51fa\u5f02\u5e38 v1 = next(obj1) # obj1.__next__() print(v1) v2 = next(obj1) print(v2) v3 = next(obj1) print(v3) obj2 = IT() for item in obj2: # \u9996\u5148\u4f1a\u6267\u884c\u8fed\u4ee3\u5668\u5bf9\u8c61\u7684__iter__\u65b9\u6cd5\u5e76\u83b7\u53d6\u8fd4\u56de\u503c\uff0c\u4e00\u76f4\u53bb\u53cd\u590d\u7684\u6267\u884c next(\u5bf9\u8c61) print(item) \u8fed\u4ee3\u5668\u5bf9\u8c61\u652f\u6301\u901a\u8fc7next\u53d6\u503c\uff0c\u5982\u679c\u53d6\u503c\u7ed3\u675f\u5219\u81ea\u52a8\u629b\u51faStopIteration\u3002 for\u5faa\u73af\u5185\u90e8\u5728\u5faa\u73af\u65f6\uff0c\u5148\u6267\u884c__iter__\u65b9\u6cd5\uff0c\u83b7\u53d6\u4e00\u4e2a\u8fed\u4ee3\u5668\u5bf9\u8c61\uff0c\u7136\u540e\u4e0d\u65ad\u6267\u884c\u7684next\u53d6\u503c\uff08\u6709\u5f02\u5e38StopIteration\u5219\u7ec8\u6b62\u5faa\u73af\uff09\u3002 \u53ef\u8fed\u4ee3\u5bf9\u8c61 # \u5982\u679c\u4e00\u4e2a\u7c7b\u4e2d\u6709__iter__\u65b9\u6cd5\u4e14\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\u5bf9\u8c61 \uff1b\u5219\u6211\u4eec\u79f0\u4ee5\u8fd9\u4e2a\u7c7b\u521b\u5efa\u7684\u5bf9\u8c61\u4e3a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u3002 class Foo(object): def __iter__(self): return \u8fed\u4ee3\u5668\u5bf9\u8c61(\u751f\u6210\u5668\u5bf9\u8c61) obj = Foo() # obj\u662f \u53ef\u8fed\u4ee3\u5bf9\u8c61\u3002 # \u53ef\u8fed\u4ee3\u5bf9\u8c61\u662f\u53ef\u4ee5\u4f7f\u7528for\u6765\u8fdb\u884c\u5faa\u73af\uff0c\u5728\u5faa\u73af\u7684\u5185\u90e8\u5176\u5b9e\u662f\u5148\u6267\u884c __iter__ \u65b9\u6cd5\uff0c\u83b7\u53d6\u5176\u8fed\u4ee3\u5668\u5bf9\u8c61\uff0c\u7136\u540e\u518d\u5728\u5185\u90e8\u6267\u884c\u8fd9\u4e2a\u8fed\u4ee3\u5668\u5bf9\u8c61\u7684next\u529f\u80fd\uff0c\u9010\u6b65\u53d6\u503c\u3002 for item in obj: pass class IT(object): def __init__(self): self.counter = 0 def __iter__(self): return self def __next__(self): self.counter += 1 if self.counter == 3: raise StopIteration() return self.counter class Foo(object): def __iter__(self): return IT() obj = Foo() # \u53ef\u8fed\u4ee3\u5bf9\u8c61 for item in obj: # \u5faa\u73af\u53ef\u8fed\u4ee3\u5bf9\u8c61\u65f6\uff0c\u5185\u90e8\u5148\u6267\u884cobj.__iter__\u5e76\u83b7\u53d6\u8fed\u4ee3\u5668\u5bf9\u8c61\uff1b\u4e0d\u65ad\u5730\u6267\u884c\u8fed\u4ee3\u5668\u5bf9\u8c61\u7684next\u65b9\u6cd5\u3002 print(item)","title":"4.6 \u7279\u6b8a\u6210\u5458"},{"location":"Dev_documents/prac/prac/","text":"3.practice \u4e3b\u9875 \u5e26\u6709\u8868\u683c\u7684\u4e3b\u9875 \u5c0f\u7c73\u5546\u57ce","title":"3.practice"},{"location":"Dev_documents/prac/prac/#3practice","text":"","title":"3.practice"},{"location":"Dev_documents/prac/prac/#_1","text":"","title":"\u4e3b\u9875"},{"location":"Dev_documents/prac/prac/#_2","text":"","title":"\u5e26\u6709\u8868\u683c\u7684\u4e3b\u9875"},{"location":"Dev_documents/prac/prac/#_3","text":"","title":"\u5c0f\u7c73\u5546\u57ce"},{"location":"Dev_documents/pycharm_ad/pc_help/","text":"8.Pycharm \u5e2e\u52a9 \u524d\u620f \u5173\u4e8e\u4f60\u7684\u9879\u76ee\u5e94\u8be5\u5b58\u50a8\u5728\u4ec0\u4e48\u5730\u65b9 \u8fd9\u662f\u6211\u7684\u4e60\u60ef\uff1a \u6240\u6709\u7684\u9879\u76ee\u90fd\u5b58\u50a8\u5728PycharmProjects\u6587\u4ef6\u5939\u4e0b \uff08\u4f60\u53ef\u4ee5\u5728\u4e00\u4e2a\u81ea\u5df1\u5e38\u7528\u7684\u4f4d\u7f6e\u65b0\u5efa\u4e00\u4e2a\u540d\u4e3a PycharmProjects \u7684\u6587\u4ef6\u5939\uff09 \u8fd9\u662f\u6211\u7535\u8111\u4e2d\u7684PycharmProjects\u6587\u4ef6\u5939 \u91cc\u9762\u6709\u5f88\u591a\u9879\u76ee 1.\u65b0\u5efa\u9879\u76ee \u9009\u62e9\u65b0\u5efa\u7eaf\u51c0\u7684Python\u9879\u76ee\uff0c\u653e\u5728PycharmProjects\u6587\u4ef6\u5939\u4e0b 2.Python\u89e3\u91ca\u5668\u7684\u914d\u7f6e 2.1 \u57fa\u4e8e\u7cfb\u7edf\u89e3\u91ca\u5668\u521b\u5efa \u7cfb\u7edf\u89e3\u91ca\u5668 \u662f\u7535\u8111\u4e0a\u5b89\u88c5\u7684python\u89e3\u91ca\u5668\uff0c\u53ef\u4ee5\u901a\u8fc7\u627e\u5230python\u89e3\u91ca\u5668\u7684\u8def\u5f84\u8fdb\u884c\u914d\u7f6e \u6211\u7684\u7535\u8111\u4e0a\u6709\u4e24\u4e2a\u7cfb\u7edf\u89e3\u91ca\u5668 \u5206\u522b\u662fpython3.9\u548cpython3.10 \u57fa\u4e8e\u7cfb\u7edf\u89e3\u91ca\u5668\u521b\u5efa\u9879\u76ee\u7684\u7f3a\u70b9 python\u5341\u5206\u4f9d\u8d56\u5916\u90e8\u7684\u6a21\u5757\uff08site-packeges\uff09 \u8fd9\u4e9b\u6a21\u5757\u4f1a\u5b58\u50a8\u5728\u7cfb\u7edf\u89e3\u91ca\u5668\u6587\u4ef6\u5939\u4e2d\u7684 site-packages \u4e2d \u5982\u679c\u6240\u6709\u7684\u9879\u76ee\uff08\u5728\u8fdb\u884c\u4e00\u4e9b\u590d\u6742\u9879\u76ee\u65f6\uff09\u90fd\u7528\u540c\u4e00\u4e2a\u7cfb\u7edf\u89e3\u91ca\u5668\uff0c\u4f1a\u6709\u5404\u79cd\u5404\u6837\u7684\u6a21\u5757\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u6df7\u4e71 \u540c\u65f6\uff0c\u4e0d\u540c\u7684\u9879\u76ee\u53ef\u80fd\u9700\u8981\u4e0d\u540c\u7684python\u89e3\u91ca\u5668\u7248\u672c \u6240\u4ee5\uff0c\u66f4\u52a0\u63a8\u8350 \u865a\u62df\u73af\u5883 2.2 \u865a\u62df\u73af\u5883 \u865a\u62df\u73af\u5883\u662f \u57fa\u4e8e\u7cfb\u7edf\u89e3\u91ca\u5668 \u751f\u6210\u7684\u4e00\u4e2a\u72ec\u7acb\u7684\u865a\u62df\u73af\u5883\u89e3\u91ca\u5668\uff0c \u5bf9\u4e8e\u516c\u5171\u7684\u529f\u80fd\uff0c\u865a\u62df\u73af\u5883\u89e3\u91ca\u5668\u4f1a\u7ee7\u627f\u7cfb\u7edf\u89e3\u91ca\u5668\u7684\u529f\u80fd\uff0c\u62d3\u5c55\u51fa\u7684\u529f\u80fd\u548c\u5b89\u88c5\u7684\u6a21\u5757\uff0c\u4f1a\u72ec\u7acb\u5b58\u50a8\u5728\u865a\u62df\u73af\u5883\u6240\u5728\u7684\u6587\u4ef6\u5939\u4e2d \u4e00\u822c\u865a\u62df\u73af\u5883\u7684\u4f4d\u7f6e\u4f1a\u9009\u62e9\u5728\u9879\u76ee\u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2a\u9690\u85cf\u6587\u4ef6\u5939\uff08.env\uff09\u6765\u5b58\u653e\u865a\u62df\u73af\u5883 ok\uff0c\u505a\u5b8c\u8fd9\u4e9b\u5c31\u5b8c\u4e8b\u5927\u5409\u4e86\uff0c\u606d\u559c\ud83c\udf88 3.\u65b0\u5efa\u6587\u4ef6\u5939\u4e0e\u6587\u4ef6 4.\u4e00\u4e9b\u5feb\u6377\u952e\u7684\u914d\u7f6e \u7f29\u653e\u4ee3\u7801\u533a\u57df\u7684\u5927\u5c0f \u200b \u8fdb\u5165\u8bbe\u7f6e\uff0c\u641c\u7d22increase\uff0c\u8bbe\u7f6e\u589e\u5927\u5b57\u4f53\u7684\u5feb\u6377\u952e \u6211\u4e00\u822c\u8bbe\u7f6e\u4e3a\u6309\u4f4fcontrl \u7136\u540e\u6eda\u52a8\u9f20\u6807\u6eda\u8f6e\u6765\u589e\u5927\u5b57\u4f53 \u4e4b\u540e\u540c\u7406\u641c\u7d22decrease\uff0c\u8bbe\u7f6e\u51cf\u5c0f\u5b57\u4f53\u7684\u5feb\u6377\u952e \u5982\u4f55\u8ba9\u4ee3\u7801\u66f4\u5de5\u6574\uff1f \u627e\u5230\u9876\u90e8\u680f refactor -> reformat code 5.more \u8fd8\u6709\u4e00\u4e9b\u64cd\u4f5c\uff0c\u4e0d\u592a\u597d\u7528\u8bed\u8a00\u63cf\u8ff0\uff0c\u5982\u679c\u54ea\u6b21\u5f00\u4f1a\u6216\u8005\u4ea4\u6d41\u53ef\u4ee5\u518d\u804a","title":"8.Pycharm \u5e2e\u52a9"},{"location":"Dev_documents/pycharm_ad/pc_help/#8pycharm","text":"","title":"8.Pycharm \u5e2e\u52a9"},{"location":"Dev_documents/pycharm_ad/pc_help/#_1","text":"\u5173\u4e8e\u4f60\u7684\u9879\u76ee\u5e94\u8be5\u5b58\u50a8\u5728\u4ec0\u4e48\u5730\u65b9 \u8fd9\u662f\u6211\u7684\u4e60\u60ef\uff1a \u6240\u6709\u7684\u9879\u76ee\u90fd\u5b58\u50a8\u5728PycharmProjects\u6587\u4ef6\u5939\u4e0b \uff08\u4f60\u53ef\u4ee5\u5728\u4e00\u4e2a\u81ea\u5df1\u5e38\u7528\u7684\u4f4d\u7f6e\u65b0\u5efa\u4e00\u4e2a\u540d\u4e3a PycharmProjects \u7684\u6587\u4ef6\u5939\uff09 \u8fd9\u662f\u6211\u7535\u8111\u4e2d\u7684PycharmProjects\u6587\u4ef6\u5939 \u91cc\u9762\u6709\u5f88\u591a\u9879\u76ee","title":"\u524d\u620f"},{"location":"Dev_documents/pycharm_ad/pc_help/#1","text":"\u9009\u62e9\u65b0\u5efa\u7eaf\u51c0\u7684Python\u9879\u76ee\uff0c\u653e\u5728PycharmProjects\u6587\u4ef6\u5939\u4e0b","title":"1.\u65b0\u5efa\u9879\u76ee"},{"location":"Dev_documents/pycharm_ad/pc_help/#2python","text":"","title":"2.Python\u89e3\u91ca\u5668\u7684\u914d\u7f6e"},{"location":"Dev_documents/pycharm_ad/pc_help/#21","text":"\u7cfb\u7edf\u89e3\u91ca\u5668 \u662f\u7535\u8111\u4e0a\u5b89\u88c5\u7684python\u89e3\u91ca\u5668\uff0c\u53ef\u4ee5\u901a\u8fc7\u627e\u5230python\u89e3\u91ca\u5668\u7684\u8def\u5f84\u8fdb\u884c\u914d\u7f6e \u6211\u7684\u7535\u8111\u4e0a\u6709\u4e24\u4e2a\u7cfb\u7edf\u89e3\u91ca\u5668 \u5206\u522b\u662fpython3.9\u548cpython3.10","title":"2.1 \u57fa\u4e8e\u7cfb\u7edf\u89e3\u91ca\u5668\u521b\u5efa"},{"location":"Dev_documents/pycharm_ad/pc_help/#_2","text":"python\u5341\u5206\u4f9d\u8d56\u5916\u90e8\u7684\u6a21\u5757\uff08site-packeges\uff09 \u8fd9\u4e9b\u6a21\u5757\u4f1a\u5b58\u50a8\u5728\u7cfb\u7edf\u89e3\u91ca\u5668\u6587\u4ef6\u5939\u4e2d\u7684 site-packages \u4e2d \u5982\u679c\u6240\u6709\u7684\u9879\u76ee\uff08\u5728\u8fdb\u884c\u4e00\u4e9b\u590d\u6742\u9879\u76ee\u65f6\uff09\u90fd\u7528\u540c\u4e00\u4e2a\u7cfb\u7edf\u89e3\u91ca\u5668\uff0c\u4f1a\u6709\u5404\u79cd\u5404\u6837\u7684\u6a21\u5757\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u6df7\u4e71 \u540c\u65f6\uff0c\u4e0d\u540c\u7684\u9879\u76ee\u53ef\u80fd\u9700\u8981\u4e0d\u540c\u7684python\u89e3\u91ca\u5668\u7248\u672c \u6240\u4ee5\uff0c\u66f4\u52a0\u63a8\u8350 \u865a\u62df\u73af\u5883","title":"\u57fa\u4e8e\u7cfb\u7edf\u89e3\u91ca\u5668\u521b\u5efa\u9879\u76ee\u7684\u7f3a\u70b9"},{"location":"Dev_documents/pycharm_ad/pc_help/#22","text":"\u865a\u62df\u73af\u5883\u662f \u57fa\u4e8e\u7cfb\u7edf\u89e3\u91ca\u5668 \u751f\u6210\u7684\u4e00\u4e2a\u72ec\u7acb\u7684\u865a\u62df\u73af\u5883\u89e3\u91ca\u5668\uff0c \u5bf9\u4e8e\u516c\u5171\u7684\u529f\u80fd\uff0c\u865a\u62df\u73af\u5883\u89e3\u91ca\u5668\u4f1a\u7ee7\u627f\u7cfb\u7edf\u89e3\u91ca\u5668\u7684\u529f\u80fd\uff0c\u62d3\u5c55\u51fa\u7684\u529f\u80fd\u548c\u5b89\u88c5\u7684\u6a21\u5757\uff0c\u4f1a\u72ec\u7acb\u5b58\u50a8\u5728\u865a\u62df\u73af\u5883\u6240\u5728\u7684\u6587\u4ef6\u5939\u4e2d \u4e00\u822c\u865a\u62df\u73af\u5883\u7684\u4f4d\u7f6e\u4f1a\u9009\u62e9\u5728\u9879\u76ee\u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2a\u9690\u85cf\u6587\u4ef6\u5939\uff08.env\uff09\u6765\u5b58\u653e\u865a\u62df\u73af\u5883 ok\uff0c\u505a\u5b8c\u8fd9\u4e9b\u5c31\u5b8c\u4e8b\u5927\u5409\u4e86\uff0c\u606d\u559c\ud83c\udf88","title":"2.2 \u865a\u62df\u73af\u5883"},{"location":"Dev_documents/pycharm_ad/pc_help/#3","text":"","title":"3.\u65b0\u5efa\u6587\u4ef6\u5939\u4e0e\u6587\u4ef6"},{"location":"Dev_documents/pycharm_ad/pc_help/#4","text":"\u7f29\u653e\u4ee3\u7801\u533a\u57df\u7684\u5927\u5c0f \u200b \u8fdb\u5165\u8bbe\u7f6e\uff0c\u641c\u7d22increase\uff0c\u8bbe\u7f6e\u589e\u5927\u5b57\u4f53\u7684\u5feb\u6377\u952e \u6211\u4e00\u822c\u8bbe\u7f6e\u4e3a\u6309\u4f4fcontrl \u7136\u540e\u6eda\u52a8\u9f20\u6807\u6eda\u8f6e\u6765\u589e\u5927\u5b57\u4f53 \u4e4b\u540e\u540c\u7406\u641c\u7d22decrease\uff0c\u8bbe\u7f6e\u51cf\u5c0f\u5b57\u4f53\u7684\u5feb\u6377\u952e \u5982\u4f55\u8ba9\u4ee3\u7801\u66f4\u5de5\u6574\uff1f \u627e\u5230\u9876\u90e8\u680f refactor -> reformat code","title":"4.\u4e00\u4e9b\u5feb\u6377\u952e\u7684\u914d\u7f6e"},{"location":"Dev_documents/pycharm_ad/pc_help/#5more","text":"\u8fd8\u6709\u4e00\u4e9b\u64cd\u4f5c\uff0c\u4e0d\u592a\u597d\u7528\u8bed\u8a00\u63cf\u8ff0\uff0c\u5982\u679c\u54ea\u6b21\u5f00\u4f1a\u6216\u8005\u4ea4\u6d41\u53ef\u4ee5\u518d\u804a","title":"5.more"},{"location":"Dev_documents/request_process/%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82%E6%B5%81%E7%A8%8B/","text":"2.\u7f51\u7edc\u8bf7\u6c42\u6d41\u7a0b 1.\u524d\u620f IPV4 \u5730\u5740 \u63a5\u5165\u4e92\u8054\u7f51\u7684\u8bbe\u5907\uff0c\u9700\u8981\u4e00\u4e2aIP\u6765\u4ee3\u6307\u6b21\u7535\u8111 \u5185\u7f51IP & \u516c\u7f51IP \u4e4b\u524d\u6211\u4eec\u81ea\u5df1\u5728\u4e00\u4e2a\u5c40\u57df\u7f51\u5185\u4e3a\u7535\u8111\u5206\u914d\u7684IP\u90fd\u79f0\u4e3a \u5185\u7f51IP \uff0c\u57fa\u4e8e\u5185\u7f51IP\u53ef\u4ee5\u5728\u4e00\u4e2a\u5c40\u57df\u7f51\u5185\u8fdb\u884c\u76f8\u4e92\u901a\u4fe1\uff08\u4e5f\u9700\u8981\u76f8\u5173\u7684\u914d\u7f6e\uff09\u3002 \u5982\u679c\u60f3\u8981\u901a\u8fc7\u4e92\u8054\u7f51\u8fdb\u884c\u901a\u4fe1\uff0c\u5c31\u5fc5\u987b\u501f\u52a9\u516c\u7f51IP\u3002 \u4e91\u670d\u52a1\u5668 \u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u5916\u7f51IP\u5730\u5740\u8bbf\u95ee \u94fe\u63a5\u4e91\u670d\u52a1\u5668 \u7aef\u53e3 \u5047\u8bbe\uff0c\u4f60\u5728\u817e\u8baf\u79df\u4e86\u4e00\u53f0\u4e91\u670d\u52a1\u5668\uff08\u5916\u7f51IP:123.206.15.88\uff09\uff0c\u7136\u540e\u53c8\u5f00\u53d1\u4e86 2 \u4e2a\u7f51\u7ad9\u8fd0\u884c\u5728\u670d\u52a1\u5668\u4e0a\u3002 \u7f51\u7ad9A\uff1a\u4f7f\u75288001\u7aef\u53e3\uff0c\u90a3\u4e48\u7528\u6237\u5728\u81ea\u5df1\u7535\u8111\u4e0a\u6216\u624b\u673a\u4e0a\u8bbf\u95ee\u65f6\u6307\u5b9a IP\u548c\u7aef\u53e3 \u5373\u53ef\uff0c\u5982\uff1a 123.206.15.88:8001 \u7f51\u7ad9B\uff1a\u4f7f\u75288002\u7aef\u53e3\uff0c\u90a3\u4e48\u7528\u6237\u5728\u81ea\u5df1\u7535\u8111\u4e0a\u6216\u624b\u673a\u4e0a\u8bbf\u95ee\u65f6\u6307\u5b9a IP\u548c\u7aef\u53e3 \u5373\u53ef\uff0c\u5982\uff1a 123.206.15.88:8002 \u6bcf\u4e2a\u7aef\u53e3\u4ee3\u8868\u4e00\u4e2a\u8fdb\u7a0b \u57df\u540d \u8ba9\u57df\u540d\u548cIP\u521b\u5efa\u5bf9\u5e94\u5173\u7cfb\uff0c\u7528\u6237\u53ea\u9700\u8981\u8bb0\u4f4f\u57df\u540d\u5c31\u53ef\u4ee5\u4e86 www.baidu.com --> 110.242.68.3 www.taobao.com --> 121.18.239.232 ... UDP & TCP \u94fe\u63a5 TCP \uff08Transmission Control Protocol\uff0c\u4f20\u8f93\u63a7\u5236\u534f\u8bae\uff09\u662f\u9762\u5411\u8fde\u63a5\u7684\u534f\u8bae\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u6536\u53d1\u6570\u636e\u524d\uff0c\u5fc5\u987b\u548c\u5bf9\u65b9\u5efa\u7acb\u53ef\u9760\u7684\u8fde\u63a5\uff0c\u7136\u540e\u518d\u8fdb\u884c\u6536\u53d1\u6570\u636e\u3002 UDP \u200b \u662f\u2f00\u4e2a\u2f46\u8fde\u63a5\u7684\u7b80\u5355\u7684\u2faf\u5411\u6570\u636e\u62a5\u7684\u4f20\u8f93\u5c42\u534f\u8bae\u3002 UDP\u4e0d\u63d0\u4f9b\u53ef\u9760\u6027\uff0c \u5b83\u53ea\u662f\u628a\u5e94\u2f64\u7a0b\u5e8f\u4f20\u7ed9IP\u5c42\u7684\u6570\u636e\u62a5\u53d1\u9001\u51fa\u53bb\uff0c \u4f46\u662f\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u5b83\u4eec\u80fd\u5230\u8fbe\u2f6c\u7684\u5730\u3002 \u7531\u4e8eUDP\u5728\u4f20\u8f93\u6570\u636e\u62a5\u524d\u4e0d\u2f64\u5728\u5ba2\u6237\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u5efa\u2f74\u2f00\u4e2a\u8fde\u63a5\uff0c \u4e14\u6ca1\u6709\u8d85\u65f6\u91cd\u53d1\u7b49\u673a\u5236\uff0c \u6545\u2f7d\u4f20\u8f93\u901f\u5ea6\u5f88\u5feb\u3002 2.\u7f51\u7edc\u7f16\u7a0b bs\u67b6\u6784 Browser / server CS\u67b6\u6784 Client / server http http\u534f\u8bae\u7279\u70b9\uff1a\u65e0\u72b6\u6001\u7684\u77ed\u8fde\u63a5\u3002 \u4e00\u6b21\u8bf7\u6c42\u548c\u4e00\u6b21\u54cd\u5e94\u540e\uff0c\u65ad\u5f00\u8fde\u63a5 cookie session GET/POST \u5728\u6d4f\u89c8\u5668\u4e2d\u63d0\u4ea4\u6570\u636e \u4e3b\u8981\u7684\u533a\u522b\u5c31\u662f\u4ed6\u4eec\u5b58\u653e\u53c2\u6570\u7684\u4f4d\u7f6e GET POST form\u8868\u5355\uff0c \u4f60\u770b\u4e0d\u5230 \u8bf7\u6c42\u5934 \u6d4f\u89c8\u5668\u672c\u8d28\u4e0a\u53d1\u9001\u8bf7\u6c42\u65f6\uff0c\u5305\u542b\u8bf7\u6c42\u5934\u548c\u8bf7\u6c42\u4f53\u3002 - GET\u8bf7\u6c42 - \u53ea\u6709\u8bf7\u6c42\u5934 + \u6ca1\u6709\u8bf7\u6c42\u4f53 - \u8bf7\u6c42\u5934\u4e4b\u95f4\u7528 \\r\\n - \u8bf7\u6c42\u5934\u548c\u8bf7\u6c42\u4f53\u4e4b\u95f4\u7528 \\r\\n\\r\\n - POST\u8bf7\u6c42 - \u53ea\u6709\u8bf7\u6c42\u5934 + \u6709\u8bf7\u6c42\u4f53 - \u8bf7\u6c42\u5934\u4e4b\u95f4\u7528 \\r\\n - \u8bf7\u6c42\u5934\u548c\u8bf7\u6c42\u4f53\u4e4b\u95f4\u7528 \\r\\n\\r\\n 3.web\u6846\u67b6","title":"2.\u7f51\u7edc\u8bf7\u6c42\u6d41\u7a0b"},{"location":"Dev_documents/request_process/%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82%E6%B5%81%E7%A8%8B/#2","text":"","title":"2.\u7f51\u7edc\u8bf7\u6c42\u6d41\u7a0b"},{"location":"Dev_documents/request_process/%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82%E6%B5%81%E7%A8%8B/#1","text":"IPV4 \u5730\u5740 \u63a5\u5165\u4e92\u8054\u7f51\u7684\u8bbe\u5907\uff0c\u9700\u8981\u4e00\u4e2aIP\u6765\u4ee3\u6307\u6b21\u7535\u8111 \u5185\u7f51IP & \u516c\u7f51IP \u4e4b\u524d\u6211\u4eec\u81ea\u5df1\u5728\u4e00\u4e2a\u5c40\u57df\u7f51\u5185\u4e3a\u7535\u8111\u5206\u914d\u7684IP\u90fd\u79f0\u4e3a \u5185\u7f51IP \uff0c\u57fa\u4e8e\u5185\u7f51IP\u53ef\u4ee5\u5728\u4e00\u4e2a\u5c40\u57df\u7f51\u5185\u8fdb\u884c\u76f8\u4e92\u901a\u4fe1\uff08\u4e5f\u9700\u8981\u76f8\u5173\u7684\u914d\u7f6e\uff09\u3002 \u5982\u679c\u60f3\u8981\u901a\u8fc7\u4e92\u8054\u7f51\u8fdb\u884c\u901a\u4fe1\uff0c\u5c31\u5fc5\u987b\u501f\u52a9\u516c\u7f51IP\u3002 \u4e91\u670d\u52a1\u5668 \u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u5916\u7f51IP\u5730\u5740\u8bbf\u95ee \u94fe\u63a5\u4e91\u670d\u52a1\u5668 \u7aef\u53e3 \u5047\u8bbe\uff0c\u4f60\u5728\u817e\u8baf\u79df\u4e86\u4e00\u53f0\u4e91\u670d\u52a1\u5668\uff08\u5916\u7f51IP:123.206.15.88\uff09\uff0c\u7136\u540e\u53c8\u5f00\u53d1\u4e86 2 \u4e2a\u7f51\u7ad9\u8fd0\u884c\u5728\u670d\u52a1\u5668\u4e0a\u3002 \u7f51\u7ad9A\uff1a\u4f7f\u75288001\u7aef\u53e3\uff0c\u90a3\u4e48\u7528\u6237\u5728\u81ea\u5df1\u7535\u8111\u4e0a\u6216\u624b\u673a\u4e0a\u8bbf\u95ee\u65f6\u6307\u5b9a IP\u548c\u7aef\u53e3 \u5373\u53ef\uff0c\u5982\uff1a 123.206.15.88:8001 \u7f51\u7ad9B\uff1a\u4f7f\u75288002\u7aef\u53e3\uff0c\u90a3\u4e48\u7528\u6237\u5728\u81ea\u5df1\u7535\u8111\u4e0a\u6216\u624b\u673a\u4e0a\u8bbf\u95ee\u65f6\u6307\u5b9a IP\u548c\u7aef\u53e3 \u5373\u53ef\uff0c\u5982\uff1a 123.206.15.88:8002 \u6bcf\u4e2a\u7aef\u53e3\u4ee3\u8868\u4e00\u4e2a\u8fdb\u7a0b \u57df\u540d \u8ba9\u57df\u540d\u548cIP\u521b\u5efa\u5bf9\u5e94\u5173\u7cfb\uff0c\u7528\u6237\u53ea\u9700\u8981\u8bb0\u4f4f\u57df\u540d\u5c31\u53ef\u4ee5\u4e86 www.baidu.com --> 110.242.68.3 www.taobao.com --> 121.18.239.232 ... UDP & TCP \u94fe\u63a5 TCP \uff08Transmission Control Protocol\uff0c\u4f20\u8f93\u63a7\u5236\u534f\u8bae\uff09\u662f\u9762\u5411\u8fde\u63a5\u7684\u534f\u8bae\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u6536\u53d1\u6570\u636e\u524d\uff0c\u5fc5\u987b\u548c\u5bf9\u65b9\u5efa\u7acb\u53ef\u9760\u7684\u8fde\u63a5\uff0c\u7136\u540e\u518d\u8fdb\u884c\u6536\u53d1\u6570\u636e\u3002 UDP \u200b \u662f\u2f00\u4e2a\u2f46\u8fde\u63a5\u7684\u7b80\u5355\u7684\u2faf\u5411\u6570\u636e\u62a5\u7684\u4f20\u8f93\u5c42\u534f\u8bae\u3002 UDP\u4e0d\u63d0\u4f9b\u53ef\u9760\u6027\uff0c \u5b83\u53ea\u662f\u628a\u5e94\u2f64\u7a0b\u5e8f\u4f20\u7ed9IP\u5c42\u7684\u6570\u636e\u62a5\u53d1\u9001\u51fa\u53bb\uff0c \u4f46\u662f\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u5b83\u4eec\u80fd\u5230\u8fbe\u2f6c\u7684\u5730\u3002 \u7531\u4e8eUDP\u5728\u4f20\u8f93\u6570\u636e\u62a5\u524d\u4e0d\u2f64\u5728\u5ba2\u6237\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u5efa\u2f74\u2f00\u4e2a\u8fde\u63a5\uff0c \u4e14\u6ca1\u6709\u8d85\u65f6\u91cd\u53d1\u7b49\u673a\u5236\uff0c \u6545\u2f7d\u4f20\u8f93\u901f\u5ea6\u5f88\u5feb\u3002","title":"1.\u524d\u620f"},{"location":"Dev_documents/request_process/%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82%E6%B5%81%E7%A8%8B/#2_1","text":"bs\u67b6\u6784 Browser / server CS\u67b6\u6784 Client / server http http\u534f\u8bae\u7279\u70b9\uff1a\u65e0\u72b6\u6001\u7684\u77ed\u8fde\u63a5\u3002 \u4e00\u6b21\u8bf7\u6c42\u548c\u4e00\u6b21\u54cd\u5e94\u540e\uff0c\u65ad\u5f00\u8fde\u63a5 cookie session GET/POST \u5728\u6d4f\u89c8\u5668\u4e2d\u63d0\u4ea4\u6570\u636e \u4e3b\u8981\u7684\u533a\u522b\u5c31\u662f\u4ed6\u4eec\u5b58\u653e\u53c2\u6570\u7684\u4f4d\u7f6e GET POST form\u8868\u5355\uff0c \u4f60\u770b\u4e0d\u5230 \u8bf7\u6c42\u5934 \u6d4f\u89c8\u5668\u672c\u8d28\u4e0a\u53d1\u9001\u8bf7\u6c42\u65f6\uff0c\u5305\u542b\u8bf7\u6c42\u5934\u548c\u8bf7\u6c42\u4f53\u3002 - GET\u8bf7\u6c42 - \u53ea\u6709\u8bf7\u6c42\u5934 + \u6ca1\u6709\u8bf7\u6c42\u4f53 - \u8bf7\u6c42\u5934\u4e4b\u95f4\u7528 \\r\\n - \u8bf7\u6c42\u5934\u548c\u8bf7\u6c42\u4f53\u4e4b\u95f4\u7528 \\r\\n\\r\\n - POST\u8bf7\u6c42 - \u53ea\u6709\u8bf7\u6c42\u5934 + \u6709\u8bf7\u6c42\u4f53 - \u8bf7\u6c42\u5934\u4e4b\u95f4\u7528 \\r\\n - \u8bf7\u6c42\u5934\u548c\u8bf7\u6c42\u4f53\u4e4b\u95f4\u7528 \\r\\n\\r\\n","title":"2.\u7f51\u7edc\u7f16\u7a0b"},{"location":"Dev_documents/request_process/%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82%E6%B5%81%E7%A8%8B/#3web","text":"","title":"3.web\u6846\u67b6"},{"location":"Django/hello/","text":"\u8d70\u4e0adjango\u5f00\u53d1\u7684\u8def","title":"Hello"},{"location":"Django/hello/#django","text":"","title":"\u8d70\u4e0adjango\u5f00\u53d1\u7684\u8def"},{"location":"Django/django_Jsonresponse/django_Jsonresponse/","text":"11.JsonResponse\u5bf9\u8c61 \u5b98\u65b9\u6587\u6863\ud83c\udf88","title":"11.JsonResponse\u5bf9\u8c61"},{"location":"Django/django_Jsonresponse/django_Jsonresponse/#11jsonresponse","text":"\u5b98\u65b9\u6587\u6863\ud83c\udf88","title":"11.JsonResponse\u5bf9\u8c61"},{"location":"Django/django_QueryDict/django_QueryDict/","text":"12.DjangoQueryDict\u5bf9\u8c61 \u5b98\u65b9\u6587\u6863\ud83c\udf88 \u5728 HttpRequest \u5bf9\u8c61\u4e2d,\u5c5e\u6027 GET \u548c POST \u5f97\u5230\u7684\u90fd\u662f django.http.QueryDict \u6240\u521b\u5efa\u7684\u5b9e\u4f8b\u3002 \u8fd9\u662f\u4e00\u4e2a django \u81ea\u5b9a\u4e49\u7684\u7c7b\u4f3c\u5b57\u5178\u7684\u7c7b\uff0c\u7528\u6765\u5904\u7406\u540c\u4e00\u4e2a\u952e\u5e26\u591a\u4e2a\u503c\u7684\u60c5\u51b5\u3002 def welcome(request): # current_name = request.resolver_match.url_name print(type(request.GET),request.GET) <class 'django.http.request.QueryDict'> <QueryDict: {}> [13/Sep/2022 01:26:20] \"GET /login/ HTTP/1.1\" 200 133 QueryDict\u7ee7\u627fPython \u7684Dict\uff0c\u62d3\u5c55\u4e86Python\u5b57\u5178\u7684\u4e00\u4e9b\u529f\u80fd \u5728 python \u539f\u59cb\u7684\u5b57\u5178\u4e2d\uff0c\u5f53\u4e00\u4e2a\u952e\u51fa\u73b0\u591a\u4e2a\u503c\u7684\u65f6\u5019\u4f1a\u53d1\u751f\u51b2\u7a81\uff0c\u53ea\u4fdd\u7559\u6700\u540e\u4e00\u4e2a\u503c\u3002 \u800c\u5728 HTML \u8868\u5355\u4e2d\uff0c\u901a\u5e38\u4f1a\u53d1\u751f\u4e00\u4e2a\u952e\u6709\u591a\u4e2a\u503c\u7684\u60c5\u51b5\uff0c\u4f8b\u5982 <select multiple> \uff08\u591a\u9009\u6846\uff09\u5c31\u662f\u4e00\u4e2a\u5f88\u5e38\u89c1\u60c5\u51b5\u3002 1.QueryDict. __init__ (query_string=None,mutable=False,encoding=None) \u8fd9\u662f\u4e00\u4e2a\u6784\u9020\u51fd\u6570\uff0c\u5176\u4e2d query_string \u9700\u8981\u4e00\u4e2a\u5b57\u7b26\u4e32 QueryDict\u6e90\u7801 \u5176\u4e2d\u7684init\u521d\u59cb\u5316\u65b9\u6cd5 def __init__(self, query_string=None, mutable=False, encoding=None): super().__init__() self.encoding = encoding or settings.DEFAULT_CHARSET query_string = query_string or '' parse_qsl_kwargs = { 'keep_blank_values': True, 'encoding': self.encoding, 'max_num_fields': settings.DATA_UPLOAD_MAX_NUMBER_FIELDS, } if isinstance(query_string, bytes): # query_string normally contains URL-encoded data, a subset of ASCII. try: query_string = query_string.decode(self.encoding) except UnicodeDecodeError: # ... but some user agents are misbehaving :-( query_string = query_string.decode('iso-8859-1') try: for key, value in parse_qsl(query_string, **parse_qsl_kwargs): self.appendlist(key, value) except ValueError as e: # ValueError can also be raised if the strict_parsing argument to # parse_qsl() is True. As that is not used by Django, assume that # the exception was raised by exceeding the value of max_num_fields # instead of fragile checks of exception message strings. raise TooManyFieldsSent( 'The number of GET/POST parameters exceeded ' 'settings.DATA_UPLOAD_MAX_NUMBER_FIELDS.' ) from e self._mutable = mutable 2.QueryDict. __getitem__ (key) \u8fd4\u56de\u7ed9\u51fa\u7684key\u7684 \u503c \uff0c\u5982\u679c\u5177\u6709\u591a\u4e2a\u503c\uff0c\u5219getitem\u8fd4\u56de\u6700\u540e\uff08\u6700\u65b0\uff09\u7684\u503c\uff0c key\u4e0d\u5b58\u5728\uff0craise django.utils.datastructures.MultiValueDictKeyError Python KeyError\u7684\u5b50\u7c7b\uff0c\u6240\u4ee5\u53ef\u4ee5\u6355\u83b7 KeyError 3.QueryDict. __setitem__ (key,value) \u8bbe\u7f6e\u7ed9\u51fa\u7684key\u7684\u503c\u4e3avalue\uff08\u4e00\u4e2a\u5217\u8868\uff0c\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff09 4.QueryDict.contains(key) \u5982\u679ckey\u5b58\u5728\uff0c\u8fd4\u56deTrue 5.QueryDict.get(key,default) \u4e0egetitem\u7c7b\u4f3c\uff0c\u4e0d\u540c\u70b9\u662fkey\u4e0d\u5b58\u5728\u65f6\uff0c\u8fd4\u56de\u4e00\u4e2a\u9ed8\u8ba4\u503c 6.QueryDict.setdefault(key,default) \u7c7b\u4f3c\u6807\u51c6\u5b57\u5178\u7684 setdefault() \u65b9\u6cd5\uff0c\u53ea\u662f\u5b83\u5728\u5185\u90e8\u4f7f\u7528\u7684\u662f __setitem__() \u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53key\u5df2\u7ecf\u5b58\u5728\u65f6\uff0c\u8fd4\u56de\u5176\u503c\uff0ckey\u4e0d\u5b58\u5728\u65f6\uff0c\u8fd4\u56dedefault\uff0c\u540c\u65f6\u6dfb\u52a0 key \u548c default\u5230\u5bf9\u8c61\u4e2d\u3002 7.QueryDict.update(other_dict) \u63a5\u53d7\u4e00\u4e2aQueryDict\u6216\u6807\u51c6python\u5b57\u5178\uff0c\u7c7b\u4f3c\u6807\u51c6\u5b57\u5178\u7684update()\u65b9\u6cd5 \u5b83\u9644\u52a0\u5230\u5f53\u524d\u5b57\u5178\u9879\u7684\u540e\u9762 8.QueryDict.items() \u7c7b\u4f3c\u6807\u51c6\u5b57\u5178\u7684 items() \u65b9\u6cd5\uff0c\u8fd4\u56de\u4e00\u4e2a\u7531\u952e\u503c\u7ec4\u6210\u7684\u5143\u7956\u7684\u5217\u8868\u3002\u4f46\u662f\u5b83\u4f7f\u7528\u7684\u662f\u548c __getitem__ \u4e00\u6837\u8fd4\u56de\u6700\u65b0\u7684\u503c\u7684\u903b\u8f91\u3002 \u4f8b\u5982\uff1a >>> q = QueryDict('a=1&a=2&a=3') >>> q.items() [('a', '3')] 9.QueryDict.iteritems() \u7c7b\u4f3c\u6807\u51c6\u5b57\u5178\u7684 iteritems() \u65b9\u6cd5\uff0c\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5bf9\u8c61\u3002\u7c7b\u4f3c QueryDict.items() \uff0c\u5b83\u4f7f\u7528\u7684\u662f\u548c QueryDict.__getitem__() \u4e00\u6837\u7684\u8fd4\u56de\u6700\u65b0\u7684\u503c\u7684\u903b\u8f91\u3002 10.QueryDict.iterlists() \u7c7b\u4f3c QueryDict.iteritems() \uff0c\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u952e\u503c\u5bf9\u7684\u5143\u7956(key, value)\u8fed\u4ee3\u5bf9\u8c61 \uff0cvalue \u662f\u4e00\u4e2a\u5305\u62ec\u6240\u6709 key \u7684\u503c\u7684\u5217\u8868\u3002 11.QueryDict.values() \u7c7b\u4f3c\u6807\u51c6\u5b57\u5178\u7684 values() \u65b9\u6cd5\uff0c\u4f46\u662f\u5b83\u4f7f\u7528\u7684\u662f\u548c __getitem__ \u4e00\u6837\u8fd4\u56de\u6700\u65b0\u7684\u503c\u7684\u903b\u8f91\u3002\u4e5f\u5c31\u662f\u8fd4\u56de\u4e00\u4e2a\u6240\u6709\u952e\u5bf9\u5e94\u7684\u6700\u65b0\u503c\u7684\u5217\u8868\u3002 \u4f8b\u5982\uff1a >>> q = QueryDict('a=1&a=2&a=3') >>> q.values() ['3'] 12.QueryDict.itervalues() \u7c7b\u4f3c QueryDict.values() \uff0c\u53ea\u662f\u5b83\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u8fed\u4ee3\u5668\u3002 13.QueryDict.copy() \u8fd4\u56de\u5bf9\u8c61\u7684\u526f\u672c\uff0c\u4f7f\u7528Python \u6807\u51c6\u5e93\u4e2d\u7684 copy.deepcopy() \u3002\u6b64\u526f\u672c\u662f\u53ef\u53d8\u7684\u5373\u4f7f\u539f\u59cb\u5bf9\u8c61\u662f\u4e0d\u53ef\u53d8\u7684\u3002 14.QueryDict.getlist(key, default) \u4ee5Python \u5217\u8868\u5f62\u5f0f\u8fd4\u56de\u6240\u8bf7\u6c42\u7684\u952e\u7684\u6570\u636e\u3002\u5982\u679c\u952e\u4e0d\u5b58\u5728\u5e76\u4e14\u6ca1\u6709\u63d0\u4f9b\u9ed8\u8ba4\u503c\uff0c\u5219\u8fd4\u56de\u7a7a\u5217\u8868\u3002\u5b83\u4fdd\u8bc1\u8fd4\u56de\u7684\u662f\u67d0\u79cd\u7c7b\u578b\u7684\u5217\u8868\uff0c\u9664\u975e\u9ed8\u8ba4\u503c\u4e0d\u662f\u5217\u8868\u3002 15.QueryDict.setlist(key, list_) \u4e3a\u7ed9\u5b9a\u7684\u952e\u8bbe\u7f6e list_ \uff08\u4e0e __setitem__() \u4e0d\u540c)\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u591a\u5143\u7d20\u7684\u5217\u8868\u3002 16.QueryDict.appendlist(key, item) \u5c06\u9879\u8ffd\u52a0\u5230\u5185\u90e8\u4e0e\u952e\u76f8\u5173\u8054\u7684\u5217\u8868\u4e2d\u3002 17.QueryDict.setlistdefault(key, default_list) \u7c7b\u4f3c setdefault \uff0c\u9664\u4e86\u5b83\u63a5\u53d7\u4e00\u4e2a\u5217\u8868\u800c\u4e0d\u662f\u5355\u4e2a\u503c\u3002 18.QueryDict.lists() \u7c7b\u4f3c items \uff0c\u53ea\u662f\u5b83\u5c06\u5b57\u5178\u4e2d\u7684\u6bcf\u4e2a\u6210\u5458\u4f5c\u4e3a\u5217\u8868\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\uff0c\u90fd\u662f\u7531\u952e\u548c\u5bf9\u5e94\u7684\u503c\u5217\u8868\u7ec4\u6210\u7684\u4e8c\u5143\u5143\u7956\u3002 \u4f8b\u5982\uff1a >>> q = QueryDict('a=1&a=2&a=3') >>> q.lists() [('a', ['1', '2', '3'])] 19.QueryDict.pop(key) \u8fd4\u56de\u7ed9\u5b9a\u952e\u7684\u503c\u7684 \u5217\u8868 \uff0c\u5e76\u4ece\u5b57\u5178\u4e2d\u79fb\u9664\u5b83\u4eec\u3002\u5982\u679c\u952e\u4e0d\u5b58\u5728\uff0c\u5c06\u5f15\u53d1 KeyError \u3002 \u4f8b\u5982 \ufe30 >>> q = QueryDict('a=1&a=2&a=3', mutable=True) >>> q.pop('a') ['1', '2', '3'] 20.QueryDict.popitem() \u5220\u9664\u5b57\u5178 \u4efb\u610f \u4e00\u4e2a\u6210\u5458\uff08\u56e0\u4e3a\u6ca1\u6709\u987a\u5e8f\u7684\u6982\u5ff5\uff09\uff0c\u5e76\u8fd4\u56de\u4e8c\u503c\u5143\u7ec4\uff0c\u5305\u542b\u952e\u548c\u952e\u7684\u6240\u6709\u503c\u7684\u5217\u8868\u3002\u5728\u4e00\u4e2a\u7a7a\u7684\u5b57\u5178\u4e0a\u8c03\u7528\u65f6\u5c06\u5f15\u53d1 KeyError \u3002 \u4f8b\u5982 \ufe30 >>> q = QueryDict('a=1&a=2&a=3', mutable=True) >>> q.popitem() ('a', ['1', '2', '3']) 21.QueryDict.dict() \u8fd4\u56de QueryDict \u7684 dict \u8868\u793a\u5f62\u5f0f\u3002\u5bf9\u4e8e QueryDict \u4e2d\u7684\u6bcf\u4e2a(key, list)\u5bf9 \uff0c dict \u5c06\u6709(key, item) \u5bf9\uff0c\u5176\u4e2ditem \u662f\u5217\u8868\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\uff0c\u4f7f\u7528\u4e0e QueryDict.__getitem__() \u76f8\u540c\u7684\u903b\u8f91\uff0c\u4e5f\u5c31\u662f\u6700\u65b0\u7684\uff1a >>> q = QueryDict('a=1&a=3&a=5') >>> q.dict() {'a': '5'} 22.QueryDict.urlencode([safe]) \u4ece\u6570\u636e\u4e2d\u8fd4\u56de\u67e5\u8be2\u5b57\u7b26\u4e32\u683c\u5f0f\u3002 \u4f8b\u5982\uff1a >>> q = QueryDict('a=2&b=3&b=5') >>> q.urlencode() 'a=2&b=3&b=5' \u53ef\u9009\u5730\uff0curlencode \u53ef\u4ee5\u4f20\u9012\u4e0d\u9700\u8981\u7f16\u7801\u7684\u5b57\u7b26\u3002\uff08\u8fd9\u610f\u5473\u7740\u8981\u8fdb\u884c url \u7f16\u7801\uff09 \u4f8b\u5982\ufe30 >>> q = QueryDict(mutable=True) >>> q['next'] = '/a&b/' >>> q.urlencode(safe='/') 'next=/a%26b/'","title":"12.DjangoQueryDict\u5bf9\u8c61"},{"location":"Django/django_QueryDict/django_QueryDict/#12djangoquerydict","text":"\u5b98\u65b9\u6587\u6863\ud83c\udf88 \u5728 HttpRequest \u5bf9\u8c61\u4e2d,\u5c5e\u6027 GET \u548c POST \u5f97\u5230\u7684\u90fd\u662f django.http.QueryDict \u6240\u521b\u5efa\u7684\u5b9e\u4f8b\u3002 \u8fd9\u662f\u4e00\u4e2a django \u81ea\u5b9a\u4e49\u7684\u7c7b\u4f3c\u5b57\u5178\u7684\u7c7b\uff0c\u7528\u6765\u5904\u7406\u540c\u4e00\u4e2a\u952e\u5e26\u591a\u4e2a\u503c\u7684\u60c5\u51b5\u3002 def welcome(request): # current_name = request.resolver_match.url_name print(type(request.GET),request.GET) <class 'django.http.request.QueryDict'> <QueryDict: {}> [13/Sep/2022 01:26:20] \"GET /login/ HTTP/1.1\" 200 133 QueryDict\u7ee7\u627fPython \u7684Dict\uff0c\u62d3\u5c55\u4e86Python\u5b57\u5178\u7684\u4e00\u4e9b\u529f\u80fd \u5728 python \u539f\u59cb\u7684\u5b57\u5178\u4e2d\uff0c\u5f53\u4e00\u4e2a\u952e\u51fa\u73b0\u591a\u4e2a\u503c\u7684\u65f6\u5019\u4f1a\u53d1\u751f\u51b2\u7a81\uff0c\u53ea\u4fdd\u7559\u6700\u540e\u4e00\u4e2a\u503c\u3002 \u800c\u5728 HTML \u8868\u5355\u4e2d\uff0c\u901a\u5e38\u4f1a\u53d1\u751f\u4e00\u4e2a\u952e\u6709\u591a\u4e2a\u503c\u7684\u60c5\u51b5\uff0c\u4f8b\u5982 <select multiple> \uff08\u591a\u9009\u6846\uff09\u5c31\u662f\u4e00\u4e2a\u5f88\u5e38\u89c1\u60c5\u51b5\u3002","title":"12.DjangoQueryDict\u5bf9\u8c61"},{"location":"Django/django_QueryDict/django_QueryDict/#1querydict__init__query_stringnonemutablefalseencodingnone","text":"\u8fd9\u662f\u4e00\u4e2a\u6784\u9020\u51fd\u6570\uff0c\u5176\u4e2d query_string \u9700\u8981\u4e00\u4e2a\u5b57\u7b26\u4e32 QueryDict\u6e90\u7801 \u5176\u4e2d\u7684init\u521d\u59cb\u5316\u65b9\u6cd5 def __init__(self, query_string=None, mutable=False, encoding=None): super().__init__() self.encoding = encoding or settings.DEFAULT_CHARSET query_string = query_string or '' parse_qsl_kwargs = { 'keep_blank_values': True, 'encoding': self.encoding, 'max_num_fields': settings.DATA_UPLOAD_MAX_NUMBER_FIELDS, } if isinstance(query_string, bytes): # query_string normally contains URL-encoded data, a subset of ASCII. try: query_string = query_string.decode(self.encoding) except UnicodeDecodeError: # ... but some user agents are misbehaving :-( query_string = query_string.decode('iso-8859-1') try: for key, value in parse_qsl(query_string, **parse_qsl_kwargs): self.appendlist(key, value) except ValueError as e: # ValueError can also be raised if the strict_parsing argument to # parse_qsl() is True. As that is not used by Django, assume that # the exception was raised by exceeding the value of max_num_fields # instead of fragile checks of exception message strings. raise TooManyFieldsSent( 'The number of GET/POST parameters exceeded ' 'settings.DATA_UPLOAD_MAX_NUMBER_FIELDS.' ) from e self._mutable = mutable","title":"1.QueryDict.__init__(query_string=None,mutable=False,encoding=None)"},{"location":"Django/django_QueryDict/django_QueryDict/#2querydict__getitem__key","text":"\u8fd4\u56de\u7ed9\u51fa\u7684key\u7684 \u503c \uff0c\u5982\u679c\u5177\u6709\u591a\u4e2a\u503c\uff0c\u5219getitem\u8fd4\u56de\u6700\u540e\uff08\u6700\u65b0\uff09\u7684\u503c\uff0c key\u4e0d\u5b58\u5728\uff0craise django.utils.datastructures.MultiValueDictKeyError Python KeyError\u7684\u5b50\u7c7b\uff0c\u6240\u4ee5\u53ef\u4ee5\u6355\u83b7 KeyError","title":"2.QueryDict.__getitem__(key)"},{"location":"Django/django_QueryDict/django_QueryDict/#3querydict__setitem__keyvalue","text":"\u8bbe\u7f6e\u7ed9\u51fa\u7684key\u7684\u503c\u4e3avalue\uff08\u4e00\u4e2a\u5217\u8868\uff0c\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff09","title":"3.QueryDict.__setitem__(key,value)"},{"location":"Django/django_QueryDict/django_QueryDict/#4querydictcontainskey","text":"\u5982\u679ckey\u5b58\u5728\uff0c\u8fd4\u56deTrue","title":"4.QueryDict.contains(key)"},{"location":"Django/django_QueryDict/django_QueryDict/#5querydictgetkeydefault","text":"\u4e0egetitem\u7c7b\u4f3c\uff0c\u4e0d\u540c\u70b9\u662fkey\u4e0d\u5b58\u5728\u65f6\uff0c\u8fd4\u56de\u4e00\u4e2a\u9ed8\u8ba4\u503c","title":"5.QueryDict.get(key,default)"},{"location":"Django/django_QueryDict/django_QueryDict/#6querydictsetdefaultkeydefault","text":"\u7c7b\u4f3c\u6807\u51c6\u5b57\u5178\u7684 setdefault() \u65b9\u6cd5\uff0c\u53ea\u662f\u5b83\u5728\u5185\u90e8\u4f7f\u7528\u7684\u662f __setitem__() \u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53key\u5df2\u7ecf\u5b58\u5728\u65f6\uff0c\u8fd4\u56de\u5176\u503c\uff0ckey\u4e0d\u5b58\u5728\u65f6\uff0c\u8fd4\u56dedefault\uff0c\u540c\u65f6\u6dfb\u52a0 key \u548c default\u5230\u5bf9\u8c61\u4e2d\u3002","title":"6.QueryDict.setdefault(key,default)"},{"location":"Django/django_QueryDict/django_QueryDict/#7querydictupdateother_dict","text":"\u63a5\u53d7\u4e00\u4e2aQueryDict\u6216\u6807\u51c6python\u5b57\u5178\uff0c\u7c7b\u4f3c\u6807\u51c6\u5b57\u5178\u7684update()\u65b9\u6cd5 \u5b83\u9644\u52a0\u5230\u5f53\u524d\u5b57\u5178\u9879\u7684\u540e\u9762","title":"7.QueryDict.update(other_dict)"},{"location":"Django/django_QueryDict/django_QueryDict/#8querydictitems","text":"\u7c7b\u4f3c\u6807\u51c6\u5b57\u5178\u7684 items() \u65b9\u6cd5\uff0c\u8fd4\u56de\u4e00\u4e2a\u7531\u952e\u503c\u7ec4\u6210\u7684\u5143\u7956\u7684\u5217\u8868\u3002\u4f46\u662f\u5b83\u4f7f\u7528\u7684\u662f\u548c __getitem__ \u4e00\u6837\u8fd4\u56de\u6700\u65b0\u7684\u503c\u7684\u903b\u8f91\u3002 \u4f8b\u5982\uff1a >>> q = QueryDict('a=1&a=2&a=3') >>> q.items() [('a', '3')]","title":"8.QueryDict.items()"},{"location":"Django/django_QueryDict/django_QueryDict/#9querydictiteritems","text":"\u7c7b\u4f3c\u6807\u51c6\u5b57\u5178\u7684 iteritems() \u65b9\u6cd5\uff0c\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5bf9\u8c61\u3002\u7c7b\u4f3c QueryDict.items() \uff0c\u5b83\u4f7f\u7528\u7684\u662f\u548c QueryDict.__getitem__() \u4e00\u6837\u7684\u8fd4\u56de\u6700\u65b0\u7684\u503c\u7684\u903b\u8f91\u3002","title":"9.QueryDict.iteritems()"},{"location":"Django/django_QueryDict/django_QueryDict/#10querydictiterlists","text":"\u7c7b\u4f3c QueryDict.iteritems() \uff0c\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u952e\u503c\u5bf9\u7684\u5143\u7956(key, value)\u8fed\u4ee3\u5bf9\u8c61 \uff0cvalue \u662f\u4e00\u4e2a\u5305\u62ec\u6240\u6709 key \u7684\u503c\u7684\u5217\u8868\u3002","title":"10.QueryDict.iterlists()"},{"location":"Django/django_QueryDict/django_QueryDict/#11querydictvalues","text":"\u7c7b\u4f3c\u6807\u51c6\u5b57\u5178\u7684 values() \u65b9\u6cd5\uff0c\u4f46\u662f\u5b83\u4f7f\u7528\u7684\u662f\u548c __getitem__ \u4e00\u6837\u8fd4\u56de\u6700\u65b0\u7684\u503c\u7684\u903b\u8f91\u3002\u4e5f\u5c31\u662f\u8fd4\u56de\u4e00\u4e2a\u6240\u6709\u952e\u5bf9\u5e94\u7684\u6700\u65b0\u503c\u7684\u5217\u8868\u3002 \u4f8b\u5982\uff1a >>> q = QueryDict('a=1&a=2&a=3') >>> q.values() ['3']","title":"11.QueryDict.values()"},{"location":"Django/django_QueryDict/django_QueryDict/#12querydictitervalues","text":"\u7c7b\u4f3c QueryDict.values() \uff0c\u53ea\u662f\u5b83\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u8fed\u4ee3\u5668\u3002","title":"12.QueryDict.itervalues()"},{"location":"Django/django_QueryDict/django_QueryDict/#13querydictcopy","text":"\u8fd4\u56de\u5bf9\u8c61\u7684\u526f\u672c\uff0c\u4f7f\u7528Python \u6807\u51c6\u5e93\u4e2d\u7684 copy.deepcopy() \u3002\u6b64\u526f\u672c\u662f\u53ef\u53d8\u7684\u5373\u4f7f\u539f\u59cb\u5bf9\u8c61\u662f\u4e0d\u53ef\u53d8\u7684\u3002","title":"13.QueryDict.copy()"},{"location":"Django/django_QueryDict/django_QueryDict/#14querydictgetlistkey-default","text":"\u4ee5Python \u5217\u8868\u5f62\u5f0f\u8fd4\u56de\u6240\u8bf7\u6c42\u7684\u952e\u7684\u6570\u636e\u3002\u5982\u679c\u952e\u4e0d\u5b58\u5728\u5e76\u4e14\u6ca1\u6709\u63d0\u4f9b\u9ed8\u8ba4\u503c\uff0c\u5219\u8fd4\u56de\u7a7a\u5217\u8868\u3002\u5b83\u4fdd\u8bc1\u8fd4\u56de\u7684\u662f\u67d0\u79cd\u7c7b\u578b\u7684\u5217\u8868\uff0c\u9664\u975e\u9ed8\u8ba4\u503c\u4e0d\u662f\u5217\u8868\u3002","title":"14.QueryDict.getlist(key, default)"},{"location":"Django/django_QueryDict/django_QueryDict/#15querydictsetlistkey-list_","text":"\u4e3a\u7ed9\u5b9a\u7684\u952e\u8bbe\u7f6e list_ \uff08\u4e0e __setitem__() \u4e0d\u540c)\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u591a\u5143\u7d20\u7684\u5217\u8868\u3002","title":"15.QueryDict.setlist(key, list_)"},{"location":"Django/django_QueryDict/django_QueryDict/#16querydictappendlistkey-item","text":"\u5c06\u9879\u8ffd\u52a0\u5230\u5185\u90e8\u4e0e\u952e\u76f8\u5173\u8054\u7684\u5217\u8868\u4e2d\u3002","title":"16.QueryDict.appendlist(key, item)"},{"location":"Django/django_QueryDict/django_QueryDict/#17querydictsetlistdefaultkey-default_list","text":"\u7c7b\u4f3c setdefault \uff0c\u9664\u4e86\u5b83\u63a5\u53d7\u4e00\u4e2a\u5217\u8868\u800c\u4e0d\u662f\u5355\u4e2a\u503c\u3002","title":"17.QueryDict.setlistdefault(key, default_list)"},{"location":"Django/django_QueryDict/django_QueryDict/#18querydictlists","text":"\u7c7b\u4f3c items \uff0c\u53ea\u662f\u5b83\u5c06\u5b57\u5178\u4e2d\u7684\u6bcf\u4e2a\u6210\u5458\u4f5c\u4e3a\u5217\u8868\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\uff0c\u90fd\u662f\u7531\u952e\u548c\u5bf9\u5e94\u7684\u503c\u5217\u8868\u7ec4\u6210\u7684\u4e8c\u5143\u5143\u7956\u3002 \u4f8b\u5982\uff1a >>> q = QueryDict('a=1&a=2&a=3') >>> q.lists() [('a', ['1', '2', '3'])]","title":"18.QueryDict.lists()"},{"location":"Django/django_QueryDict/django_QueryDict/#19querydictpopkey","text":"\u8fd4\u56de\u7ed9\u5b9a\u952e\u7684\u503c\u7684 \u5217\u8868 \uff0c\u5e76\u4ece\u5b57\u5178\u4e2d\u79fb\u9664\u5b83\u4eec\u3002\u5982\u679c\u952e\u4e0d\u5b58\u5728\uff0c\u5c06\u5f15\u53d1 KeyError \u3002 \u4f8b\u5982 \ufe30 >>> q = QueryDict('a=1&a=2&a=3', mutable=True) >>> q.pop('a') ['1', '2', '3']","title":"19.QueryDict.pop(key)"},{"location":"Django/django_QueryDict/django_QueryDict/#20querydictpopitem","text":"\u5220\u9664\u5b57\u5178 \u4efb\u610f \u4e00\u4e2a\u6210\u5458\uff08\u56e0\u4e3a\u6ca1\u6709\u987a\u5e8f\u7684\u6982\u5ff5\uff09\uff0c\u5e76\u8fd4\u56de\u4e8c\u503c\u5143\u7ec4\uff0c\u5305\u542b\u952e\u548c\u952e\u7684\u6240\u6709\u503c\u7684\u5217\u8868\u3002\u5728\u4e00\u4e2a\u7a7a\u7684\u5b57\u5178\u4e0a\u8c03\u7528\u65f6\u5c06\u5f15\u53d1 KeyError \u3002 \u4f8b\u5982 \ufe30 >>> q = QueryDict('a=1&a=2&a=3', mutable=True) >>> q.popitem() ('a', ['1', '2', '3'])","title":"20.QueryDict.popitem()"},{"location":"Django/django_QueryDict/django_QueryDict/#21querydictdict","text":"\u8fd4\u56de QueryDict \u7684 dict \u8868\u793a\u5f62\u5f0f\u3002\u5bf9\u4e8e QueryDict \u4e2d\u7684\u6bcf\u4e2a(key, list)\u5bf9 \uff0c dict \u5c06\u6709(key, item) \u5bf9\uff0c\u5176\u4e2ditem \u662f\u5217\u8868\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\uff0c\u4f7f\u7528\u4e0e QueryDict.__getitem__() \u76f8\u540c\u7684\u903b\u8f91\uff0c\u4e5f\u5c31\u662f\u6700\u65b0\u7684\uff1a >>> q = QueryDict('a=1&a=3&a=5') >>> q.dict() {'a': '5'}","title":"21.QueryDict.dict()"},{"location":"Django/django_QueryDict/django_QueryDict/#22querydicturlencodesafe","text":"\u4ece\u6570\u636e\u4e2d\u8fd4\u56de\u67e5\u8be2\u5b57\u7b26\u4e32\u683c\u5f0f\u3002 \u4f8b\u5982\uff1a >>> q = QueryDict('a=2&b=3&b=5') >>> q.urlencode() 'a=2&b=3&b=5' \u53ef\u9009\u5730\uff0curlencode \u53ef\u4ee5\u4f20\u9012\u4e0d\u9700\u8981\u7f16\u7801\u7684\u5b57\u7b26\u3002\uff08\u8fd9\u610f\u5473\u7740\u8981\u8fdb\u884c url \u7f16\u7801\uff09 \u4f8b\u5982\ufe30 >>> q = QueryDict(mutable=True) >>> q['next'] = '/a&b/' >>> q.urlencode(safe='/') 'next=/a%26b/'","title":"22.QueryDict.urlencode([safe])"},{"location":"Django/django_request/django_request/","text":"13.djangoRequest\u5bf9\u8c61 \u5b98\u65b9\u6587\u6863\ud83c\udf88 HTTP\u5e94\u7528\u7684\u4fe1\u606f\u662f\u901a\u8fc7 \u8bf7\u6c42\u62a5\u6587 \u548c \u54cd\u5e94\u62a5\u6587 \u4f20\u9012\u7684 django\u5c06\u5ba2\u6237\u7aef\u53d1\u9001\u7684\u8bf7\u6c42\u62a5\u6587\u7684\u4fe1\u606f\u5c01\u88c5\u6210\u4e86HttpRequest\u5bf9\u8c61 \u8be5\u5bf9\u8c61\u7531 HttpRequest \u7c7b\u521b\u5efa\uff0c \u6bcf\u4e00\u4e2a\u8bf7\u6c42\u90fd\u4f1a\u751f\u6210\u4e00\u4e2a HttpRequest \u5bf9\u8c61\uff0cdjango\u4f1a\u5c06\u8fd9\u4e2a\u5bf9\u8c61\u81ea\u52a8\u4f20\u9012\u7ed9\u54cd\u5e94\u7684\u89c6\u56fe\u51fd\u6570\uff0c\u4e00\u822c\u89c6\u56fe\u51fd\u6570\u7ea6\u5b9a\u4fd7\u6210\u5730\u4f7f\u7528 request \u53c2\u6570\u627f\u63a5\u8fd9\u4e2a\u5bf9\u8c61\u3002 def login(request): ... ... return ... request\u5bf9\u8c61\u4e2d\u5c01\u88c5\u7684\u5c5e\u6027 django\u5c06\u8bf7\u6c42\u62a5\u6587\u4e2d\u7684\u8bf7\u6c42\u884c\u3001\u9996\u90e8\u4fe1\u606f\u3001\u5185\u5bb9\u4e3b\u4f53\u5c01\u88c5\u6210 HttpRequest \u7c7b\u4e2d\u7684\u5c5e\u6027\u3002\u9664\u4e86\u7279\u6b8a\u8bf4\u660e\u7684\u4e4b\u5916\uff0c\u5176\u4ed6\u5747\u4e3a\u53ea\u8bfb\u7684 1.HttpRequest.scheme \u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4ee3\u8868\u8bf7\u6c42\u7684\u65b9\u6848\uff0c\u4e00\u822c\u4e3a \u2018http\u2019 \u6216 \u2018https\u2019\u3002 2.HttpRequest.body \u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4ee3\u8868\u8bf7\u6c42\u62a5\u6587\u7684\u4e3b\u4f53\u3002\u5728\u5904\u7406\u975e HTTP \u5f62\u5f0f\u7684\u62a5\u6587\u65f6\u975e\u5e38\u6709\u7528\uff0c\u4f8b\u5982\uff1a\u4e8c\u8fdb\u5236\u56fe\u7247\u3001XML\u7b49\u3002 \u4f46\u662f\uff0c\u5982\u679c\u8981\u5904\u7406\u8868\u5355\u6570\u636e\u7684\u65f6\u5019\uff0c\u63a8\u8350\u8fd8\u662f\u4f7f\u7528 HttpRequest.POST \u3002 \u53e6\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u7528 python \u7684\u7c7b\u6587\u4ef6\u65b9\u6cd5\u53bb\u64cd\u4f5c\u5b83\uff0c\u8be6\u60c5\u53c2\u8003 HttpRequest.read() \u3002 3.HttpRequest.path \u5b57\u7b26\u4e32\uff0c\u6807\u8bc6\u8bf7\u6c42\u7684\u8def\u5f84\u7ec4\u4ef6\uff0c\u4e0d\u5305\u542b\u57df\u540d\uff0c \u8fd9\u91cc\u7684\u503c\u5339\u914d\u7684\u662f\u8def\u7531\u7cfb\u7edf\u4e2d\u7684\u8def\u5f84 4.HttpRequest.method \u5b57\u7b26\u4e32\uff0c\u7528\u6765\u8868\u793a\u8bf7\u6c42\u4f7f\u7528\u7684HTTP\u65b9\u6cd5\uff0c def index(request): if request.method == \"GET\": return render(request,\"xx.html\") if request.method == \"POST\": ... return JsonResponse({'status':True,'detail':'xxx'}) 5.HttpRequest.encoding \u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8868\u793a\u63d0\u4ea4\u7684\u6570\u636e\u7684\u7f16\u7801\u65b9\u5f0f\uff08\u5982\u679c\u4e3a None \u5219\u8868\u793a\u4f7f\u7528 DEFAULT_CHARSET \u7684\u8bbe\u7f6e\uff0c\u9ed8\u8ba4\u4e3a 'utf-8'\uff09\u3002\u8fd9\u4e2a\u5c5e\u6027\u662f \u53ef\u5199 \u7684\uff0c\u4f60\u53ef\u4ee5\u4fee\u6539\u5b83\u6765\u4fee\u6539\u8bbf\u95ee\u8868\u5355\u6570\u636e\u4f7f\u7528\u7684\u7f16\u7801\u3002 \u63a5\u4e0b\u6765\u5bf9\u5c5e\u6027\u7684\u4efb\u4f55\u8bbf\u95ee\uff08\u4f8b\u5982\u4ece GET \u6216 POST \u4e2d\u8bfb\u53d6\u6570\u636e\uff09\u5c06\u4f7f\u7528\u65b0\u7684 encoding \u503c\u3002\u5982\u679c\u4f60\u77e5\u9053\u8868\u5355\u6570\u636e\u7684\u7f16\u7801\u4e0d\u662f DEFAULT_CHARSET \uff0c\u5219\u4f7f\u7528\u5b83\u3002 6.HttpRequest.GET \u4e00\u4e2a\u7c7b\u4f3c\u5b57\u5178\u7684\u5bf9\u8c61\uff0c\u5305\u6db5HTTP GET\u7684\u6240\u6709\u53c2\u6570\uff0c QueryDict \u5bf9\u8c61 7.HttpRequest.POST \u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u5b57\u5178\u7684\u5bf9\u8c61\uff0c\u5982\u679c\u8bf7\u6c42\u4e2d\u5305\u542b\u8868\u5355\u6570\u636e\uff0c\u5219\u5c06\u8fd9\u4e9b\u6570\u636e\u5c01\u88c5\u6210 QueryDict \u5bf9\u8c61\u3002 8.HttpRequest.COOKIE \u5f97\u5230\u6807\u51c6\u7684python\u5b57\u5178\uff0c\u5305\u6db5\u6240\u6709cookie\uff0c\u952e\u548c\u503c\u90fd\u662f\u5b57\u7b26\u4e32 9.HttpRequest.FILES \u7c7b\u4f3c\u4e8e\u5b57\u5178\u7684\u5bf9\u8c61\uff0c\u5305\u6db5\u6240\u6709\u7684\u4e0a\u4f20\u6587\u4ef6\u4fe1\u606f\u3002 FILES \u4e2d\u7684\u6bcf\u4e2a\u952e\u4e3a <input type=\"file\" name=\"\" /> \u4e2d\u7684 name \uff0c\u503c\u5219\u4e3a\u5bf9\u5e94\u7684\u6570\u636e\u3002 10.HttpRequest.META \u6807\u51c6python\u5b57\u5178\uff0c\u5305\u542b\u6240\u6709\u7684HTTP\u9996\u90e8 CONTENT_LENGTH \u2014\u2014 \u8bf7\u6c42\u7684\u6b63\u6587\u7684\u957f\u5ea6\uff08\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff09\u3002 CONTENT_TYPE \u2014\u2014 \u8bf7\u6c42\u7684\u6b63\u6587\u7684MIME \u7c7b\u578b\u3002 HTTP_ACCEPT \u2014\u2014 \u54cd\u5e94\u53ef\u63a5\u6536\u7684Content-Type\u3002 HTTP_ACCEPT_ENCODING \u2014\u2014 \u54cd\u5e94\u53ef\u63a5\u6536\u7684\u7f16\u7801\u3002 HTTP_ACCEPT_LANGUAGE \u2014\u2014 \u54cd\u5e94\u53ef\u63a5\u6536\u7684\u8bed\u8a00\u3002 HTTP_HOST \u2014\u2014 \u5ba2\u670d\u7aef\u53d1\u9001\u7684HTTP Host \u5934\u90e8\u3002 HTTP_REFERER \u2014\u2014 Referring \u9875\u9762\u3002 HTTP_USER_AGENT \u2014\u2014 \u5ba2\u6237\u7aef\u7684user-agent \u5b57\u7b26\u4e32\u3002 QUERY_STRING \u2014\u2014 \u5355\u4e2a\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u67e5\u8be2\u5b57\u7b26\u4e32\uff08\u672a\u89e3\u6790\u8fc7\u7684\u5f62\u5f0f\uff09\u3002 REMOTE_ADDR \u2014\u2014 \u5ba2\u6237\u7aef\u7684IP \u5730\u5740\u3002 REMOTE_HOST \u2014\u2014 \u5ba2\u6237\u7aef\u7684\u4e3b\u673a\u540d\u3002 REMOTE_USER \u2014\u2014 \u670d\u52a1\u5668\u8ba4\u8bc1\u540e\u7684\u7528\u6237\u3002 REQUEST_METHOD \u2014\u2014 \u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982 \"GET\" \u6216 \"POST\" \u3002 SERVER_NAME \u2014\u2014 \u670d\u52a1\u5668\u7684\u4e3b\u673a\u540d\u3002 SERVER_PORT \u2014\u2014 \u670d\u52a1\u5668\u7684\u7aef\u53e3\uff08\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff09\u3002","title":"13.djangoRequest\u5bf9\u8c61"},{"location":"Django/django_request/django_request/#13djangorequest","text":"\u5b98\u65b9\u6587\u6863\ud83c\udf88 HTTP\u5e94\u7528\u7684\u4fe1\u606f\u662f\u901a\u8fc7 \u8bf7\u6c42\u62a5\u6587 \u548c \u54cd\u5e94\u62a5\u6587 \u4f20\u9012\u7684 django\u5c06\u5ba2\u6237\u7aef\u53d1\u9001\u7684\u8bf7\u6c42\u62a5\u6587\u7684\u4fe1\u606f\u5c01\u88c5\u6210\u4e86HttpRequest\u5bf9\u8c61 \u8be5\u5bf9\u8c61\u7531 HttpRequest \u7c7b\u521b\u5efa\uff0c \u6bcf\u4e00\u4e2a\u8bf7\u6c42\u90fd\u4f1a\u751f\u6210\u4e00\u4e2a HttpRequest \u5bf9\u8c61\uff0cdjango\u4f1a\u5c06\u8fd9\u4e2a\u5bf9\u8c61\u81ea\u52a8\u4f20\u9012\u7ed9\u54cd\u5e94\u7684\u89c6\u56fe\u51fd\u6570\uff0c\u4e00\u822c\u89c6\u56fe\u51fd\u6570\u7ea6\u5b9a\u4fd7\u6210\u5730\u4f7f\u7528 request \u53c2\u6570\u627f\u63a5\u8fd9\u4e2a\u5bf9\u8c61\u3002 def login(request): ... ... return ... request\u5bf9\u8c61\u4e2d\u5c01\u88c5\u7684\u5c5e\u6027 django\u5c06\u8bf7\u6c42\u62a5\u6587\u4e2d\u7684\u8bf7\u6c42\u884c\u3001\u9996\u90e8\u4fe1\u606f\u3001\u5185\u5bb9\u4e3b\u4f53\u5c01\u88c5\u6210 HttpRequest \u7c7b\u4e2d\u7684\u5c5e\u6027\u3002\u9664\u4e86\u7279\u6b8a\u8bf4\u660e\u7684\u4e4b\u5916\uff0c\u5176\u4ed6\u5747\u4e3a\u53ea\u8bfb\u7684","title":"13.djangoRequest\u5bf9\u8c61"},{"location":"Django/django_request/django_request/#1httprequestscheme","text":"\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4ee3\u8868\u8bf7\u6c42\u7684\u65b9\u6848\uff0c\u4e00\u822c\u4e3a \u2018http\u2019 \u6216 \u2018https\u2019\u3002","title":"1.HttpRequest.scheme"},{"location":"Django/django_request/django_request/#2httprequestbody","text":"\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4ee3\u8868\u8bf7\u6c42\u62a5\u6587\u7684\u4e3b\u4f53\u3002\u5728\u5904\u7406\u975e HTTP \u5f62\u5f0f\u7684\u62a5\u6587\u65f6\u975e\u5e38\u6709\u7528\uff0c\u4f8b\u5982\uff1a\u4e8c\u8fdb\u5236\u56fe\u7247\u3001XML\u7b49\u3002 \u4f46\u662f\uff0c\u5982\u679c\u8981\u5904\u7406\u8868\u5355\u6570\u636e\u7684\u65f6\u5019\uff0c\u63a8\u8350\u8fd8\u662f\u4f7f\u7528 HttpRequest.POST \u3002 \u53e6\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u7528 python \u7684\u7c7b\u6587\u4ef6\u65b9\u6cd5\u53bb\u64cd\u4f5c\u5b83\uff0c\u8be6\u60c5\u53c2\u8003 HttpRequest.read() \u3002","title":"2.HttpRequest.body"},{"location":"Django/django_request/django_request/#3httprequestpath","text":"\u5b57\u7b26\u4e32\uff0c\u6807\u8bc6\u8bf7\u6c42\u7684\u8def\u5f84\u7ec4\u4ef6\uff0c\u4e0d\u5305\u542b\u57df\u540d\uff0c \u8fd9\u91cc\u7684\u503c\u5339\u914d\u7684\u662f\u8def\u7531\u7cfb\u7edf\u4e2d\u7684\u8def\u5f84","title":"3.HttpRequest.path"},{"location":"Django/django_request/django_request/#4httprequestmethod","text":"\u5b57\u7b26\u4e32\uff0c\u7528\u6765\u8868\u793a\u8bf7\u6c42\u4f7f\u7528\u7684HTTP\u65b9\u6cd5\uff0c def index(request): if request.method == \"GET\": return render(request,\"xx.html\") if request.method == \"POST\": ... return JsonResponse({'status':True,'detail':'xxx'})","title":"4.HttpRequest.method"},{"location":"Django/django_request/django_request/#5httprequestencoding","text":"\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8868\u793a\u63d0\u4ea4\u7684\u6570\u636e\u7684\u7f16\u7801\u65b9\u5f0f\uff08\u5982\u679c\u4e3a None \u5219\u8868\u793a\u4f7f\u7528 DEFAULT_CHARSET \u7684\u8bbe\u7f6e\uff0c\u9ed8\u8ba4\u4e3a 'utf-8'\uff09\u3002\u8fd9\u4e2a\u5c5e\u6027\u662f \u53ef\u5199 \u7684\uff0c\u4f60\u53ef\u4ee5\u4fee\u6539\u5b83\u6765\u4fee\u6539\u8bbf\u95ee\u8868\u5355\u6570\u636e\u4f7f\u7528\u7684\u7f16\u7801\u3002 \u63a5\u4e0b\u6765\u5bf9\u5c5e\u6027\u7684\u4efb\u4f55\u8bbf\u95ee\uff08\u4f8b\u5982\u4ece GET \u6216 POST \u4e2d\u8bfb\u53d6\u6570\u636e\uff09\u5c06\u4f7f\u7528\u65b0\u7684 encoding \u503c\u3002\u5982\u679c\u4f60\u77e5\u9053\u8868\u5355\u6570\u636e\u7684\u7f16\u7801\u4e0d\u662f DEFAULT_CHARSET \uff0c\u5219\u4f7f\u7528\u5b83\u3002","title":"5.HttpRequest.encoding"},{"location":"Django/django_request/django_request/#6httprequestget","text":"\u4e00\u4e2a\u7c7b\u4f3c\u5b57\u5178\u7684\u5bf9\u8c61\uff0c\u5305\u6db5HTTP GET\u7684\u6240\u6709\u53c2\u6570\uff0c QueryDict \u5bf9\u8c61","title":"6.HttpRequest.GET"},{"location":"Django/django_request/django_request/#7httprequestpost","text":"\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u5b57\u5178\u7684\u5bf9\u8c61\uff0c\u5982\u679c\u8bf7\u6c42\u4e2d\u5305\u542b\u8868\u5355\u6570\u636e\uff0c\u5219\u5c06\u8fd9\u4e9b\u6570\u636e\u5c01\u88c5\u6210 QueryDict \u5bf9\u8c61\u3002","title":"7.HttpRequest.POST"},{"location":"Django/django_request/django_request/#8httprequestcookie","text":"\u5f97\u5230\u6807\u51c6\u7684python\u5b57\u5178\uff0c\u5305\u6db5\u6240\u6709cookie\uff0c\u952e\u548c\u503c\u90fd\u662f\u5b57\u7b26\u4e32","title":"8.HttpRequest.COOKIE"},{"location":"Django/django_request/django_request/#9httprequestfiles","text":"\u7c7b\u4f3c\u4e8e\u5b57\u5178\u7684\u5bf9\u8c61\uff0c\u5305\u6db5\u6240\u6709\u7684\u4e0a\u4f20\u6587\u4ef6\u4fe1\u606f\u3002 FILES \u4e2d\u7684\u6bcf\u4e2a\u952e\u4e3a <input type=\"file\" name=\"\" /> \u4e2d\u7684 name \uff0c\u503c\u5219\u4e3a\u5bf9\u5e94\u7684\u6570\u636e\u3002","title":"9.HttpRequest.FILES"},{"location":"Django/django_request/django_request/#10httprequestmeta","text":"\u6807\u51c6python\u5b57\u5178\uff0c\u5305\u542b\u6240\u6709\u7684HTTP\u9996\u90e8 CONTENT_LENGTH \u2014\u2014 \u8bf7\u6c42\u7684\u6b63\u6587\u7684\u957f\u5ea6\uff08\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff09\u3002 CONTENT_TYPE \u2014\u2014 \u8bf7\u6c42\u7684\u6b63\u6587\u7684MIME \u7c7b\u578b\u3002 HTTP_ACCEPT \u2014\u2014 \u54cd\u5e94\u53ef\u63a5\u6536\u7684Content-Type\u3002 HTTP_ACCEPT_ENCODING \u2014\u2014 \u54cd\u5e94\u53ef\u63a5\u6536\u7684\u7f16\u7801\u3002 HTTP_ACCEPT_LANGUAGE \u2014\u2014 \u54cd\u5e94\u53ef\u63a5\u6536\u7684\u8bed\u8a00\u3002 HTTP_HOST \u2014\u2014 \u5ba2\u670d\u7aef\u53d1\u9001\u7684HTTP Host \u5934\u90e8\u3002 HTTP_REFERER \u2014\u2014 Referring \u9875\u9762\u3002 HTTP_USER_AGENT \u2014\u2014 \u5ba2\u6237\u7aef\u7684user-agent \u5b57\u7b26\u4e32\u3002 QUERY_STRING \u2014\u2014 \u5355\u4e2a\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u67e5\u8be2\u5b57\u7b26\u4e32\uff08\u672a\u89e3\u6790\u8fc7\u7684\u5f62\u5f0f\uff09\u3002 REMOTE_ADDR \u2014\u2014 \u5ba2\u6237\u7aef\u7684IP \u5730\u5740\u3002 REMOTE_HOST \u2014\u2014 \u5ba2\u6237\u7aef\u7684\u4e3b\u673a\u540d\u3002 REMOTE_USER \u2014\u2014 \u670d\u52a1\u5668\u8ba4\u8bc1\u540e\u7684\u7528\u6237\u3002 REQUEST_METHOD \u2014\u2014 \u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982 \"GET\" \u6216 \"POST\" \u3002 SERVER_NAME \u2014\u2014 \u670d\u52a1\u5668\u7684\u4e3b\u673a\u540d\u3002 SERVER_PORT \u2014\u2014 \u670d\u52a1\u5668\u7684\u7aef\u53e3\uff08\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff09\u3002","title":"10.HttpRequest.META"},{"location":"Django/drf/day14drf/","text":"day14 drf-\u4e2d\u7bc7 \u4e0a\u8282\u5185\u5bb9\uff1a\u524d\u540e\u7aef\u5206\u79bb\u6982\u8ff0\u3001\u7eaf\u51c0\u9879\u76ee\u3001request\u5bf9\u8c61\u3001\u8ba4\u8bc1\u3001\u6743\u9650\u3001\u9650\u6d41\u7b49\u3002 \u672c\u8282\u5185\u5bb9\uff1a \u7248\u672c \uff0c\u5728\u8bf7\u6c42\u4e2d\u643a\u5e26\u7248\u672c\u53f7\uff0c\u4fbf\u4e8e\u540e\u7eedAPI\u7684\u66f4\u65b0\u8fed\u4ee3\u3002 http://www.5xclass/api/v1/info http://www.5xclass/api/v2/info \u89e3\u6790\u5668 \uff0c\u8bfb\u53d6\u4e0d\u540c\u683c\u5f0f\u6570\u636e\u8fdb\u884c\u89e3\u6790\u7136\u540e\u8d4b\u503c\u7ed9request.data\u7b49\u5bf9\u8c61\u4e2d\u3002 user=wupeiqi&age=123 {\"user\":\"wupeiqi\",\"age\":123} \u5e8f\u5217\u5316\u5668 \uff0c\u5c06ORM\u83b7\u53d6\u7684\u6570\u636e\u5e93QuerySet\u6216\u6570\u636e\u5bf9\u8c61 \u5e8f\u5217\u5316 \u6210JSON\u683c\u5f0f + \u8bf7\u6c42\u6570\u636e\u683c\u5f0f\u6821\u9a8c \u3002\uff08\u6700\u91cd\u8981\uff09 \u5206\u9875 \uff0c\u5bf9ORM\u4e2d\u83b7\u53d6\u7684\u6570\u636e\u8fdb\u884c\u5206\u9875\u5904\u7406\uff0c\u5206\u6279\u8fd4\u56de\u7ed9\u7528\u6237\u3002 \u89c6\u56fe \uff0cdrf\u4e2d\u63d0\u4f9b\u4e86APIView+\u5176\u4ed6\u89c6\u56fe\u7c7b\u8ba9\u6211\u4eec\u6765\u7ee7\u627f\u3002 1.\u7248\u672c \u5728restful\u89c4\u8303\u4e2d\u8981\u53bb\uff0c\u540e\u7aef\u7684API\u4e2d\u9700\u8981\u4f53\u73b0\u7248\u672c\u3002 1.1 GET\u53c2\u6570\u4f20\u9012 # settings.py REST_FRAMEWORK = { \"VERSION_PARAM\": \"v\", \"DEFAULT_VERSION\": \"v1\", \"ALLOWED_VERSIONS\": [\"v1\", \"v2\", \"v3\"], \"DEFAULT_VERSIONING_CLASS\":\"rest_framework.versioning.QueryParameterVersioning\" } \u6e90\u7801\u6267\u884c\u6d41\u7a0b\uff1a 1.2 URL\u8def\u5f84\u4f20\u9012\uff08*\uff09 1.3 \u8bf7\u6c42\u5934\u4f20\u9012 1.4 \u53cd\u5411\u751f\u6210URL \u5728\u6bcf\u4e2a\u7248\u672c\u5904\u7406\u7684\u7c7b\u4e2d\u8fd8\u5b9a\u4e49\u4e86 reverse \u65b9\u6cd5\uff0c\u4ed6\u662f\u7528\u6765\u53cd\u5411\u751f\u6210URL\u5e76\u643a\u5e26\u76f8\u5173\u7684\u7684\u7248\u672c\u4fe1\u606f\u7528\u7684\uff0c\u4f8b\u5982\uff1a 2.\u89e3\u6790\u5668 \u4f7f\u7528 request.data \u83b7\u53d6 \u8bf7\u6c42\u4f53 \u4e2d\u7684\u6570\u636e\u3002 \u8fd9\u4e2a reqeust.data \u7684\u6570\u636e\u600e\u4e48\u6765\u7684\u5462\uff1f\u5176\u5b9e\u5728drf\u5185\u90e8\u662f\u7531\u89e3\u6790\u5668\uff0c\u6839\u636e\u8bf7\u6c42\u8005\u4f20\u5165\u7684\u6570\u636e\u683c\u5f0f + \u8bf7\u6c42\u5934\u6765\u8fdb\u884c\u5904\u7406\u3002 2.1 JSONParser \uff08*\uff09 2.2 FormParser 2.3 MultiPartParser\uff08*\uff09 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <form action=\"http://127.0.0.1:8000/test/\" method=\"post\" enctype=\"multipart/form-data\"> <input type=\"text\" name=\"user\" /> <input type=\"file\" name=\"img\"> <input type=\"submit\" value=\"\u63d0\u4ea4\"> </form> </body> </html> 2.4 FileUploadParser\uff08*\uff09 \u89e3\u6790\u5668\u53ef\u4ee5\u8bbe\u7f6e\u591a\u4e2a\uff0c\u9ed8\u8ba4\u89e3\u6790\u5668\uff1a from rest_framework.views import APIView from rest_framework.response import Response from rest_framework.parsers import MultiPartParser, JSONParser, FormParser class UserView(APIView): def post(self, request): print(request.content_type) print(request.data) return Response(\"...\") 3.\u5e8f\u5217\u5316\u5668 3.1 \u5e8f\u5217\u5316\u6570\u636e 3.1.1 Serializer from django.db import models class Role(models.Model): title = models.CharField(verbose_name=\"\u6807\u9898\", max_length=32) order = models.IntegerField(verbose_name=\"\u987a\u5e8f\") from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers from api import models class InfoSerializer(serializers.Serializer): id = serializers.IntegerField() title = serializers.CharField() order = serializers.IntegerField() class InfoView(APIView): def get(self, request): # 1.\u6570\u636e\u5e93\u83b7\u53d6\u591a\u6761\u6570\u636e # queryset = models.Role.objects.all() # ser = InfoSerializer(instance=queryset, many=True) # 2.\u6570\u636e\u5e93\u83b7\u53d6\u5355\u6761\u6570\u636e instance = models.Role.objects.all().first() ser = InfoSerializer(instance=instance, many=False) print(type(ser.data), ser.data) return Response(ser.data) 3.1.2 ModelSerializer from django.db import models class Role(models.Model): title = models.CharField(verbose_name=\"\u6807\u9898\", max_length=32) order = models.IntegerField(verbose_name=\"\u987a\u5e8f\") from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers from api import models class InfoSerializer(serializers.ModelSerializer): class Meta: model = models.Role # fields = \"__all__\" # fields = ['id', 'title', 'order'] exclude = [\"id\"] class InfoView(APIView): def get(self, request): # 1.\u6570\u636e\u5e93\u83b7\u53d6\u591a\u6761\u6570\u636e # queryset = models.Role.objects.all() # ser = InfoSerializer(instance=queryset, many=True) # 2.\u6570\u636e\u5e93\u83b7\u53d6\u5355\u6761\u6570\u636e instance = models.Role.objects.all().first() ser = InfoSerializer(instance=instance, many=False) print(type(ser.data), ser.data) return Response(ser.data) \u5f88\u663e\u7136\uff0c\u5982\u679c\u8981\u5bf9\u6570\u636e\u8868\u4e2d\u7684\u5b57\u6bb5\u8fdb\u884c\u5e8f\u5217\u5316\uff0c\u4f7f\u7528ModelModelSerializer\u662f\u8981\u6bd4Serializer\u66f4\u7b80\u6d01\u4e00\u4e9b\u7684\u3002 3.1.3 \u5b57\u6bb5\u548c\u53c2\u6570 \u5728 ModelModelSerializer \u548c Serializer \u4e2d\u90fd\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5b57\u6bb5\uff0c\u5e76\u4f20\u5165\u4e00\u4e9b\u76f8\u5173\u53c2\u6570\u3002 from django.db import models class Role(models.Model): title = models.CharField(verbose_name=\"\u6807\u9898\", max_length=32) order = models.IntegerField(verbose_name=\"\u987a\u5e8f\") class UserInfo(models.Model): name = models.CharField(verbose_name=\"\u59d3\u540d\", max_length=32) gender = models.SmallIntegerField(verbose_name=\"\u6027\u522b\", choices=((1, \"\u7537\"), (2, \"\u5973\"))) role = models.ForeignKey(verbose_name=\"\u89d2\u8272\", to=\"Role\", on_delete=models.CASCADE) ctime = models.DateTimeField(verbose_name=\"\u521b\u5efa\u65f6\u95f4\", auto_now_add=True) from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers from api import models class InfoSerializer(serializers.ModelSerializer): gender = serializers.CharField(source=\"get_gender_display\") role = serializers.CharField(source=\"role.title\") ctime = serializers.DateTimeField(format=\"%Y-%m-%d\") other_name = serializers.CharField(source=\"name\") mine = serializers.SerializerMethodField() class Meta: model = models.UserInfo fields = ['id', 'name', 'gender', \"role\", 'ctime', \"other_name\", \"mine\"] def get_mine(self, obj): return \"x-x-{}\".format(obj.name) class InfoView(APIView): def get(self, request): queryset = models.UserInfo.objects.all() ser = InfoSerializer(instance=queryset, many=True) print(type(ser.data), ser.data) return Response(ser.data) 3.1.4 \u5e8f\u5217\u5316\u7c7b\u5d4c\u5957 \u4e3b\u8981\u662fORM\u7c7b\u4e2d\u5bf9\u5e94 ForeignKey \u548c ManyToManyField \u7684\u5b57\u6bb5\u8fdb\u884c\u5e8f\u5217\u5316\u3002 \u57fa\u4e8e SerializerMethodField \u81ea\u5b9a\u4e49\u65b9\u6cd5\u5bf9\u5173\u8054\u8868\u6570\u636e\u8fdb\u884c\u5e8f\u5217\u5316 \u57fa\u4e8e\u5d4c\u5957\u7684\u5e8f\u5217\u5316\u7c7b\u5b9e\u73b0 from django.db import models class Role(models.Model): title = models.CharField(verbose_name=\"\u6807\u9898\", max_length=32) order = models.IntegerField(verbose_name=\"\u987a\u5e8f\") class Tag(models.Model): caption = models.CharField(verbose_name=\"\u540d\u79f0\", max_length=32) class UserInfo(models.Model): name = models.CharField(verbose_name=\"\u59d3\u540d\", max_length=32) gender = models.SmallIntegerField(verbose_name=\"\u6027\u522b\", choices=((1, \"\u7537\"), (2, \"\u5973\"))) role = models.ForeignKey(verbose_name=\"\u89d2\u8272\", to=\"Role\", on_delete=models.CASCADE) ctime = models.DateTimeField(verbose_name=\"\u521b\u5efa\u65f6\u95f4\", auto_now_add=True) tags = models.ManyToManyField(verbose_name=\"\u6807\u7b7e\", to=\"Tag\") from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers from api import models class RoleSerializer(serializers.ModelSerializer): class Meta: model = models.Role # fields = \"__all__\" fields = [\"id\", 'title'] class TagSerializer(serializers.ModelSerializer): class Meta: model = models.Tag fields = \"__all__\" class InfoSerializer(serializers.ModelSerializer): role = RoleSerializer() tags = TagSerializer(many=True) class Meta: model = models.UserInfo fields = ['id', 'name', \"role\", \"tags\"] class InfoView(APIView): def get(self, request): queryset = models.UserInfo.objects.all() ser = InfoSerializer(instance=queryset, many=True) print(type(ser.data), ser.data) return Response(ser.data) 3.1.5 \u5e8f\u5217\u5316\u7c7b\u7ee7\u627f from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers from api import models class MySerializer(serializers.Serializer): more = serializers.SerializerMethodField() def get_more(self, obj): return \"123\" class InfoSerializer(serializers.ModelSerializer, MySerializer): class Meta: model = models.UserInfo fields = [\"id\", \"name\", 'more'] class InfoView(APIView): def get(self, request): instance = models.UserInfo.objects.all().first() ser = InfoSerializer(instance=instance, many=False) print(type(ser.data), ser.data) return Response(ser.data) 3.1.6 \u5e95\u5c42\u5b9e\u73b0\u539f\u7406\uff08\u6269\u5c55\uff09 \u58f0\u660e\uff1a\u638c\u63e1\u4e0a\u8ff0\u77e5\u8bc6\u70b9\uff0c\u5df2\u7ecf\u53ef\u4ee5\u8ba9\u4f60\u5b8c\u6210\u5de5\u4f5c\u4e2d\u5e38\u89c1\u7684\u4efb\u52a1\u3002\u63a5\u4e0b\u6765\u7684\u77e5\u8bc6\u70b9\uff0c\u53ea\u662f\u4f5c\u4e3a\u6269\u5c55\uff0c\u53ef\u4ee5\u7565\u8fc7\u3002 1.\u5143\u7c7b \u5bf9\u8c61\u662f\u901a\u8fc7\u7c7b\u5b9e\u4f8b\u5316\u51fa\u6765\u7684\u3002 class Foo(object): pass # \u7b2c1\u6b65\uff1a\u8c03\u7528Foo\u7684__new__\u65b9\u6cd5\u521b\u5efa\u7a7a\u5bf9\u8c61\u3002 # \u7b2c2\u6b65\uff1a\u8c03\u7528Foo\u7684__init__\u65b9\u6cd5\u5bf9\u5bf9\u8c61\u8fdb\u884c\u521d\u59cb\u5316\u3002 obj = Foo() \u7c7b\u662f\u8c01\u521b\u5efa\u7684\uff1f\u662f\u7531type\u521b\u5efa\u51fa\u6765\u7684\uff08\u9ed8\u8ba4\uff09\u3002 class Foo(object): v1 = 123 def func(self): return 666 Foo = type(\"Foo\",(object,),{ \"v1\":123, \"func\":lambda self:666 }) \u5b9a\u4e49\u7c7b\u65f6\u52a0\u5165metaclass\u6307\u5b9a\u5f53\u524d\u7c7b\u7684\u521b\u9020\u8005\u3002 # \u7531type\u521b\u5efaFoo\u7c7b\u578b class Foo(object): pass # \u7531`\u4e1c\u897f` \u521b\u5efaFoo\u7c7b\u578b class Foo(object,metaclass=\u4e1c\u897f): pass \u6307\u5b9a\u5143\u7c7b(metaclass) \u6765\u521b\u5efa\u7c7b\u3002 class MyType(type): def __new__(cls, *args, **kwargs): new_cls = super().__new__(cls, *args, **kwargs) print(\"\u521b\u5efa\u7c7b\uff1a\", new_cls) return new_cls class Foo(metaclass=MyType): pass class MyType(type): def __init__(self, *args, **kwargs): print(\"\u7b2c2\u6b65\uff1a\u521d\u59cb\u5316\u7c7b\u6210\u5458\uff1a\", args, **kwargs) super().__init__(*args, **kwargs) def __new__(cls, *args, **kwargs): new_cls = super().__new__(cls, *args, **kwargs) print(\"\u7b2c1\u6b65\uff1a\u521b\u5efa\u7c7b\uff1a\", new_cls) return new_cls class Foo(metaclass=MyType): v1 = 123 def func(self): pass class MyType(type): def __init__(cls, *args, **kwargs): print(\"\u7b2c2\u6b65\uff1a\u521d\u59cb\u5316\u7c7b\u6210\u5458\uff1a\", args, **kwargs) super().__init__(*args, **kwargs) def __new__(cls, *args, **kwargs): new_cls = super().__new__(cls, *args, **kwargs) print(\"\u7b2c1\u6b65\uff1a\u521b\u5efa\u7c7b\uff1a\", new_cls) return new_cls def __call__(cls, *args, **kwargs): print(\"\u7b2c3\u6b65\uff1a\u521b\u5efa\u5bf9\u8c61&\u521d\u59cb\u5316\u5bf9\u8c61\", cls) # 1.\u8c03\u7528\u81ea\u5df1\u90a3\u4e2a\u7c7b\u7684 __new__ \u65b9\u6cd5\u53bb\u521b\u5efa\u5bf9\u8c61 new_object = cls.__new__(cls, *args, **kwargs) # 2.\u8c03\u7528\u4f60\u81ea\u5df1\u90a3\u4e2a\u7c7b __init__\u653e\u53d1\u53bb\u521d\u59cb\u5316 cls.__init__(new_object, *args, **kwargs) return new_object class Foo(metaclass=MyType): v1 = 123 def func(self): pass obj = Foo() 2.\u5b9e\u4f8b\u5316\u5b57\u6bb5\u5bf9\u8c61 from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers from api import models class InfoSerializer(serializers.Serializer): id = serializers.IntegerField() title = serializers.CharField() order = serializers.IntegerField \u5bf9\u4e8e\u4e0a\u8ff0\u4ee3\u7801\uff0c\u5728\u7c7b InfoSerializer \u521b\u5efa\u4e4b\u524d\uff0c\u5176\u5185\u90e8 id\u3001title\u3001order \u5b57\u6bb5\u4f1a\u5148\u8fdb\u884c\u5b9e\u4f8b\u5316\u5bf9\u8c61\u3002 \u800c\u8fd9\u4e9b IntegerField \u3001 CharField \u7b49\u5b57\u6bb5\u7684\u7ee7\u627f\u5173\u7cfb\u5982\u4e0b\uff1a class Field: _creation_counter = 0 class IntegerField(Field): pass class CharField(Field): pass class DateTimeField(Field): pass \u5728 IntegerField \u3001 CharField \u7b49\u5b57\u6bb5\u5b9e\u4f8b\u5316\u65f6\uff0c\u5185\u90e8\u4f1a\u7ef4\u62a4\u4e00\u4e2a\u8ba1\u6570\u5668\uff0c\u6765\u8868\u793a\u5b9e\u4f8b\u5316\u7684\u5148\u540e\u987a\u5e8f\u3002 class Field: _creation_counter = 0 def __init__(self, *, read_only=False...): self._creation_counter = Field._creation_counter Field._creation_counter += 1 class IntegerField(Field): def __init__(self, **kwargs): ... super().__init__(**kwargs) class CharField(Field): def __init__(self, **kwargs): ... super().__init__(**kwargs) from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers from api import models class InfoSerializer(serializers.Serializer): id = serializers.IntegerField() # \u5bf9\u8c61\uff0c\u5185\u90e8_creation_counter=0 title = serializers.CharField() # \u5bf9\u8c61\uff0c\u5185\u90e8_creation_counter=1 order = serializers.IntegerField # \u5bf9\u8c61\uff0c\u5185\u90e8_creation_counter=2 \u6ce8\u610f\uff1a\u540e\u7eed\u4f1a\u901a\u8fc7\u8fd9\u4e2a\u8ba1\u6570\u5668\u6392\u5e8f\uff0c\u4ee5\u6b64\u6765\u5b9e\u73b0\u5b57\u6bb5\u7684\u5148\u540e\u6267\u884c\u3002 3.\u5e8f\u5217\u5316\u7c7b\u7684\u521b\u5efa class SerializerMetaclass(type): def __new__(cls, name, bases, attrs): attrs['_declared_fields'] = cls._get_declared_fields(bases, attrs) return super().__new__(cls, name, bases, attrs) class Serializer(BaseSerializer, metaclass=SerializerMetaclass): ... class ModelSerializer(Serializer): ... class RoleSerializer(serializers.ModelSerializer): gender = serializers.CharField(source=\"get_gender_display\") class Meta: model = models.Role fields = [\"id\", 'title',\"gender\"] \u6ce8\u610f\uff1a\u7236\u7c7b\u4e2d\u6307\u5b9ametaclass\uff0c\u5b50\u7c7b\u4e5f\u4f1a\u7531\u6b64metaclass\u6765\u521b\u5efa\u7c7b\u3002 4._declared_fields \u5728\u521b\u5efa\u7c7b\u4e4b\u524d\uff0c\u5143\u7c7b\u7684 __new__ \u65b9\u6cd5\u5728\u7c7b\u6210\u5458\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a _declared_fields \uff08\u7c7b\u53d8\u91cf\uff09\u3002 class SerializerMetaclass(type): @classmethod def _get_declared_fields(cls, bases, attrs): # 1.\u5faa\u73af\u83b7\u53d6\u7c7b\u4e2d\u5b9a\u4e49\u6240\u6709\u7684\u6210\u5458\uff08\u7c7b\u53d8\u91cf\u3001\u65b9\u6cd5\uff09\uff0c\u7b5b\u9009\u51fa\u7ee7\u627f\u81eaFields\u7684\u7c7b\u7684\u5b57\u6bb5\u5bf9\u8c61\u3002 # \u6ce8\u610f\uff1a\u540c\u65f6\u4f1a\u5c06\u5b57\u6bb5\u5728\u5f53\u524d\u7c7b\u6210\u5458\u4e2d\u79fb\u9664 fields = [ (field_name, attrs.pop(field_name)) for field_name, obj in list(attrs.items()) if isinstance(obj, Field) ] # 2.\u6839\u636e\u5b57\u6bb5\u7684_creation_counter\u6392\u5e8f fields.sort(key=lambda x: x[1]._creation_counter) # Ensures a base class field doesn't override cls attrs, and maintains # field precedence when inheriting multiple parents. e.g. if there is a # class C(A, B), and A and B both define 'field', use 'field' from A. known = set(attrs) def visit(name): known.add(name) return name # 3.\u8bfb\u53d6\u7236\u7c7b\u4e2d\u7684_declared_fields\u5b57\u6bb5\uff08\u7236\u7c7b\u5148\u4e8e\u5b50\u7c7b\u521b\u5efa\u3001\u5e8f\u5217\u5316\u7c7b\u652f\u6301\u7ee7\u627f\uff09 base_fields = [ (visit(name), f) for base in bases if hasattr(base, '_declared_fields') for name, f in base._declared_fields.items() if name not in known ] # 4.\u5c06\u7236\u7c7b\u548c\u5b50\u7c7b\u4e2d\u7684\u5b57\u6bb5\u6253\u5305\u8fd4\u56de\uff0c\u8d4b\u503c\u7ed9\u5f53\u524d\u7c7b\u7684_declared_fields return OrderedDict(base_fields + fields) def __new__(cls, name, bases, attrs): attrs['_declared_fields'] = cls._get_declared_fields(bases, attrs) return super().__new__(cls, name, bases, attrs) class Serializer(BaseSerializer, metaclass=SerializerMetaclass): ... class ModelSerializer(Serializer): ... class RoleSerializer(serializers.ModelSerializer): gender = serializers.CharField(source=\"get_gender_display\") class Meta: model = models.Role fields = [\"id\", 'title',\"gender\"] \u6240\u4ee5\uff0c\u5f53\u7c7b\u5e8f\u5217\u5316\u7c7b\u52a0\u8f7d\u5b8c\u6bd5\u540e\uff0c\u7c7b\u4e2d\u6210\u5458\uff1a \u5254\u9664\uff0c\u5b57\u6bb5\u5bf9\u8c61\u3002 RoleSerializer.gender \u4e0d\u5b58\u5728 \u65b0\u589e\uff0c_declared_fields\uff0c\u662f OrderedDict \u7c7b\u578b\u4e14\u5185\u90e8\u5305\u542b\u6240\u6709\u5b57\u6bb5\u3002 RoleSerializer._declared_fields = { \"gender\": CharField\u5bf9\u8c61 } \u5176\u4ed6\uff0c\u4fdd\u7559\u539f\u6837\u3002 RoleSerializer.Meta 5.\u521b\u5efa\u5e8f\u5217\u5316\u7c7b\u5bf9\u8c61 \u5728\u89c6\u56fe\u7684\u65b9\u6cd5\uff0c\u4f7f\u7528\u5e8f\u5217\u5316\u7c7b\u5bf9 orm \u83b7\u53d6\u7684QuerySet\u6216\u5bf9\u8c61\u8fdb\u884c\u5e8f\u5217\u5316\u65f6\uff0c\u9700\u8981\u5148\u8fdb\u884c\u521d\u59cb\u5316\u7c7b\u7684\u5bf9\u8c61\u3002 class SerializerMetaclass(type): def __new__(cls, name, bases, attrs): attrs['_declared_fields'] = cls._get_declared_fields(bases, attrs) return super().__new__(cls, name, bases, attrs) class BaseSerializer(Field): def __init__(self, instance=None, data=empty, **kwargs): self.instance = instance if data is not empty: self.initial_data = data self.partial = kwargs.pop('partial', False) self._context = kwargs.pop('context', {}) kwargs.pop('many', None) super().__init__(**kwargs) def __new__(cls, *args, **kwargs): if kwargs.pop('many', False): # \u8c03\u7528 many_init \u65b9\u6cd5\u83b7\u53d6\u5176\u4ed6\u5bf9\u8c61\uff0c\u8fd4\u56de return cls.many_init(*args, **kwargs) # \u521b\u5efa\u5f53\u524d\u7c7b\u7684\u7a7a\u5bf9\u8c61\uff0c\u8fd4\u56de return super().__new__(cls, *args, **kwargs) @classmethod def many_init(cls, *args, **kwargs): ... child_serializer = cls(*args, **kwargs) list_kwargs = { 'child': child_serializer, } meta = getattr(cls, 'Meta', None) list_serializer_class = getattr(meta, 'list_serializer_class', ListSerializer) return list_serializer_class(*args, **list_kwargs) class Serializer(BaseSerializer, metaclass=SerializerMetaclass): ... class ModelSerializer(Serializer): ... class RoleSerializer(serializers.ModelSerializer): gender = serializers.CharField(source=\"get_gender_display\") class Meta: model = models.Role fields = [\"id\", 'title',\"gender\"] instance = models.UserInfo.objects.all().first() # \u5b9e\u4f8b\u5316\u5bf9\u8c61\uff0c\u5185\u90e8\u4f1a\uff1a\u5148\u6267\u884c__new__\u3001\u518d\u6267\u884c__init__ # \u7b2c1\u6b65\uff1a__new__ # \u9ed8\u8ba4\uff1amany=True\uff0c\u8fd4\u56deListSerializer\u5bf9\u8c61\uff1b many=False\uff0c\u8fd4\u56de\u5f53\u524d\u7c7bInfoSerializer\u7684\u5bf9\u8c61\u3002 # \u7b2c2\u6b65\uff1a__init__ # \u6b64\u5904\u5c31\u8981\u6839\u636e__new__\u8fd4\u56de\u7684\u4e0d\u540c\u5bf9\u8c61\uff0c\u6267\u884c\u4e0d\u540c\u5bf9\u8c61\u7684__init__\u65b9\u6cd5\u3002 # =====> \u601d\u8003\u9898\uff1a\u4f60\u89c9\u5f97\u4ed6\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u8bbe\u8ba1\uff1f <====== ser = InfoSerializer(instance=instance, many=False) # \u83b7\u53d6\u5e8f\u5217\u5316\u540e\u7684\u503c ser.data 6.\u5e8f\u5217\u5316-\u5f53\u524d\u7c7b class Field: def get_attribute(self, instance): # source_attrs=[] \u6216 source_attrs=[\"xx\",\"xx\",\"xxx\"] return get_attribute(instance, self.source_attrs) class CharField(Field): def to_representation(self, value): return str(value) class BaseSerializer(Field): @property def data(self): # \u7b2c2\u6b65 if not hasattr(self, '_data'): if self.instance is not None and not getattr(self, '_errors', None): # \u7b2c3\u6b65\uff1a\u7528\u4e8e\u5e8f\u5217\u5316\u7ed9\u5bf9\u8c61\u8fdb\u884c\u521d\u59cb\u5316\u7528\u7684\u3002 self._data = self.to_representation(self.instance) elif hasattr(self, '_validated_data') and not getattr(self, '_errors', None): # \u8fd9\u91cc\u662f\u7528\u4e8e\u5bf9\u8bf7\u6c42\u6821\u9a8c\u65f6\uff0c\u624d\u89e6\u53d1\u6267\u884c\u7684\u3002 self._data = self.to_representation(self.validated_data) else: # \u8fd9\u4e2a\u662f\u7528\u4e8e\u7ed9Serializer\uff0c\u4e0d\u4f20\u5bf9\u8c61\u800c\u4f20\u5165initial_data\u53c2\u6570\u7528\u7684\u3002 self._data = self.get_initial() return self._data class Serializer(BaseSerializer, metaclass=SerializerMetaclass): @property def data(self): # \u7b2c1\u6b65 ret = super().data return ReturnDict(ret, serializer=self) def to_representation(self, instance): # \u7b2c4\u6b65 ret = OrderedDict() # \u7b2c5\u6b65\uff1a\u83b7\u53d6 _declared_fields \u4e2d\u6240\u6709\u975ewrite_only\u5b57\u6bb5\uff0c\u5373\uff1a\u7528\u4e8e\u5e8f\u5217\u5316\u7684\u5b57\u6bb5\u3002 # \u5982\u679c\u662fModelSerializer\uff0c\u4e5f\u4f1a\u53bb\u5bfb\u627e\u5176Meta\u4e2d\u5b9a\u4e49\u7684\u5b57\u6bb5 + \u5b57\u6bb5\u7684bind\u65b9\u6cd5 fields = self._readable_fields for field in fields: try: # \u7b2c5\u6b65\uff1a\u8c03\u7528\u5b57\u6bb5\u5bf9\u8c61\u4e2d\u7684 get_attribute \u65b9\u6cd5 attribute = field.get_attribute(instance) except SkipField: continue check_for_none = attribute.pk if isinstance(attribute, PKOnlyObject) else attribute if check_for_none is None: ret[field.field_name] = None else: # \u7b2c6\u6b65\uff1a\u8c03\u7528\u5b57\u6bb5\u5bf9\u8c61\u4e2d\u7684 to_representation \u65b9\u6cd5 ret[field.field_name] = field.to_representation(attribute) return ret class ModelSerializer(Serializer): ... class RoleSerializer(serializers.ModelSerializer): gender = serializers.CharField(source=\"get_gender_display\") class Meta: model = models.Role fields = [\"id\", 'title',\"gender\"] instance = models.UserInfo.objects.all().first() ser = InfoSerializer(instance=instance, many=False) # \u521b\u5efaInfoSerializer\u7c7b\u7684\u5bf9\u8c61\uff0c\u83b7\u53d6\u5e8f\u5217\u5316\u540e\u7684\u503c ser.data 7.\u5e8f\u5217\u5316-ListSerializer class BaseSerializer(Field): @property def data(self): if not hasattr(self, '_data'): if self.instance is not None and not getattr(self, '_errors', None): # \u8fd9\u91cc self._data = self.to_representation(self.instance) elif hasattr(self, '_validated_data') and not getattr(self, '_errors', None): self._data = self.to_representation(self.validated_data) else: self._data = self.get_initial() return self._data class ListSerializer(BaseSerializer): @property def data(self): ret = super().data return ReturnList(ret, serializer=self) def to_representation(self, data): iterable = data.all() if isinstance(data, models.Manager) else data return [ # \u5faa\u73af\uff0c\u5229\u7528\u5e8f\u5217\u5316\u7c7b\u53bb\u5904\u7406\u6bcf\u4e2a\u5bf9\u8c61 self.child.to_representation(item) for item in iterable ] 3.2 \u6570\u636e\u6821\u9a8c \u5bf9\u7528\u6237\u53d1\u6765\u7684\u8bf7\u6c42\u6570\u636e\u8fdb\u884c\u6821\u9a8c\u3002 3.2.1 \u5185\u7f6e\u6821\u9a8c from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers class InfoSerializer(serializers.Serializer): title = serializers.CharField(required=True, max_length=20, min_length=6) order = serializers.IntegerField(required=False, max_value=100, min_value=10) level = serializers.ChoiceField(choices=[(\"1\", \"\u9ad8\u7ea7\"), (2, \"\u4e2d\u7ea7\")]) class InfoView(APIView): def post(self, request): ser = InfoSerializer(data=request.data) if ser.is_valid(): return Response(ser.validated_data) else: return Response(ser.errors) 3.2.2 \u6b63\u5219\u6821\u9a8c from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers from django.core.validators import RegexValidator, EmailValidator class InfoSerializer(serializers.Serializer): title = serializers.CharField(required=True, max_length=20, min_length=6) order = serializers.IntegerField(required=False, max_value=100, min_value=10) level = serializers.ChoiceField(choices=[(\"1\", \"\u9ad8\u7ea7\"), (2, \"\u4e2d\u7ea7\")]) # email = serializers.EmailField() email = serializers.CharField(validators=[EmailValidator(message=\"\u90ae\u7bb1\u683c\u5f0f\u9519\u8bef\")]) more = serializers.CharField(validators=[RegexValidator(r\"\\d+\", message=\"\u683c\u5f0f\u9519\u8bef\")]) code = serializers.CharField() class InfoView(APIView): def post(self, request): ser = InfoSerializer(data=request.data) if ser.is_valid(): return Response(ser.validated_data) else: return Response(ser.errors) 3.2.3 \u94a9\u5b50\u6821\u9a8c from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers from rest_framework import exceptions class InfoSerializer(serializers.Serializer): title = serializers.CharField(required=True, max_length=20, min_length=6) order = serializers.IntegerField(required=False, max_value=100, min_value=10) code = serializers.CharField() def validate_code(self, value): print(value) if len(value) > 6: raise exceptions.ValidationError(\"\u5b57\u6bb5\u94a9\u5b50\u6821\u9a8c\u5931\u8d25\") return value def validate(self, attrs): print(\"validate=\", attrs) # api_settings.NON_FIELD_ERRORS_KEY # raise exceptions.ValidationError(\"\u5168\u5c40\u94a9\u5b50\u6821\u9a8c\u5931\u8d25\") return attrs class InfoView(APIView): def post(self, request): ser = InfoSerializer(data=request.data) if ser.is_valid(): return Response(ser.validated_data) else: return Response(ser.errors) 3.2.4 Model\u6821\u9a8c from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers from rest_framework import exceptions from api import models from django.core.validators import RegexValidator class RoleSerializer(serializers.ModelSerializer): more = serializers.CharField(required=True) class Meta: model = models.Role fields = [\"title\", \"order\", \"more\"] extra_kwargs = { \"title\": {\"validators\": [RegexValidator(r\"\\d+\", message=\"\u683c\u5f0f\u9519\u8bef\")]}, \"order\": {\"min_value\": 5}, } def validate_more(self, value): return value def validate(self, attrs): return attrs class InfoView(APIView): def post(self, request): ser = RoleSerializer(data=request.data) if ser.is_valid(): return Response(ser.validated_data) else: return Response(ser.errors) 3.2.5 \u6821\u9a8c+\u4fdd\u5b58 from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers from rest_framework import exceptions from api import models from django.core.validators import RegexValidator class RoleSerializer(serializers.ModelSerializer): more = serializers.CharField(required=True) class Meta: model = models.Role fields = [\"title\", \"order\", \"more\"] extra_kwargs = { \"title\": {\"validators\": [RegexValidator(r\"\\d+\", message=\"\u683c\u5f0f\u9519\u8bef\")]}, \"order\": {\"min_value\": 5}, } def validate_more(self, value): return value def validate(self, attrs): return attrs class InfoView(APIView): def post(self, request): ser = RoleSerializer(data=request.data) if ser.is_valid(): ser.validated_data.pop(\"more\") instance = ser.save() # ser.save(v1=123,v2=234) print(instance) return Response(ser.validated_data) else: return Response(ser.errors) 3.2.6 \u6821\u9a8c+\u4fdd\u5b58+FK+M2M from django.db import models class Role(models.Model): title = models.CharField(verbose_name=\"\u6807\u9898\", max_length=32) order = models.IntegerField(verbose_name=\"\u987a\u5e8f\") class Tag(models.Model): caption = models.CharField(verbose_name=\"\u540d\u79f0\", max_length=32) class UserInfo(models.Model): name = models.CharField(verbose_name=\"\u59d3\u540d\", max_length=32) gender = models.SmallIntegerField(verbose_name=\"\u6027\u522b\", choices=((1, \"\u7537\"), (2, \"\u5973\"))) role = models.ForeignKey(verbose_name=\"\u89d2\u8272\", to=\"Role\", on_delete=models.CASCADE) ctime = models.DateTimeField(verbose_name=\"\u521b\u5efa\u65f6\u95f4\", auto_now_add=True) tags = models.ManyToManyField(verbose_name=\"\u6807\u7b7e\", to=\"Tag\") from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers from rest_framework import exceptions from api import models from django.core.validators import RegexValidator import datetime class UserInfoSerializer(serializers.ModelSerializer): more = serializers.CharField(required=True) class Meta: model = models.UserInfo fields = [\"name\", \"gender\", \"role\", \"tags\", \"more\"] extra_kwargs = { \"name\": {\"validators\": [RegexValidator(r\"n-\\d+\", message=\"\u683c\u5f0f\u9519\u8bef\")]}, } def validate_more(self, value): return value def validate(self, attrs): return attrs class InfoView(APIView): def post(self, request): ser = UserInfoSerializer(data=request.data) if ser.is_valid(): ser.validated_data.pop(\"more\") instance = ser.save(ctime=datetime.datetime.now()) print(instance) # return Response(ser.validated_data) return Response(\"\u6210\u529f\") else: return Response(ser.errors) 3.2.7 \u94a9\u5b50create \u5f53\u6267\u884csave\u65f6\uff0c\u5185\u90e8\u4f1a\u8c03\u7528 create \u6216 update\u65b9\u6cd5\uff0c\u5982\u679c\u60f3\u8981\u81ea\u5b9a\u4e49\u4fdd\u5b58\u89c4\u5219\uff0c\u4e5f\u53ef\u4ee5\u5728\u6b64\u5904\u8fdb\u884c\u5904\u7406\u3002 3.3 \u6821\u9a8c+\u5e8f\u5217\u5316 \u5982\u679c\u4e00\u4e2a\u8bf7\u6c42\uff0c\u5373\u9700\u8981\u505a \u8bf7\u6c42\u6821\u9a8c \u53c8\u9700\u8981\u505a \u5e8f\u5217\u5316 \uff0c\u600e\u4e48\u641e\u5462\uff1f\u4f8b\u5982\uff1a\u65b0\u589e\u6570\u636e\u3002 \u5b57\u6bb5\uff0c\u53ef\u4ee5\u901a\u8fc7read_only \u3001write_only\u3001required \u6765\u8bbe\u5b9a is_valid\u6821\u9a8c data\u8c03\u7528\u5e8f\u5217\u5316 3.3.1 \u4e8c\u5408\u4e00 # models.py from django.db import models class Role(models.Model): \"\"\" \u89d2\u8272\u8868 \"\"\" title = models.CharField(verbose_name=\"\u540d\u79f0\", max_length=32) class Department(models.Model): \"\"\" \u90e8\u95e8\u8868 \"\"\" title = models.CharField(verbose_name=\"\u540d\u79f0\", max_length=32) class UserInfo(models.Model): \"\"\" \u7528\u6237\u8868 \"\"\" level_choices = ((1, \"\u666e\u901a\u4f1a\u5458\"), (2, \"VIP\"), (3, \"SVIP\"),) level = models.IntegerField(verbose_name=\"\u7ea7\u522b\", choices=level_choices, default=1) username = models.CharField(verbose_name=\"\u7528\u6237\u540d\", max_length=32) password = models.CharField(verbose_name=\"\u5bc6\u7801\", max_length=64) age = models.IntegerField(verbose_name=\"\u5e74\u9f84\", default=0) email = models.CharField(verbose_name=\"\u90ae\u7bb1\", max_length=64, null=True, blank=True) token = models.CharField(verbose_name=\"TOKEN\", max_length=64, null=True, blank=True) depart = models.ForeignKey(verbose_name=\"\u90e8\u95e8\", to=\"Department\", on_delete=models.CASCADE, null=True, blank=True) roles = models.ManyToManyField(verbose_name=\"\u89d2\u8272\", to=\"Role\") # urls.py from django.urls import path, re_path, include from app01 import views urlpatterns = [ path('api/users/', views.UserView.as_view()), ] # views.py from django.core.validators import EmailValidator from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers from app01 import models class DepartModelSerializer(serializers.ModelSerializer): class Meta: model = models.Department fields = ['id', \"title\"] extra_kwargs \"id\": {\"read_only\": False}, # \u6570\u636e\u9a8c\u8bc1 \"title\": {\"read_only\": True} # \u5e8f\u5217\u5316 } class RoleModelSerializer(serializers.ModelSerializer): class Meta: model = models.Role fields = ['id', \"title\"] extra_kwargs = { \"id\": {\"read_only\": False}, # \u6570\u636e\u9a8c\u8bc1 \"title\": {\"read_only\": True} # \u5e8f\u5217\u5316 } class UserModelSerializer(serializers.ModelSerializer): level_text = serializers.CharField(source=\"get_level_display\", read_only=True) # Serializer\u5d4c\u5957\uff0c\u4e0d\u662fread_only\uff0c\u4e00\u5b9a\u8981\u81ea\u5b9a\u4e49create\u548cupdate\uff0c\u81ea\u5b9a\u4e49\u65b0\u589e\u548c\u66f4\u65b0\u7684\u903b\u8f91\u3002 depart = DepartModelSerializer(many=False) roles = RoleModelSerializer(many=True) extra = serializers.SerializerMethodField(read_only=True) email2 = serializers.EmailField(write_only=True) # \u6570\u636e\u6821\u9a8c\uff1ausername\u3001email\u3001email2\u3001\u90e8\u95e8\u3001\u89d2\u8272\u4fe1\u606f class Meta: model = models.UserInfo fields = [ \"username\", \"age\", \"email\", \"level_text\", \"depart\", \"roles\", \"extra\", \"email2\" ] extra_kwargs = { \"age\": {\"read_only\": True}, \"email\": {\"validators\": [EmailValidator, ]}, } def get_extra(self, obj): return 666 def validate_username(self, value): return value # \u65b0\u589e\u52a0\u6570\u636e\u65f6 def create(self, validated_data): \"\"\" \u5982\u679c\u6709\u5d4c\u5957\u7684Serializer\uff0c\u5728\u8fdb\u884c\u6570\u636e\u6821\u9a8c\u65f6\uff0c\u53ea\u6709\u4e24\u79cd\u9009\u62e9\uff1a 1. \u5c06\u5d4c\u5957\u7684\u5e8f\u5217\u5316\u8bbe\u7f6e\u6210 read_only 2. \u81ea\u5b9a\u4e49create\u548cupdate\u65b9\u6cd5\uff0c\u81ea\u5b9a\u4e49\u65b0\u5efa\u548c\u66f4\u65b0\u7684\u903b\u8f91 \u6ce8\u610f\uff1a\u7528\u6237\u7aef\u63d0\u4ea4\u6570\u636e\u7684\u683c\u5f0f\u3002 \"\"\" depart_id = validated_data.pop('depart')['id'] role_id_list = [ele['id'] for ele in validated_data.pop('roles')] # \u65b0\u589e\u7528\u6237\u8868 validated_data['depart_id'] = depart_id user_object = models.UserInfo.objects.create(**validated_data) # \u5728\u7528\u6237\u8868\u548c\u89d2\u8272\u8868\u7684\u5173\u8054\u8868\u4e2d\u6dfb\u52a0\u5bf9\u5e94\u5173\u7cfb user_object.roles.add(*role_id_list) return user_object class UserView(APIView): \"\"\" \u7528\u6237\u7ba1\u7406 \"\"\" def get(self, request): \"\"\" \u6dfb\u52a0\u7528\u6237 \"\"\" queryset = models.UserInfo.objects.all() ser = UserModelSerializer(instance=queryset, many=True) return Response({\"code\": 0, 'data': ser.data}) def post(self, request): \"\"\" \u6dfb\u52a0\u7528\u6237 \"\"\" ser = UserModelSerializer(data=request.data) if not ser.is_valid(): return Response({'code': 1006, 'data': ser.errors}) ser.validated_data.pop('email2') instance = ser.save(age=18, password=\"123\", depart_id=1) # \u65b0\u589e\u4e4b\u540e\u7684\u4e00\u4e2a\u5bf9\u8c61\uff08\u5185\u90e8\u8c03\u7528UserModelSerializer\u8fdb\u884c\u5e8f\u5217\u5316\uff09 print(instance) # ser = UserModelSerializer(instance=instance, many=False) # ser.data return Response({'code': 0, 'data': ser.data}) 3.3.2 \u72ec\u7acb\u5206\u5f00 \u5728\u6267\u884c\u4e0d\u540c\u529f\u80fd\u65f6\uff0c\u5206\u522b\u4f7f\u7528\u4e0d\u540c\u7684\u5e8f\u5217\u5316\u5668\u6765\u8fdb\u884c\u5904\u7406\u4e1a\u52a1\u3002 GET\u8bf7\u6c42\uff0c\u8fd4\u56de\u6570\u636e\uff08\u5e8f\u5217\u5316A\uff09 POST\u8bf7\u6c42\uff0c\u63d0\u4ea4\u6570\u636e\uff08\u5e8f\u5217\u5316A\uff09 + \u8fd4\u56de\u6570\u636e\uff08\u5e8f\u5217\u5316B\uff09\u3002 \u5e95\u5c42\u6e90\u7801\u5b9e\u73b0\uff1a \u5e8f\u5217\u5316\u7684\u5e95\u5c42\u6e90\u7801\u5b9e\u73b0\u6709\u522b\u4e8e\u4e0a\u8ff0\u5176\u4ed6\u7684\u7ec4\u4ef6\uff0c\u5e8f\u5217\u5316\u5668\u76f8\u5173\u7c7b\u7684\u5b9a\u4e49\u548c\u6267\u884c\u90fd\u662f\u5728\u89c6\u56fe\u4e2d\u88ab\u8c03\u7528\u7684\uff0c\u6240\u4ee5\u6e90\u7801\u7684\u5206\u6790\u8fc7\u7a0b\u53ef\u4ee5\u5206\u4e3a\uff1a\u5b9a\u4e49\u7c7b\u3001\u5e8f\u5217\u5316\u3001\u6570\u636e\u6821\u9a8c\u3002 \u6e90\u78011\uff1a\u5e8f\u5217\u5316\u8fc7\u7a0b \u6e90\u78012\uff1a\u6570\u636e\u6821\u9a8c\u8fc7\u7a0b 4.\u5206\u9875 \u5728\u67e5\u770b\u6570\u636e\u5217\u8868\u7684API\u4e2d\uff0c\u5982\u679c \u6570\u636e\u91cf \u6bd4\u8f83\u5927\uff0c\u80af\u5b9a\u4e0d\u80fd\u628a\u6240\u6709\u7684\u6570\u636e\u90fd\u5c55\u793a\u7ed9\u7528\u6237\uff0c\u800c\u9700\u8981\u901a\u8fc7\u5206\u9875\u5c55\u793a\u3002 \u5728drf\u4e2d\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5206\u9875\u5148\u5173\u7c7b\uff1a BasePagination\uff0c\u5206\u9875\u57fa\u7c7b PageNumberPagination(BasePagination) \u652f\u6301 /accounts/?page=4&page_size=100 \u683c\u5f0f\u7684\u5206\u9875 LimitOffsetPagination(BasePagination) \u652f\u6301 ?offset=100&limit=10 \u683c\u5f0f\u7684\u5206\u9875 CursorPagination(BasePagination) \u652f\u6301 \u4e0a\u4e00\u4e0b & \u4e0b\u4e00\u9875 \u683c\u5f0f\u7684\u5206\u9875\uff08\u4e0d\u5e38\u7528\uff09 4.1 PageNumberPagination 4.2 LimitOffsetPagination 5.\u521d\u8bc6\u89c6\u56fe APIView`\u662fdrf\u4e2d \u201c\u9876\u5c42\u201d \u7684\u89c6\u56fe\u7c7b\uff0c\u5728\u4ed6\u7684\u5185\u90e8\u4e3b\u8981\u5b9e\u73b0drf\u57fa\u7840\u7684\u7ec4\u4ef6\u7684\u4f7f\u7528\uff0c\u4f8b\u5982\uff1a\u7248\u672c\u3001\u8ba4\u8bc1\u3001\u6743\u9650\u3001\u9650\u6d41\u7b49\u3002 # urls.py from django.urls import path, re_path, include from app01 import views urlpatterns = [ path('api/users/', views.UserView.as_view()), path('api/users/<int:pk>/', views.UserDetailView.as_view()), # \u5176\u4ed6\u5206\u9875\u3001\u7b5b\u9009\u7b49\u6761\u4ef6\uff0c\u90fd\u662f\u8981\u653e\u5728 ?page=1&size=9\u6765 \u4f20\u53c2\u3002 ] # views.py from rest_framework.views import APIView from rest_framework.response import Response class UserView(APIView): # \u8ba4\u8bc1\u3001\u6743\u9650\u3001\u9650\u6d41\u7b49 def get(self, request): # \u4e1a\u52a1\u903b\u8f91\uff1a\u67e5\u770b\u5217\u8868 return Response({\"code\": 0, 'data': \"...\"}) def post(self, request): # \u4e1a\u52a1\u903b\u8f91\uff1a\u65b0\u5efa return Response({'code': 0, 'data': \"...\"}) class UserDetailView(APIView): # \u8ba4\u8bc1\u3001\u6743\u9650\u3001\u9650\u6d41\u7b49 def get(self, request,pk): # \u4e1a\u52a1\u903b\u8f91\uff1a\u67e5\u770b\u67d0\u4e2a\u6570\u636e\u7684\u8be6\u7ec6 return Response({\"code\": 0, 'data': \"...\"}) def put(self, request,pk): # \u4e1a\u52a1\u903b\u8f91\uff1a\u5168\u90e8\u4fee\u6539 return Response({'code': 0, 'data': \"...\"}) def patch(self, request,pk): # \u4e1a\u52a1\u903b\u8f91\uff1a\u5c40\u90e8\u4fee\u6539 return Response({'code': 0, 'data': \"...\"}) def delete(self, request,pk): # \u4e1a\u52a1\u903b\u8f91\uff1a\u5220\u9664 return Response({'code': 0, 'data': \"...\"})","title":"day14 drf-\u4e2d\u7bc7"},{"location":"Django/drf/day14drf/#day14-drf-","text":"\u4e0a\u8282\u5185\u5bb9\uff1a\u524d\u540e\u7aef\u5206\u79bb\u6982\u8ff0\u3001\u7eaf\u51c0\u9879\u76ee\u3001request\u5bf9\u8c61\u3001\u8ba4\u8bc1\u3001\u6743\u9650\u3001\u9650\u6d41\u7b49\u3002 \u672c\u8282\u5185\u5bb9\uff1a \u7248\u672c \uff0c\u5728\u8bf7\u6c42\u4e2d\u643a\u5e26\u7248\u672c\u53f7\uff0c\u4fbf\u4e8e\u540e\u7eedAPI\u7684\u66f4\u65b0\u8fed\u4ee3\u3002 http://www.5xclass/api/v1/info http://www.5xclass/api/v2/info \u89e3\u6790\u5668 \uff0c\u8bfb\u53d6\u4e0d\u540c\u683c\u5f0f\u6570\u636e\u8fdb\u884c\u89e3\u6790\u7136\u540e\u8d4b\u503c\u7ed9request.data\u7b49\u5bf9\u8c61\u4e2d\u3002 user=wupeiqi&age=123 {\"user\":\"wupeiqi\",\"age\":123} \u5e8f\u5217\u5316\u5668 \uff0c\u5c06ORM\u83b7\u53d6\u7684\u6570\u636e\u5e93QuerySet\u6216\u6570\u636e\u5bf9\u8c61 \u5e8f\u5217\u5316 \u6210JSON\u683c\u5f0f + \u8bf7\u6c42\u6570\u636e\u683c\u5f0f\u6821\u9a8c \u3002\uff08\u6700\u91cd\u8981\uff09 \u5206\u9875 \uff0c\u5bf9ORM\u4e2d\u83b7\u53d6\u7684\u6570\u636e\u8fdb\u884c\u5206\u9875\u5904\u7406\uff0c\u5206\u6279\u8fd4\u56de\u7ed9\u7528\u6237\u3002 \u89c6\u56fe \uff0cdrf\u4e2d\u63d0\u4f9b\u4e86APIView+\u5176\u4ed6\u89c6\u56fe\u7c7b\u8ba9\u6211\u4eec\u6765\u7ee7\u627f\u3002","title":"day14 drf-\u4e2d\u7bc7"},{"location":"Django/drf/day14drf/#1","text":"\u5728restful\u89c4\u8303\u4e2d\u8981\u53bb\uff0c\u540e\u7aef\u7684API\u4e2d\u9700\u8981\u4f53\u73b0\u7248\u672c\u3002","title":"1.\u7248\u672c"},{"location":"Django/drf/day14drf/#11-get","text":"# settings.py REST_FRAMEWORK = { \"VERSION_PARAM\": \"v\", \"DEFAULT_VERSION\": \"v1\", \"ALLOWED_VERSIONS\": [\"v1\", \"v2\", \"v3\"], \"DEFAULT_VERSIONING_CLASS\":\"rest_framework.versioning.QueryParameterVersioning\" } \u6e90\u7801\u6267\u884c\u6d41\u7a0b\uff1a","title":"1.1 GET\u53c2\u6570\u4f20\u9012"},{"location":"Django/drf/day14drf/#12-url","text":"","title":"1.2 URL\u8def\u5f84\u4f20\u9012\uff08*\uff09"},{"location":"Django/drf/day14drf/#13","text":"","title":"1.3 \u8bf7\u6c42\u5934\u4f20\u9012"},{"location":"Django/drf/day14drf/#14-url","text":"\u5728\u6bcf\u4e2a\u7248\u672c\u5904\u7406\u7684\u7c7b\u4e2d\u8fd8\u5b9a\u4e49\u4e86 reverse \u65b9\u6cd5\uff0c\u4ed6\u662f\u7528\u6765\u53cd\u5411\u751f\u6210URL\u5e76\u643a\u5e26\u76f8\u5173\u7684\u7684\u7248\u672c\u4fe1\u606f\u7528\u7684\uff0c\u4f8b\u5982\uff1a","title":"1.4 \u53cd\u5411\u751f\u6210URL"},{"location":"Django/drf/day14drf/#2","text":"\u4f7f\u7528 request.data \u83b7\u53d6 \u8bf7\u6c42\u4f53 \u4e2d\u7684\u6570\u636e\u3002 \u8fd9\u4e2a reqeust.data \u7684\u6570\u636e\u600e\u4e48\u6765\u7684\u5462\uff1f\u5176\u5b9e\u5728drf\u5185\u90e8\u662f\u7531\u89e3\u6790\u5668\uff0c\u6839\u636e\u8bf7\u6c42\u8005\u4f20\u5165\u7684\u6570\u636e\u683c\u5f0f + \u8bf7\u6c42\u5934\u6765\u8fdb\u884c\u5904\u7406\u3002","title":"2.\u89e3\u6790\u5668"},{"location":"Django/drf/day14drf/#21-jsonparser","text":"","title":"2.1 JSONParser \uff08*\uff09"},{"location":"Django/drf/day14drf/#22-formparser","text":"","title":"2.2 FormParser"},{"location":"Django/drf/day14drf/#23-multipartparser","text":"<!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <form action=\"http://127.0.0.1:8000/test/\" method=\"post\" enctype=\"multipart/form-data\"> <input type=\"text\" name=\"user\" /> <input type=\"file\" name=\"img\"> <input type=\"submit\" value=\"\u63d0\u4ea4\"> </form> </body> </html>","title":"2.3 MultiPartParser\uff08*\uff09"},{"location":"Django/drf/day14drf/#24-fileuploadparser","text":"\u89e3\u6790\u5668\u53ef\u4ee5\u8bbe\u7f6e\u591a\u4e2a\uff0c\u9ed8\u8ba4\u89e3\u6790\u5668\uff1a from rest_framework.views import APIView from rest_framework.response import Response from rest_framework.parsers import MultiPartParser, JSONParser, FormParser class UserView(APIView): def post(self, request): print(request.content_type) print(request.data) return Response(\"...\")","title":"2.4 FileUploadParser\uff08*\uff09"},{"location":"Django/drf/day14drf/#3","text":"","title":"3.\u5e8f\u5217\u5316\u5668"},{"location":"Django/drf/day14drf/#31","text":"","title":"3.1 \u5e8f\u5217\u5316\u6570\u636e"},{"location":"Django/drf/day14drf/#311-serializer","text":"from django.db import models class Role(models.Model): title = models.CharField(verbose_name=\"\u6807\u9898\", max_length=32) order = models.IntegerField(verbose_name=\"\u987a\u5e8f\") from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers from api import models class InfoSerializer(serializers.Serializer): id = serializers.IntegerField() title = serializers.CharField() order = serializers.IntegerField() class InfoView(APIView): def get(self, request): # 1.\u6570\u636e\u5e93\u83b7\u53d6\u591a\u6761\u6570\u636e # queryset = models.Role.objects.all() # ser = InfoSerializer(instance=queryset, many=True) # 2.\u6570\u636e\u5e93\u83b7\u53d6\u5355\u6761\u6570\u636e instance = models.Role.objects.all().first() ser = InfoSerializer(instance=instance, many=False) print(type(ser.data), ser.data) return Response(ser.data)","title":"3.1.1 Serializer"},{"location":"Django/drf/day14drf/#312-modelserializer","text":"from django.db import models class Role(models.Model): title = models.CharField(verbose_name=\"\u6807\u9898\", max_length=32) order = models.IntegerField(verbose_name=\"\u987a\u5e8f\") from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers from api import models class InfoSerializer(serializers.ModelSerializer): class Meta: model = models.Role # fields = \"__all__\" # fields = ['id', 'title', 'order'] exclude = [\"id\"] class InfoView(APIView): def get(self, request): # 1.\u6570\u636e\u5e93\u83b7\u53d6\u591a\u6761\u6570\u636e # queryset = models.Role.objects.all() # ser = InfoSerializer(instance=queryset, many=True) # 2.\u6570\u636e\u5e93\u83b7\u53d6\u5355\u6761\u6570\u636e instance = models.Role.objects.all().first() ser = InfoSerializer(instance=instance, many=False) print(type(ser.data), ser.data) return Response(ser.data) \u5f88\u663e\u7136\uff0c\u5982\u679c\u8981\u5bf9\u6570\u636e\u8868\u4e2d\u7684\u5b57\u6bb5\u8fdb\u884c\u5e8f\u5217\u5316\uff0c\u4f7f\u7528ModelModelSerializer\u662f\u8981\u6bd4Serializer\u66f4\u7b80\u6d01\u4e00\u4e9b\u7684\u3002","title":"3.1.2 ModelSerializer"},{"location":"Django/drf/day14drf/#313","text":"\u5728 ModelModelSerializer \u548c Serializer \u4e2d\u90fd\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5b57\u6bb5\uff0c\u5e76\u4f20\u5165\u4e00\u4e9b\u76f8\u5173\u53c2\u6570\u3002 from django.db import models class Role(models.Model): title = models.CharField(verbose_name=\"\u6807\u9898\", max_length=32) order = models.IntegerField(verbose_name=\"\u987a\u5e8f\") class UserInfo(models.Model): name = models.CharField(verbose_name=\"\u59d3\u540d\", max_length=32) gender = models.SmallIntegerField(verbose_name=\"\u6027\u522b\", choices=((1, \"\u7537\"), (2, \"\u5973\"))) role = models.ForeignKey(verbose_name=\"\u89d2\u8272\", to=\"Role\", on_delete=models.CASCADE) ctime = models.DateTimeField(verbose_name=\"\u521b\u5efa\u65f6\u95f4\", auto_now_add=True) from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers from api import models class InfoSerializer(serializers.ModelSerializer): gender = serializers.CharField(source=\"get_gender_display\") role = serializers.CharField(source=\"role.title\") ctime = serializers.DateTimeField(format=\"%Y-%m-%d\") other_name = serializers.CharField(source=\"name\") mine = serializers.SerializerMethodField() class Meta: model = models.UserInfo fields = ['id', 'name', 'gender', \"role\", 'ctime', \"other_name\", \"mine\"] def get_mine(self, obj): return \"x-x-{}\".format(obj.name) class InfoView(APIView): def get(self, request): queryset = models.UserInfo.objects.all() ser = InfoSerializer(instance=queryset, many=True) print(type(ser.data), ser.data) return Response(ser.data)","title":"3.1.3 \u5b57\u6bb5\u548c\u53c2\u6570"},{"location":"Django/drf/day14drf/#314","text":"\u4e3b\u8981\u662fORM\u7c7b\u4e2d\u5bf9\u5e94 ForeignKey \u548c ManyToManyField \u7684\u5b57\u6bb5\u8fdb\u884c\u5e8f\u5217\u5316\u3002 \u57fa\u4e8e SerializerMethodField \u81ea\u5b9a\u4e49\u65b9\u6cd5\u5bf9\u5173\u8054\u8868\u6570\u636e\u8fdb\u884c\u5e8f\u5217\u5316 \u57fa\u4e8e\u5d4c\u5957\u7684\u5e8f\u5217\u5316\u7c7b\u5b9e\u73b0 from django.db import models class Role(models.Model): title = models.CharField(verbose_name=\"\u6807\u9898\", max_length=32) order = models.IntegerField(verbose_name=\"\u987a\u5e8f\") class Tag(models.Model): caption = models.CharField(verbose_name=\"\u540d\u79f0\", max_length=32) class UserInfo(models.Model): name = models.CharField(verbose_name=\"\u59d3\u540d\", max_length=32) gender = models.SmallIntegerField(verbose_name=\"\u6027\u522b\", choices=((1, \"\u7537\"), (2, \"\u5973\"))) role = models.ForeignKey(verbose_name=\"\u89d2\u8272\", to=\"Role\", on_delete=models.CASCADE) ctime = models.DateTimeField(verbose_name=\"\u521b\u5efa\u65f6\u95f4\", auto_now_add=True) tags = models.ManyToManyField(verbose_name=\"\u6807\u7b7e\", to=\"Tag\") from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers from api import models class RoleSerializer(serializers.ModelSerializer): class Meta: model = models.Role # fields = \"__all__\" fields = [\"id\", 'title'] class TagSerializer(serializers.ModelSerializer): class Meta: model = models.Tag fields = \"__all__\" class InfoSerializer(serializers.ModelSerializer): role = RoleSerializer() tags = TagSerializer(many=True) class Meta: model = models.UserInfo fields = ['id', 'name', \"role\", \"tags\"] class InfoView(APIView): def get(self, request): queryset = models.UserInfo.objects.all() ser = InfoSerializer(instance=queryset, many=True) print(type(ser.data), ser.data) return Response(ser.data)","title":"3.1.4 \u5e8f\u5217\u5316\u7c7b\u5d4c\u5957"},{"location":"Django/drf/day14drf/#315","text":"from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers from api import models class MySerializer(serializers.Serializer): more = serializers.SerializerMethodField() def get_more(self, obj): return \"123\" class InfoSerializer(serializers.ModelSerializer, MySerializer): class Meta: model = models.UserInfo fields = [\"id\", \"name\", 'more'] class InfoView(APIView): def get(self, request): instance = models.UserInfo.objects.all().first() ser = InfoSerializer(instance=instance, many=False) print(type(ser.data), ser.data) return Response(ser.data)","title":"3.1.5 \u5e8f\u5217\u5316\u7c7b\u7ee7\u627f"},{"location":"Django/drf/day14drf/#316","text":"\u58f0\u660e\uff1a\u638c\u63e1\u4e0a\u8ff0\u77e5\u8bc6\u70b9\uff0c\u5df2\u7ecf\u53ef\u4ee5\u8ba9\u4f60\u5b8c\u6210\u5de5\u4f5c\u4e2d\u5e38\u89c1\u7684\u4efb\u52a1\u3002\u63a5\u4e0b\u6765\u7684\u77e5\u8bc6\u70b9\uff0c\u53ea\u662f\u4f5c\u4e3a\u6269\u5c55\uff0c\u53ef\u4ee5\u7565\u8fc7\u3002","title":"3.1.6 \u5e95\u5c42\u5b9e\u73b0\u539f\u7406\uff08\u6269\u5c55\uff09"},{"location":"Django/drf/day14drf/#1_1","text":"\u5bf9\u8c61\u662f\u901a\u8fc7\u7c7b\u5b9e\u4f8b\u5316\u51fa\u6765\u7684\u3002 class Foo(object): pass # \u7b2c1\u6b65\uff1a\u8c03\u7528Foo\u7684__new__\u65b9\u6cd5\u521b\u5efa\u7a7a\u5bf9\u8c61\u3002 # \u7b2c2\u6b65\uff1a\u8c03\u7528Foo\u7684__init__\u65b9\u6cd5\u5bf9\u5bf9\u8c61\u8fdb\u884c\u521d\u59cb\u5316\u3002 obj = Foo() \u7c7b\u662f\u8c01\u521b\u5efa\u7684\uff1f\u662f\u7531type\u521b\u5efa\u51fa\u6765\u7684\uff08\u9ed8\u8ba4\uff09\u3002 class Foo(object): v1 = 123 def func(self): return 666 Foo = type(\"Foo\",(object,),{ \"v1\":123, \"func\":lambda self:666 }) \u5b9a\u4e49\u7c7b\u65f6\u52a0\u5165metaclass\u6307\u5b9a\u5f53\u524d\u7c7b\u7684\u521b\u9020\u8005\u3002 # \u7531type\u521b\u5efaFoo\u7c7b\u578b class Foo(object): pass # \u7531`\u4e1c\u897f` \u521b\u5efaFoo\u7c7b\u578b class Foo(object,metaclass=\u4e1c\u897f): pass \u6307\u5b9a\u5143\u7c7b(metaclass) \u6765\u521b\u5efa\u7c7b\u3002 class MyType(type): def __new__(cls, *args, **kwargs): new_cls = super().__new__(cls, *args, **kwargs) print(\"\u521b\u5efa\u7c7b\uff1a\", new_cls) return new_cls class Foo(metaclass=MyType): pass class MyType(type): def __init__(self, *args, **kwargs): print(\"\u7b2c2\u6b65\uff1a\u521d\u59cb\u5316\u7c7b\u6210\u5458\uff1a\", args, **kwargs) super().__init__(*args, **kwargs) def __new__(cls, *args, **kwargs): new_cls = super().__new__(cls, *args, **kwargs) print(\"\u7b2c1\u6b65\uff1a\u521b\u5efa\u7c7b\uff1a\", new_cls) return new_cls class Foo(metaclass=MyType): v1 = 123 def func(self): pass class MyType(type): def __init__(cls, *args, **kwargs): print(\"\u7b2c2\u6b65\uff1a\u521d\u59cb\u5316\u7c7b\u6210\u5458\uff1a\", args, **kwargs) super().__init__(*args, **kwargs) def __new__(cls, *args, **kwargs): new_cls = super().__new__(cls, *args, **kwargs) print(\"\u7b2c1\u6b65\uff1a\u521b\u5efa\u7c7b\uff1a\", new_cls) return new_cls def __call__(cls, *args, **kwargs): print(\"\u7b2c3\u6b65\uff1a\u521b\u5efa\u5bf9\u8c61&\u521d\u59cb\u5316\u5bf9\u8c61\", cls) # 1.\u8c03\u7528\u81ea\u5df1\u90a3\u4e2a\u7c7b\u7684 __new__ \u65b9\u6cd5\u53bb\u521b\u5efa\u5bf9\u8c61 new_object = cls.__new__(cls, *args, **kwargs) # 2.\u8c03\u7528\u4f60\u81ea\u5df1\u90a3\u4e2a\u7c7b __init__\u653e\u53d1\u53bb\u521d\u59cb\u5316 cls.__init__(new_object, *args, **kwargs) return new_object class Foo(metaclass=MyType): v1 = 123 def func(self): pass obj = Foo()","title":"1.\u5143\u7c7b"},{"location":"Django/drf/day14drf/#2_1","text":"from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers from api import models class InfoSerializer(serializers.Serializer): id = serializers.IntegerField() title = serializers.CharField() order = serializers.IntegerField \u5bf9\u4e8e\u4e0a\u8ff0\u4ee3\u7801\uff0c\u5728\u7c7b InfoSerializer \u521b\u5efa\u4e4b\u524d\uff0c\u5176\u5185\u90e8 id\u3001title\u3001order \u5b57\u6bb5\u4f1a\u5148\u8fdb\u884c\u5b9e\u4f8b\u5316\u5bf9\u8c61\u3002 \u800c\u8fd9\u4e9b IntegerField \u3001 CharField \u7b49\u5b57\u6bb5\u7684\u7ee7\u627f\u5173\u7cfb\u5982\u4e0b\uff1a class Field: _creation_counter = 0 class IntegerField(Field): pass class CharField(Field): pass class DateTimeField(Field): pass \u5728 IntegerField \u3001 CharField \u7b49\u5b57\u6bb5\u5b9e\u4f8b\u5316\u65f6\uff0c\u5185\u90e8\u4f1a\u7ef4\u62a4\u4e00\u4e2a\u8ba1\u6570\u5668\uff0c\u6765\u8868\u793a\u5b9e\u4f8b\u5316\u7684\u5148\u540e\u987a\u5e8f\u3002 class Field: _creation_counter = 0 def __init__(self, *, read_only=False...): self._creation_counter = Field._creation_counter Field._creation_counter += 1 class IntegerField(Field): def __init__(self, **kwargs): ... super().__init__(**kwargs) class CharField(Field): def __init__(self, **kwargs): ... super().__init__(**kwargs) from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers from api import models class InfoSerializer(serializers.Serializer): id = serializers.IntegerField() # \u5bf9\u8c61\uff0c\u5185\u90e8_creation_counter=0 title = serializers.CharField() # \u5bf9\u8c61\uff0c\u5185\u90e8_creation_counter=1 order = serializers.IntegerField # \u5bf9\u8c61\uff0c\u5185\u90e8_creation_counter=2 \u6ce8\u610f\uff1a\u540e\u7eed\u4f1a\u901a\u8fc7\u8fd9\u4e2a\u8ba1\u6570\u5668\u6392\u5e8f\uff0c\u4ee5\u6b64\u6765\u5b9e\u73b0\u5b57\u6bb5\u7684\u5148\u540e\u6267\u884c\u3002","title":"2.\u5b9e\u4f8b\u5316\u5b57\u6bb5\u5bf9\u8c61"},{"location":"Django/drf/day14drf/#3_1","text":"class SerializerMetaclass(type): def __new__(cls, name, bases, attrs): attrs['_declared_fields'] = cls._get_declared_fields(bases, attrs) return super().__new__(cls, name, bases, attrs) class Serializer(BaseSerializer, metaclass=SerializerMetaclass): ... class ModelSerializer(Serializer): ... class RoleSerializer(serializers.ModelSerializer): gender = serializers.CharField(source=\"get_gender_display\") class Meta: model = models.Role fields = [\"id\", 'title',\"gender\"] \u6ce8\u610f\uff1a\u7236\u7c7b\u4e2d\u6307\u5b9ametaclass\uff0c\u5b50\u7c7b\u4e5f\u4f1a\u7531\u6b64metaclass\u6765\u521b\u5efa\u7c7b\u3002","title":"3.\u5e8f\u5217\u5316\u7c7b\u7684\u521b\u5efa"},{"location":"Django/drf/day14drf/#4_declared_fields","text":"\u5728\u521b\u5efa\u7c7b\u4e4b\u524d\uff0c\u5143\u7c7b\u7684 __new__ \u65b9\u6cd5\u5728\u7c7b\u6210\u5458\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a _declared_fields \uff08\u7c7b\u53d8\u91cf\uff09\u3002 class SerializerMetaclass(type): @classmethod def _get_declared_fields(cls, bases, attrs): # 1.\u5faa\u73af\u83b7\u53d6\u7c7b\u4e2d\u5b9a\u4e49\u6240\u6709\u7684\u6210\u5458\uff08\u7c7b\u53d8\u91cf\u3001\u65b9\u6cd5\uff09\uff0c\u7b5b\u9009\u51fa\u7ee7\u627f\u81eaFields\u7684\u7c7b\u7684\u5b57\u6bb5\u5bf9\u8c61\u3002 # \u6ce8\u610f\uff1a\u540c\u65f6\u4f1a\u5c06\u5b57\u6bb5\u5728\u5f53\u524d\u7c7b\u6210\u5458\u4e2d\u79fb\u9664 fields = [ (field_name, attrs.pop(field_name)) for field_name, obj in list(attrs.items()) if isinstance(obj, Field) ] # 2.\u6839\u636e\u5b57\u6bb5\u7684_creation_counter\u6392\u5e8f fields.sort(key=lambda x: x[1]._creation_counter) # Ensures a base class field doesn't override cls attrs, and maintains # field precedence when inheriting multiple parents. e.g. if there is a # class C(A, B), and A and B both define 'field', use 'field' from A. known = set(attrs) def visit(name): known.add(name) return name # 3.\u8bfb\u53d6\u7236\u7c7b\u4e2d\u7684_declared_fields\u5b57\u6bb5\uff08\u7236\u7c7b\u5148\u4e8e\u5b50\u7c7b\u521b\u5efa\u3001\u5e8f\u5217\u5316\u7c7b\u652f\u6301\u7ee7\u627f\uff09 base_fields = [ (visit(name), f) for base in bases if hasattr(base, '_declared_fields') for name, f in base._declared_fields.items() if name not in known ] # 4.\u5c06\u7236\u7c7b\u548c\u5b50\u7c7b\u4e2d\u7684\u5b57\u6bb5\u6253\u5305\u8fd4\u56de\uff0c\u8d4b\u503c\u7ed9\u5f53\u524d\u7c7b\u7684_declared_fields return OrderedDict(base_fields + fields) def __new__(cls, name, bases, attrs): attrs['_declared_fields'] = cls._get_declared_fields(bases, attrs) return super().__new__(cls, name, bases, attrs) class Serializer(BaseSerializer, metaclass=SerializerMetaclass): ... class ModelSerializer(Serializer): ... class RoleSerializer(serializers.ModelSerializer): gender = serializers.CharField(source=\"get_gender_display\") class Meta: model = models.Role fields = [\"id\", 'title',\"gender\"] \u6240\u4ee5\uff0c\u5f53\u7c7b\u5e8f\u5217\u5316\u7c7b\u52a0\u8f7d\u5b8c\u6bd5\u540e\uff0c\u7c7b\u4e2d\u6210\u5458\uff1a \u5254\u9664\uff0c\u5b57\u6bb5\u5bf9\u8c61\u3002 RoleSerializer.gender \u4e0d\u5b58\u5728 \u65b0\u589e\uff0c_declared_fields\uff0c\u662f OrderedDict \u7c7b\u578b\u4e14\u5185\u90e8\u5305\u542b\u6240\u6709\u5b57\u6bb5\u3002 RoleSerializer._declared_fields = { \"gender\": CharField\u5bf9\u8c61 } \u5176\u4ed6\uff0c\u4fdd\u7559\u539f\u6837\u3002 RoleSerializer.Meta","title":"4._declared_fields"},{"location":"Django/drf/day14drf/#5","text":"\u5728\u89c6\u56fe\u7684\u65b9\u6cd5\uff0c\u4f7f\u7528\u5e8f\u5217\u5316\u7c7b\u5bf9 orm \u83b7\u53d6\u7684QuerySet\u6216\u5bf9\u8c61\u8fdb\u884c\u5e8f\u5217\u5316\u65f6\uff0c\u9700\u8981\u5148\u8fdb\u884c\u521d\u59cb\u5316\u7c7b\u7684\u5bf9\u8c61\u3002 class SerializerMetaclass(type): def __new__(cls, name, bases, attrs): attrs['_declared_fields'] = cls._get_declared_fields(bases, attrs) return super().__new__(cls, name, bases, attrs) class BaseSerializer(Field): def __init__(self, instance=None, data=empty, **kwargs): self.instance = instance if data is not empty: self.initial_data = data self.partial = kwargs.pop('partial', False) self._context = kwargs.pop('context', {}) kwargs.pop('many', None) super().__init__(**kwargs) def __new__(cls, *args, **kwargs): if kwargs.pop('many', False): # \u8c03\u7528 many_init \u65b9\u6cd5\u83b7\u53d6\u5176\u4ed6\u5bf9\u8c61\uff0c\u8fd4\u56de return cls.many_init(*args, **kwargs) # \u521b\u5efa\u5f53\u524d\u7c7b\u7684\u7a7a\u5bf9\u8c61\uff0c\u8fd4\u56de return super().__new__(cls, *args, **kwargs) @classmethod def many_init(cls, *args, **kwargs): ... child_serializer = cls(*args, **kwargs) list_kwargs = { 'child': child_serializer, } meta = getattr(cls, 'Meta', None) list_serializer_class = getattr(meta, 'list_serializer_class', ListSerializer) return list_serializer_class(*args, **list_kwargs) class Serializer(BaseSerializer, metaclass=SerializerMetaclass): ... class ModelSerializer(Serializer): ... class RoleSerializer(serializers.ModelSerializer): gender = serializers.CharField(source=\"get_gender_display\") class Meta: model = models.Role fields = [\"id\", 'title',\"gender\"] instance = models.UserInfo.objects.all().first() # \u5b9e\u4f8b\u5316\u5bf9\u8c61\uff0c\u5185\u90e8\u4f1a\uff1a\u5148\u6267\u884c__new__\u3001\u518d\u6267\u884c__init__ # \u7b2c1\u6b65\uff1a__new__ # \u9ed8\u8ba4\uff1amany=True\uff0c\u8fd4\u56deListSerializer\u5bf9\u8c61\uff1b many=False\uff0c\u8fd4\u56de\u5f53\u524d\u7c7bInfoSerializer\u7684\u5bf9\u8c61\u3002 # \u7b2c2\u6b65\uff1a__init__ # \u6b64\u5904\u5c31\u8981\u6839\u636e__new__\u8fd4\u56de\u7684\u4e0d\u540c\u5bf9\u8c61\uff0c\u6267\u884c\u4e0d\u540c\u5bf9\u8c61\u7684__init__\u65b9\u6cd5\u3002 # =====> \u601d\u8003\u9898\uff1a\u4f60\u89c9\u5f97\u4ed6\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u8bbe\u8ba1\uff1f <====== ser = InfoSerializer(instance=instance, many=False) # \u83b7\u53d6\u5e8f\u5217\u5316\u540e\u7684\u503c ser.data","title":"5.\u521b\u5efa\u5e8f\u5217\u5316\u7c7b\u5bf9\u8c61"},{"location":"Django/drf/day14drf/#6-","text":"class Field: def get_attribute(self, instance): # source_attrs=[] \u6216 source_attrs=[\"xx\",\"xx\",\"xxx\"] return get_attribute(instance, self.source_attrs) class CharField(Field): def to_representation(self, value): return str(value) class BaseSerializer(Field): @property def data(self): # \u7b2c2\u6b65 if not hasattr(self, '_data'): if self.instance is not None and not getattr(self, '_errors', None): # \u7b2c3\u6b65\uff1a\u7528\u4e8e\u5e8f\u5217\u5316\u7ed9\u5bf9\u8c61\u8fdb\u884c\u521d\u59cb\u5316\u7528\u7684\u3002 self._data = self.to_representation(self.instance) elif hasattr(self, '_validated_data') and not getattr(self, '_errors', None): # \u8fd9\u91cc\u662f\u7528\u4e8e\u5bf9\u8bf7\u6c42\u6821\u9a8c\u65f6\uff0c\u624d\u89e6\u53d1\u6267\u884c\u7684\u3002 self._data = self.to_representation(self.validated_data) else: # \u8fd9\u4e2a\u662f\u7528\u4e8e\u7ed9Serializer\uff0c\u4e0d\u4f20\u5bf9\u8c61\u800c\u4f20\u5165initial_data\u53c2\u6570\u7528\u7684\u3002 self._data = self.get_initial() return self._data class Serializer(BaseSerializer, metaclass=SerializerMetaclass): @property def data(self): # \u7b2c1\u6b65 ret = super().data return ReturnDict(ret, serializer=self) def to_representation(self, instance): # \u7b2c4\u6b65 ret = OrderedDict() # \u7b2c5\u6b65\uff1a\u83b7\u53d6 _declared_fields \u4e2d\u6240\u6709\u975ewrite_only\u5b57\u6bb5\uff0c\u5373\uff1a\u7528\u4e8e\u5e8f\u5217\u5316\u7684\u5b57\u6bb5\u3002 # \u5982\u679c\u662fModelSerializer\uff0c\u4e5f\u4f1a\u53bb\u5bfb\u627e\u5176Meta\u4e2d\u5b9a\u4e49\u7684\u5b57\u6bb5 + \u5b57\u6bb5\u7684bind\u65b9\u6cd5 fields = self._readable_fields for field in fields: try: # \u7b2c5\u6b65\uff1a\u8c03\u7528\u5b57\u6bb5\u5bf9\u8c61\u4e2d\u7684 get_attribute \u65b9\u6cd5 attribute = field.get_attribute(instance) except SkipField: continue check_for_none = attribute.pk if isinstance(attribute, PKOnlyObject) else attribute if check_for_none is None: ret[field.field_name] = None else: # \u7b2c6\u6b65\uff1a\u8c03\u7528\u5b57\u6bb5\u5bf9\u8c61\u4e2d\u7684 to_representation \u65b9\u6cd5 ret[field.field_name] = field.to_representation(attribute) return ret class ModelSerializer(Serializer): ... class RoleSerializer(serializers.ModelSerializer): gender = serializers.CharField(source=\"get_gender_display\") class Meta: model = models.Role fields = [\"id\", 'title',\"gender\"] instance = models.UserInfo.objects.all().first() ser = InfoSerializer(instance=instance, many=False) # \u521b\u5efaInfoSerializer\u7c7b\u7684\u5bf9\u8c61\uff0c\u83b7\u53d6\u5e8f\u5217\u5316\u540e\u7684\u503c ser.data","title":"6.\u5e8f\u5217\u5316-\u5f53\u524d\u7c7b"},{"location":"Django/drf/day14drf/#7-listserializer","text":"class BaseSerializer(Field): @property def data(self): if not hasattr(self, '_data'): if self.instance is not None and not getattr(self, '_errors', None): # \u8fd9\u91cc self._data = self.to_representation(self.instance) elif hasattr(self, '_validated_data') and not getattr(self, '_errors', None): self._data = self.to_representation(self.validated_data) else: self._data = self.get_initial() return self._data class ListSerializer(BaseSerializer): @property def data(self): ret = super().data return ReturnList(ret, serializer=self) def to_representation(self, data): iterable = data.all() if isinstance(data, models.Manager) else data return [ # \u5faa\u73af\uff0c\u5229\u7528\u5e8f\u5217\u5316\u7c7b\u53bb\u5904\u7406\u6bcf\u4e2a\u5bf9\u8c61 self.child.to_representation(item) for item in iterable ]","title":"7.\u5e8f\u5217\u5316-ListSerializer"},{"location":"Django/drf/day14drf/#32","text":"\u5bf9\u7528\u6237\u53d1\u6765\u7684\u8bf7\u6c42\u6570\u636e\u8fdb\u884c\u6821\u9a8c\u3002","title":"3.2 \u6570\u636e\u6821\u9a8c"},{"location":"Django/drf/day14drf/#321","text":"from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers class InfoSerializer(serializers.Serializer): title = serializers.CharField(required=True, max_length=20, min_length=6) order = serializers.IntegerField(required=False, max_value=100, min_value=10) level = serializers.ChoiceField(choices=[(\"1\", \"\u9ad8\u7ea7\"), (2, \"\u4e2d\u7ea7\")]) class InfoView(APIView): def post(self, request): ser = InfoSerializer(data=request.data) if ser.is_valid(): return Response(ser.validated_data) else: return Response(ser.errors)","title":"3.2.1 \u5185\u7f6e\u6821\u9a8c"},{"location":"Django/drf/day14drf/#322","text":"from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers from django.core.validators import RegexValidator, EmailValidator class InfoSerializer(serializers.Serializer): title = serializers.CharField(required=True, max_length=20, min_length=6) order = serializers.IntegerField(required=False, max_value=100, min_value=10) level = serializers.ChoiceField(choices=[(\"1\", \"\u9ad8\u7ea7\"), (2, \"\u4e2d\u7ea7\")]) # email = serializers.EmailField() email = serializers.CharField(validators=[EmailValidator(message=\"\u90ae\u7bb1\u683c\u5f0f\u9519\u8bef\")]) more = serializers.CharField(validators=[RegexValidator(r\"\\d+\", message=\"\u683c\u5f0f\u9519\u8bef\")]) code = serializers.CharField() class InfoView(APIView): def post(self, request): ser = InfoSerializer(data=request.data) if ser.is_valid(): return Response(ser.validated_data) else: return Response(ser.errors)","title":"3.2.2 \u6b63\u5219\u6821\u9a8c"},{"location":"Django/drf/day14drf/#323","text":"from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers from rest_framework import exceptions class InfoSerializer(serializers.Serializer): title = serializers.CharField(required=True, max_length=20, min_length=6) order = serializers.IntegerField(required=False, max_value=100, min_value=10) code = serializers.CharField() def validate_code(self, value): print(value) if len(value) > 6: raise exceptions.ValidationError(\"\u5b57\u6bb5\u94a9\u5b50\u6821\u9a8c\u5931\u8d25\") return value def validate(self, attrs): print(\"validate=\", attrs) # api_settings.NON_FIELD_ERRORS_KEY # raise exceptions.ValidationError(\"\u5168\u5c40\u94a9\u5b50\u6821\u9a8c\u5931\u8d25\") return attrs class InfoView(APIView): def post(self, request): ser = InfoSerializer(data=request.data) if ser.is_valid(): return Response(ser.validated_data) else: return Response(ser.errors)","title":"3.2.3 \u94a9\u5b50\u6821\u9a8c"},{"location":"Django/drf/day14drf/#324-model","text":"from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers from rest_framework import exceptions from api import models from django.core.validators import RegexValidator class RoleSerializer(serializers.ModelSerializer): more = serializers.CharField(required=True) class Meta: model = models.Role fields = [\"title\", \"order\", \"more\"] extra_kwargs = { \"title\": {\"validators\": [RegexValidator(r\"\\d+\", message=\"\u683c\u5f0f\u9519\u8bef\")]}, \"order\": {\"min_value\": 5}, } def validate_more(self, value): return value def validate(self, attrs): return attrs class InfoView(APIView): def post(self, request): ser = RoleSerializer(data=request.data) if ser.is_valid(): return Response(ser.validated_data) else: return Response(ser.errors)","title":"3.2.4 Model\u6821\u9a8c"},{"location":"Django/drf/day14drf/#325","text":"from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers from rest_framework import exceptions from api import models from django.core.validators import RegexValidator class RoleSerializer(serializers.ModelSerializer): more = serializers.CharField(required=True) class Meta: model = models.Role fields = [\"title\", \"order\", \"more\"] extra_kwargs = { \"title\": {\"validators\": [RegexValidator(r\"\\d+\", message=\"\u683c\u5f0f\u9519\u8bef\")]}, \"order\": {\"min_value\": 5}, } def validate_more(self, value): return value def validate(self, attrs): return attrs class InfoView(APIView): def post(self, request): ser = RoleSerializer(data=request.data) if ser.is_valid(): ser.validated_data.pop(\"more\") instance = ser.save() # ser.save(v1=123,v2=234) print(instance) return Response(ser.validated_data) else: return Response(ser.errors)","title":"3.2.5 \u6821\u9a8c+\u4fdd\u5b58"},{"location":"Django/drf/day14drf/#326-fkm2m","text":"from django.db import models class Role(models.Model): title = models.CharField(verbose_name=\"\u6807\u9898\", max_length=32) order = models.IntegerField(verbose_name=\"\u987a\u5e8f\") class Tag(models.Model): caption = models.CharField(verbose_name=\"\u540d\u79f0\", max_length=32) class UserInfo(models.Model): name = models.CharField(verbose_name=\"\u59d3\u540d\", max_length=32) gender = models.SmallIntegerField(verbose_name=\"\u6027\u522b\", choices=((1, \"\u7537\"), (2, \"\u5973\"))) role = models.ForeignKey(verbose_name=\"\u89d2\u8272\", to=\"Role\", on_delete=models.CASCADE) ctime = models.DateTimeField(verbose_name=\"\u521b\u5efa\u65f6\u95f4\", auto_now_add=True) tags = models.ManyToManyField(verbose_name=\"\u6807\u7b7e\", to=\"Tag\") from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers from rest_framework import exceptions from api import models from django.core.validators import RegexValidator import datetime class UserInfoSerializer(serializers.ModelSerializer): more = serializers.CharField(required=True) class Meta: model = models.UserInfo fields = [\"name\", \"gender\", \"role\", \"tags\", \"more\"] extra_kwargs = { \"name\": {\"validators\": [RegexValidator(r\"n-\\d+\", message=\"\u683c\u5f0f\u9519\u8bef\")]}, } def validate_more(self, value): return value def validate(self, attrs): return attrs class InfoView(APIView): def post(self, request): ser = UserInfoSerializer(data=request.data) if ser.is_valid(): ser.validated_data.pop(\"more\") instance = ser.save(ctime=datetime.datetime.now()) print(instance) # return Response(ser.validated_data) return Response(\"\u6210\u529f\") else: return Response(ser.errors)","title":"3.2.6 \u6821\u9a8c+\u4fdd\u5b58+FK+M2M"},{"location":"Django/drf/day14drf/#327-create","text":"\u5f53\u6267\u884csave\u65f6\uff0c\u5185\u90e8\u4f1a\u8c03\u7528 create \u6216 update\u65b9\u6cd5\uff0c\u5982\u679c\u60f3\u8981\u81ea\u5b9a\u4e49\u4fdd\u5b58\u89c4\u5219\uff0c\u4e5f\u53ef\u4ee5\u5728\u6b64\u5904\u8fdb\u884c\u5904\u7406\u3002","title":"3.2.7 \u94a9\u5b50create"},{"location":"Django/drf/day14drf/#33","text":"\u5982\u679c\u4e00\u4e2a\u8bf7\u6c42\uff0c\u5373\u9700\u8981\u505a \u8bf7\u6c42\u6821\u9a8c \u53c8\u9700\u8981\u505a \u5e8f\u5217\u5316 \uff0c\u600e\u4e48\u641e\u5462\uff1f\u4f8b\u5982\uff1a\u65b0\u589e\u6570\u636e\u3002 \u5b57\u6bb5\uff0c\u53ef\u4ee5\u901a\u8fc7read_only \u3001write_only\u3001required \u6765\u8bbe\u5b9a is_valid\u6821\u9a8c data\u8c03\u7528\u5e8f\u5217\u5316","title":"3.3 \u6821\u9a8c+\u5e8f\u5217\u5316"},{"location":"Django/drf/day14drf/#331","text":"# models.py from django.db import models class Role(models.Model): \"\"\" \u89d2\u8272\u8868 \"\"\" title = models.CharField(verbose_name=\"\u540d\u79f0\", max_length=32) class Department(models.Model): \"\"\" \u90e8\u95e8\u8868 \"\"\" title = models.CharField(verbose_name=\"\u540d\u79f0\", max_length=32) class UserInfo(models.Model): \"\"\" \u7528\u6237\u8868 \"\"\" level_choices = ((1, \"\u666e\u901a\u4f1a\u5458\"), (2, \"VIP\"), (3, \"SVIP\"),) level = models.IntegerField(verbose_name=\"\u7ea7\u522b\", choices=level_choices, default=1) username = models.CharField(verbose_name=\"\u7528\u6237\u540d\", max_length=32) password = models.CharField(verbose_name=\"\u5bc6\u7801\", max_length=64) age = models.IntegerField(verbose_name=\"\u5e74\u9f84\", default=0) email = models.CharField(verbose_name=\"\u90ae\u7bb1\", max_length=64, null=True, blank=True) token = models.CharField(verbose_name=\"TOKEN\", max_length=64, null=True, blank=True) depart = models.ForeignKey(verbose_name=\"\u90e8\u95e8\", to=\"Department\", on_delete=models.CASCADE, null=True, blank=True) roles = models.ManyToManyField(verbose_name=\"\u89d2\u8272\", to=\"Role\") # urls.py from django.urls import path, re_path, include from app01 import views urlpatterns = [ path('api/users/', views.UserView.as_view()), ] # views.py from django.core.validators import EmailValidator from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers from app01 import models class DepartModelSerializer(serializers.ModelSerializer): class Meta: model = models.Department fields = ['id', \"title\"] extra_kwargs \"id\": {\"read_only\": False}, # \u6570\u636e\u9a8c\u8bc1 \"title\": {\"read_only\": True} # \u5e8f\u5217\u5316 } class RoleModelSerializer(serializers.ModelSerializer): class Meta: model = models.Role fields = ['id', \"title\"] extra_kwargs = { \"id\": {\"read_only\": False}, # \u6570\u636e\u9a8c\u8bc1 \"title\": {\"read_only\": True} # \u5e8f\u5217\u5316 } class UserModelSerializer(serializers.ModelSerializer): level_text = serializers.CharField(source=\"get_level_display\", read_only=True) # Serializer\u5d4c\u5957\uff0c\u4e0d\u662fread_only\uff0c\u4e00\u5b9a\u8981\u81ea\u5b9a\u4e49create\u548cupdate\uff0c\u81ea\u5b9a\u4e49\u65b0\u589e\u548c\u66f4\u65b0\u7684\u903b\u8f91\u3002 depart = DepartModelSerializer(many=False) roles = RoleModelSerializer(many=True) extra = serializers.SerializerMethodField(read_only=True) email2 = serializers.EmailField(write_only=True) # \u6570\u636e\u6821\u9a8c\uff1ausername\u3001email\u3001email2\u3001\u90e8\u95e8\u3001\u89d2\u8272\u4fe1\u606f class Meta: model = models.UserInfo fields = [ \"username\", \"age\", \"email\", \"level_text\", \"depart\", \"roles\", \"extra\", \"email2\" ] extra_kwargs = { \"age\": {\"read_only\": True}, \"email\": {\"validators\": [EmailValidator, ]}, } def get_extra(self, obj): return 666 def validate_username(self, value): return value # \u65b0\u589e\u52a0\u6570\u636e\u65f6 def create(self, validated_data): \"\"\" \u5982\u679c\u6709\u5d4c\u5957\u7684Serializer\uff0c\u5728\u8fdb\u884c\u6570\u636e\u6821\u9a8c\u65f6\uff0c\u53ea\u6709\u4e24\u79cd\u9009\u62e9\uff1a 1. \u5c06\u5d4c\u5957\u7684\u5e8f\u5217\u5316\u8bbe\u7f6e\u6210 read_only 2. \u81ea\u5b9a\u4e49create\u548cupdate\u65b9\u6cd5\uff0c\u81ea\u5b9a\u4e49\u65b0\u5efa\u548c\u66f4\u65b0\u7684\u903b\u8f91 \u6ce8\u610f\uff1a\u7528\u6237\u7aef\u63d0\u4ea4\u6570\u636e\u7684\u683c\u5f0f\u3002 \"\"\" depart_id = validated_data.pop('depart')['id'] role_id_list = [ele['id'] for ele in validated_data.pop('roles')] # \u65b0\u589e\u7528\u6237\u8868 validated_data['depart_id'] = depart_id user_object = models.UserInfo.objects.create(**validated_data) # \u5728\u7528\u6237\u8868\u548c\u89d2\u8272\u8868\u7684\u5173\u8054\u8868\u4e2d\u6dfb\u52a0\u5bf9\u5e94\u5173\u7cfb user_object.roles.add(*role_id_list) return user_object class UserView(APIView): \"\"\" \u7528\u6237\u7ba1\u7406 \"\"\" def get(self, request): \"\"\" \u6dfb\u52a0\u7528\u6237 \"\"\" queryset = models.UserInfo.objects.all() ser = UserModelSerializer(instance=queryset, many=True) return Response({\"code\": 0, 'data': ser.data}) def post(self, request): \"\"\" \u6dfb\u52a0\u7528\u6237 \"\"\" ser = UserModelSerializer(data=request.data) if not ser.is_valid(): return Response({'code': 1006, 'data': ser.errors}) ser.validated_data.pop('email2') instance = ser.save(age=18, password=\"123\", depart_id=1) # \u65b0\u589e\u4e4b\u540e\u7684\u4e00\u4e2a\u5bf9\u8c61\uff08\u5185\u90e8\u8c03\u7528UserModelSerializer\u8fdb\u884c\u5e8f\u5217\u5316\uff09 print(instance) # ser = UserModelSerializer(instance=instance, many=False) # ser.data return Response({'code': 0, 'data': ser.data})","title":"3.3.1 \u4e8c\u5408\u4e00"},{"location":"Django/drf/day14drf/#332","text":"\u5728\u6267\u884c\u4e0d\u540c\u529f\u80fd\u65f6\uff0c\u5206\u522b\u4f7f\u7528\u4e0d\u540c\u7684\u5e8f\u5217\u5316\u5668\u6765\u8fdb\u884c\u5904\u7406\u4e1a\u52a1\u3002 GET\u8bf7\u6c42\uff0c\u8fd4\u56de\u6570\u636e\uff08\u5e8f\u5217\u5316A\uff09 POST\u8bf7\u6c42\uff0c\u63d0\u4ea4\u6570\u636e\uff08\u5e8f\u5217\u5316A\uff09 + \u8fd4\u56de\u6570\u636e\uff08\u5e8f\u5217\u5316B\uff09\u3002 \u5e95\u5c42\u6e90\u7801\u5b9e\u73b0\uff1a \u5e8f\u5217\u5316\u7684\u5e95\u5c42\u6e90\u7801\u5b9e\u73b0\u6709\u522b\u4e8e\u4e0a\u8ff0\u5176\u4ed6\u7684\u7ec4\u4ef6\uff0c\u5e8f\u5217\u5316\u5668\u76f8\u5173\u7c7b\u7684\u5b9a\u4e49\u548c\u6267\u884c\u90fd\u662f\u5728\u89c6\u56fe\u4e2d\u88ab\u8c03\u7528\u7684\uff0c\u6240\u4ee5\u6e90\u7801\u7684\u5206\u6790\u8fc7\u7a0b\u53ef\u4ee5\u5206\u4e3a\uff1a\u5b9a\u4e49\u7c7b\u3001\u5e8f\u5217\u5316\u3001\u6570\u636e\u6821\u9a8c\u3002 \u6e90\u78011\uff1a\u5e8f\u5217\u5316\u8fc7\u7a0b \u6e90\u78012\uff1a\u6570\u636e\u6821\u9a8c\u8fc7\u7a0b","title":"3.3.2 \u72ec\u7acb\u5206\u5f00"},{"location":"Django/drf/day14drf/#4","text":"\u5728\u67e5\u770b\u6570\u636e\u5217\u8868\u7684API\u4e2d\uff0c\u5982\u679c \u6570\u636e\u91cf \u6bd4\u8f83\u5927\uff0c\u80af\u5b9a\u4e0d\u80fd\u628a\u6240\u6709\u7684\u6570\u636e\u90fd\u5c55\u793a\u7ed9\u7528\u6237\uff0c\u800c\u9700\u8981\u901a\u8fc7\u5206\u9875\u5c55\u793a\u3002 \u5728drf\u4e2d\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5206\u9875\u5148\u5173\u7c7b\uff1a BasePagination\uff0c\u5206\u9875\u57fa\u7c7b PageNumberPagination(BasePagination) \u652f\u6301 /accounts/?page=4&page_size=100 \u683c\u5f0f\u7684\u5206\u9875 LimitOffsetPagination(BasePagination) \u652f\u6301 ?offset=100&limit=10 \u683c\u5f0f\u7684\u5206\u9875 CursorPagination(BasePagination) \u652f\u6301 \u4e0a\u4e00\u4e0b & \u4e0b\u4e00\u9875 \u683c\u5f0f\u7684\u5206\u9875\uff08\u4e0d\u5e38\u7528\uff09","title":"4.\u5206\u9875"},{"location":"Django/drf/day14drf/#41-pagenumberpagination","text":"","title":"4.1 PageNumberPagination"},{"location":"Django/drf/day14drf/#42-limitoffsetpagination","text":"","title":"4.2 LimitOffsetPagination"},{"location":"Django/drf/day14drf/#5_1","text":"APIView`\u662fdrf\u4e2d \u201c\u9876\u5c42\u201d \u7684\u89c6\u56fe\u7c7b\uff0c\u5728\u4ed6\u7684\u5185\u90e8\u4e3b\u8981\u5b9e\u73b0drf\u57fa\u7840\u7684\u7ec4\u4ef6\u7684\u4f7f\u7528\uff0c\u4f8b\u5982\uff1a\u7248\u672c\u3001\u8ba4\u8bc1\u3001\u6743\u9650\u3001\u9650\u6d41\u7b49\u3002 # urls.py from django.urls import path, re_path, include from app01 import views urlpatterns = [ path('api/users/', views.UserView.as_view()), path('api/users/<int:pk>/', views.UserDetailView.as_view()), # \u5176\u4ed6\u5206\u9875\u3001\u7b5b\u9009\u7b49\u6761\u4ef6\uff0c\u90fd\u662f\u8981\u653e\u5728 ?page=1&size=9\u6765 \u4f20\u53c2\u3002 ] # views.py from rest_framework.views import APIView from rest_framework.response import Response class UserView(APIView): # \u8ba4\u8bc1\u3001\u6743\u9650\u3001\u9650\u6d41\u7b49 def get(self, request): # \u4e1a\u52a1\u903b\u8f91\uff1a\u67e5\u770b\u5217\u8868 return Response({\"code\": 0, 'data': \"...\"}) def post(self, request): # \u4e1a\u52a1\u903b\u8f91\uff1a\u65b0\u5efa return Response({'code': 0, 'data': \"...\"}) class UserDetailView(APIView): # \u8ba4\u8bc1\u3001\u6743\u9650\u3001\u9650\u6d41\u7b49 def get(self, request,pk): # \u4e1a\u52a1\u903b\u8f91\uff1a\u67e5\u770b\u67d0\u4e2a\u6570\u636e\u7684\u8be6\u7ec6 return Response({\"code\": 0, 'data': \"...\"}) def put(self, request,pk): # \u4e1a\u52a1\u903b\u8f91\uff1a\u5168\u90e8\u4fee\u6539 return Response({'code': 0, 'data': \"...\"}) def patch(self, request,pk): # \u4e1a\u52a1\u903b\u8f91\uff1a\u5c40\u90e8\u4fee\u6539 return Response({'code': 0, 'data': \"...\"}) def delete(self, request,pk): # \u4e1a\u52a1\u903b\u8f91\uff1a\u5220\u9664 return Response({'code': 0, 'data': \"...\"})","title":"5.\u521d\u8bc6\u89c6\u56fe"},{"location":"Django/message/message/","text":"1.message\u7ec4\u4ef6 1.\u524d\u620f message\u7ec4\u4ef6\u7684\u5e94\u7528\u573a\u666f HTTP\u8bf7\u6c42\u662f\u4e0d\u7a33\u5b9a\u7684\u77ed\u94fe\u63a5 \u5982\u679c\u5728 \u91cd\u5b9a\u5411\u5230\u53e6\u5916\u4e00\u4e2aurl \u65f6\u5e0c \u671b\u8fd4\u56de \u91cd\u5b9a\u5411\u4e4b\u524d \u7684\u8bf7\u6c42\u76f8\u5173\u7684\u6570\u636e message\u7ec4\u4ef6\u5728django\u4e2d\u662f\u4e00\u4e2aapp 3.\u5e94\u7528 3.1 \u914d\u7f6e \u8fdb\u884c\u5982\u4e0b\u914d\u7f6e # MESSAGE_STORAGE = 'django.contrib.messages.storage.fallback.FallbackStorage' # MESSAGE_STORAGE = 'django.contrib.messages.storage.cookie.CookieStorage' MESSAGE_STORAGE = 'django.contrib.messages.storage.session.SessionStorage' INSTALLED_APPS = [ # 'django.contrib.admin', # 'django.contrib.auth', # 'django.contrib.contenttypes', # 'django.contrib.sessions', 'django.contrib.messages', 'django.contrib.staticfiles', \"web.apps.WebConfig\" ] MIDDLEWARE = [ 'django.middleware.security.SecurityMiddleware', 'django.contrib.sessions.middleware.SessionMiddleware', 'django.middleware.common.CommonMiddleware', 'django.middleware.csrf.CsrfViewMiddleware', # 'django.contrib.auth.middleware.AuthenticationMiddleware', 'django.contrib.messages.middleware.MessageMiddleware', 'django.middleware.clickjacking.XFrameOptionsMiddleware', 'utils.md.AuthMiddleware' ] TEMPLATES = [ { 'BACKEND': 'django.template.backends.django.DjangoTemplates', 'DIRS': [], 'APP_DIRS': True, 'OPTIONS': { 'context_processors': [ 'django.template.context_processors.debug', 'django.template.context_processors.request', # 'django.contrib.auth.context_processors.auth', 'django.contrib.messages.context_processors.messages', ], }, }, ] \u7b2c\u4e00\u79cd\u65b9\u5f0f A\u8bf7\u6c42\uff1a def my_order_cancel(request,pk): messages.add_message(request,messages.SUCCESS,'\u5220\u9664\u6210\u529f1') messages.add_message(request,messages.SUCCESS,'\u5220\u9664\u6210\u529f2') return redirect('my_order_list') B\u8bf7\u6c42\uff1a def f2(request): from django.contrib.messages.api import get_messages messages = get_messages(request) for obj in messages: print(obj.message) \u7b2c\u4e8c\u79cd\u65b9\u5f0f A\u8bf7\u6c42\uff1a def my_order_cancel(request,pk): messages.add_message(request,messages.SUCCESS,'\u5220\u9664\u6210\u529f1') messages.add_message(request,messages.SUCCESS,'\u5220\u9664\u6210\u529f2') return redirect('my_order_list') B\u8bf7\u6c42\uff1a\u901a\u8fc7HTML\u9875\u9762 <ul> {% for obj in messages %} <li>{{ obj.message }}</li> {% endfor %} </ul> 4.\u6e90\u7801\u5206\u6790 message\u662f\u4e00\u4e2a\u5bf9\u8c61, \u5c01\u88c5\u7279\u6027 add_message \u6e90\u4ee3\u7801 def add_message(request, level, message, extra_tags='', fail_silently=False): \"\"\" Attempt to add a message to the request using the 'messages' app. \"\"\" try: messages = request._messages except AttributeError: if not hasattr(request, 'META'): raise TypeError( \"add_message() argument must be an HttpRequest object, not \" \"'%s'.\" % request.__class__.__name__ ) if not fail_silently: raise MessageFailure( 'You cannot add messages without installing ' 'django.contrib.messages.middleware.MessageMiddleware' ) else: return messages.add(level, message, extra_tags) \u5173\u952e\u7684\u4e24\u884c\u4ee3\u7801 try: messages = request._messages ...... else: return messages.add(level, message, extra_tags) request._messages \u662frequest\u5bf9\u8c61\u4e2d\u7684\u4e00\u4e2a\u6210\u5458 \u7531MessageMiddleware\u4e2d\u95f4\u4ef6\u8bbe\u7f6e\uff0c \u5728MessageMiddleware\u7684process_request\u65b9\u6cd5\u4e2d\u8bbe\u7f6e\u4e86_messages default_storage \u662f\u4e00\u4e2a\u7c7b\uff0c\u8fd4\u56de\u5982\u4e0b\u5185\u5bb9 import_string\u901a\u8fc7\u5b57\u7b26\u4e32\u5f62\u5f0f\u627e\u7c7b SessionStorage \u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4f20\u5165request\u53c2\u6570 SessionStorage(request) \u5c06SessionStorage(request)\u5bf9\u8c61\u5728\u4e2d\u95f4\u4ef6MessageMiddleware\u4e2d\u7684process_request\u65b9\u6cd5 \u8d4b\u503c\u7ed9\u4e86request._messages \u6b64\u5904\u7684messages\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0cSessionStorage\u7684\u5bf9\u8c61 \u662f\u56e0\u4e3a\u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u8bbe\u7f6emessage\u5b58\u653e\u5728session\u4e2d \u5728SessionStorage\u7684\u7236\u7c7bBaseStorage\u4e2d\uff0c\u5b58\u5728add\u65b9\u6cd5 \u8bf7\u6c42\u6d41\u7a0b","title":"1.message\u7ec4\u4ef6"},{"location":"Django/message/message/#1message","text":"","title":"1.message\u7ec4\u4ef6"},{"location":"Django/message/message/#1","text":"message\u7ec4\u4ef6\u7684\u5e94\u7528\u573a\u666f HTTP\u8bf7\u6c42\u662f\u4e0d\u7a33\u5b9a\u7684\u77ed\u94fe\u63a5 \u5982\u679c\u5728 \u91cd\u5b9a\u5411\u5230\u53e6\u5916\u4e00\u4e2aurl \u65f6\u5e0c \u671b\u8fd4\u56de \u91cd\u5b9a\u5411\u4e4b\u524d \u7684\u8bf7\u6c42\u76f8\u5173\u7684\u6570\u636e message\u7ec4\u4ef6\u5728django\u4e2d\u662f\u4e00\u4e2aapp","title":"1.\u524d\u620f"},{"location":"Django/message/message/#3","text":"","title":"3.\u5e94\u7528"},{"location":"Django/message/message/#31","text":"\u8fdb\u884c\u5982\u4e0b\u914d\u7f6e # MESSAGE_STORAGE = 'django.contrib.messages.storage.fallback.FallbackStorage' # MESSAGE_STORAGE = 'django.contrib.messages.storage.cookie.CookieStorage' MESSAGE_STORAGE = 'django.contrib.messages.storage.session.SessionStorage' INSTALLED_APPS = [ # 'django.contrib.admin', # 'django.contrib.auth', # 'django.contrib.contenttypes', # 'django.contrib.sessions', 'django.contrib.messages', 'django.contrib.staticfiles', \"web.apps.WebConfig\" ] MIDDLEWARE = [ 'django.middleware.security.SecurityMiddleware', 'django.contrib.sessions.middleware.SessionMiddleware', 'django.middleware.common.CommonMiddleware', 'django.middleware.csrf.CsrfViewMiddleware', # 'django.contrib.auth.middleware.AuthenticationMiddleware', 'django.contrib.messages.middleware.MessageMiddleware', 'django.middleware.clickjacking.XFrameOptionsMiddleware', 'utils.md.AuthMiddleware' ] TEMPLATES = [ { 'BACKEND': 'django.template.backends.django.DjangoTemplates', 'DIRS': [], 'APP_DIRS': True, 'OPTIONS': { 'context_processors': [ 'django.template.context_processors.debug', 'django.template.context_processors.request', # 'django.contrib.auth.context_processors.auth', 'django.contrib.messages.context_processors.messages', ], }, }, ] \u7b2c\u4e00\u79cd\u65b9\u5f0f A\u8bf7\u6c42\uff1a def my_order_cancel(request,pk): messages.add_message(request,messages.SUCCESS,'\u5220\u9664\u6210\u529f1') messages.add_message(request,messages.SUCCESS,'\u5220\u9664\u6210\u529f2') return redirect('my_order_list') B\u8bf7\u6c42\uff1a def f2(request): from django.contrib.messages.api import get_messages messages = get_messages(request) for obj in messages: print(obj.message) \u7b2c\u4e8c\u79cd\u65b9\u5f0f A\u8bf7\u6c42\uff1a def my_order_cancel(request,pk): messages.add_message(request,messages.SUCCESS,'\u5220\u9664\u6210\u529f1') messages.add_message(request,messages.SUCCESS,'\u5220\u9664\u6210\u529f2') return redirect('my_order_list') B\u8bf7\u6c42\uff1a\u901a\u8fc7HTML\u9875\u9762 <ul> {% for obj in messages %} <li>{{ obj.message }}</li> {% endfor %} </ul>","title":"3.1 \u914d\u7f6e"},{"location":"Django/message/message/#4","text":"message\u662f\u4e00\u4e2a\u5bf9\u8c61, \u5c01\u88c5\u7279\u6027 add_message \u6e90\u4ee3\u7801 def add_message(request, level, message, extra_tags='', fail_silently=False): \"\"\" Attempt to add a message to the request using the 'messages' app. \"\"\" try: messages = request._messages except AttributeError: if not hasattr(request, 'META'): raise TypeError( \"add_message() argument must be an HttpRequest object, not \" \"'%s'.\" % request.__class__.__name__ ) if not fail_silently: raise MessageFailure( 'You cannot add messages without installing ' 'django.contrib.messages.middleware.MessageMiddleware' ) else: return messages.add(level, message, extra_tags) \u5173\u952e\u7684\u4e24\u884c\u4ee3\u7801 try: messages = request._messages ...... else: return messages.add(level, message, extra_tags) request._messages \u662frequest\u5bf9\u8c61\u4e2d\u7684\u4e00\u4e2a\u6210\u5458 \u7531MessageMiddleware\u4e2d\u95f4\u4ef6\u8bbe\u7f6e\uff0c \u5728MessageMiddleware\u7684process_request\u65b9\u6cd5\u4e2d\u8bbe\u7f6e\u4e86_messages default_storage \u662f\u4e00\u4e2a\u7c7b\uff0c\u8fd4\u56de\u5982\u4e0b\u5185\u5bb9 import_string\u901a\u8fc7\u5b57\u7b26\u4e32\u5f62\u5f0f\u627e\u7c7b SessionStorage \u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4f20\u5165request\u53c2\u6570 SessionStorage(request) \u5c06SessionStorage(request)\u5bf9\u8c61\u5728\u4e2d\u95f4\u4ef6MessageMiddleware\u4e2d\u7684process_request\u65b9\u6cd5 \u8d4b\u503c\u7ed9\u4e86request._messages \u6b64\u5904\u7684messages\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0cSessionStorage\u7684\u5bf9\u8c61 \u662f\u56e0\u4e3a\u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u8bbe\u7f6emessage\u5b58\u653e\u5728session\u4e2d \u5728SessionStorage\u7684\u7236\u7c7bBaseStorage\u4e2d\uff0c\u5b58\u5728add\u65b9\u6cd5 \u8bf7\u6c42\u6d41\u7a0b","title":"4.\u6e90\u7801\u5206\u6790"},{"location":"Django/metaClass/metaClass/","text":"14.metaclass\u5143\u7c7b 1.\u524d\u620f \u5bf9\u8c61\u662f\u7c7b\u5b9e\u4f8b\u5316\u7684\u7ed3\u679c class Foo(object): pass # \u7b2c1\u6b65\uff1a\u8c03\u7528Foo\u7684__new__\u65b9\u6cd5\u521b\u5efa\u7a7a\u5bf9\u8c61\u3002 # \u7b2c2\u6b65\uff1a\u8c03\u7528Foo\u7684__init__\u65b9\u6cd5\u5bf9\u5bf9\u8c61\u8fdb\u884c\u521d\u59cb\u5316\u3002 obj = Foo() \u7c7b\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u7531type\u521b\u5efa\u51fa\u6765\u7684 class Foo(object): v1 = 123 def func(self): return 69 Foo = type(\"Foo\",(object,),{\"v1\":123,\"func\":lambda self:69}) \u8fd9\u4e24\u79cd\u60c5\u51b5\u521b\u5efa\u7c7b\uff0c\u662f\u5b8c\u5168\u7b49\u4ef7\u7684 2. metaclass \u5728\u5b9a\u4e49\u7c7b\u65f6\u52a0\u5165metaclass\u6307\u5b9a\u5f53\u524d\u7c7b\u7684\u521b\u9020\u8005 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cmetaclass=type # \u7531type\u521b\u5efaFoo\u7c7b\u578b class Foo(object): pass # \u7531MyType\u521b\u5efaFoo\u7c7b\u578b class Foo(object,metaclass=MyType): pass 2.1 \u6307\u5b9a\u5143\u7c7b(metaclass)\u6765\u521b\u5efa\u7c7b class MyType(type): def __init__(cls, *args, **kwargs): print(\"\u7b2c2\u6b65\uff1a\u521d\u59cb\u5316\u7c7b\u6210\u5458\uff1a\", args, **kwargs) super().__init__(*args, **kwargs) def __new__(cls, *args, **kwargs): new_cls = super().__new__(cls, *args, **kwargs) print(\"\u7b2c1\u6b65\uff1a\u521b\u5efa\u7c7b\uff1a\", new_cls) return new_cls def __call__(cls, *args, **kwargs): print(\"\u7b2c3\u6b65\uff1a\u521b\u5efa\u5bf9\u8c61&\u521d\u59cb\u5316\u5bf9\u8c61\", cls) # 1.\u8c03\u7528\u81ea\u5df1\u90a3\u4e2a\u7c7b\u7684 __new__ \u65b9\u6cd5\u53bb\u521b\u5efa\u5bf9\u8c61 new_object = cls.__new__(cls, *args, **kwargs) # 2.\u8c03\u7528\u4f60\u81ea\u5df1\u90a3\u4e2a\u7c7b __init__\u653e\u53d1\u53bb\u521d\u59cb\u5316 cls.__init__(new_object, *args, **kwargs) return new_object class Foo(metaclass=MyType): v1 = 123 def func(self): pass obj = Foo() 2.2 \u5728MyType\u5143\u7c7b\u4e2d\u81ea\u5b9a\u4e49\u7c7b\u53d8\u91cf class MyType(type): def __new__(cls, name, bases, attrs): # print(name, bases, attrs) del attrs['v1'] attrs['dex'] = \"xxxx\" xx = super().__new__(cls, name, bases, attrs) return xx # Foo = MyType(\"Foo\", (object,), {\"v1\": 123, \"func\": lambda self: 999}) class Foo(object, metaclass=MyType): v1 = 123 def func(self): pass print(Foo.func) print(Foo.dex) \u5143\u7c7b\u5728DjangoRestframework\u5e8f\u5217\u5316\u5668\u6709\u5e94\u7528\u3002","title":"14.metaclass\u5143\u7c7b"},{"location":"Django/metaClass/metaClass/#14metaclass","text":"","title":"14.metaclass\u5143\u7c7b"},{"location":"Django/metaClass/metaClass/#1","text":"\u5bf9\u8c61\u662f\u7c7b\u5b9e\u4f8b\u5316\u7684\u7ed3\u679c class Foo(object): pass # \u7b2c1\u6b65\uff1a\u8c03\u7528Foo\u7684__new__\u65b9\u6cd5\u521b\u5efa\u7a7a\u5bf9\u8c61\u3002 # \u7b2c2\u6b65\uff1a\u8c03\u7528Foo\u7684__init__\u65b9\u6cd5\u5bf9\u5bf9\u8c61\u8fdb\u884c\u521d\u59cb\u5316\u3002 obj = Foo() \u7c7b\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u7531type\u521b\u5efa\u51fa\u6765\u7684 class Foo(object): v1 = 123 def func(self): return 69 Foo = type(\"Foo\",(object,),{\"v1\":123,\"func\":lambda self:69}) \u8fd9\u4e24\u79cd\u60c5\u51b5\u521b\u5efa\u7c7b\uff0c\u662f\u5b8c\u5168\u7b49\u4ef7\u7684","title":"1.\u524d\u620f"},{"location":"Django/metaClass/metaClass/#2-metaclass","text":"\u5728\u5b9a\u4e49\u7c7b\u65f6\u52a0\u5165metaclass\u6307\u5b9a\u5f53\u524d\u7c7b\u7684\u521b\u9020\u8005 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cmetaclass=type # \u7531type\u521b\u5efaFoo\u7c7b\u578b class Foo(object): pass # \u7531MyType\u521b\u5efaFoo\u7c7b\u578b class Foo(object,metaclass=MyType): pass","title":"2. metaclass"},{"location":"Django/metaClass/metaClass/#21-metaclass","text":"class MyType(type): def __init__(cls, *args, **kwargs): print(\"\u7b2c2\u6b65\uff1a\u521d\u59cb\u5316\u7c7b\u6210\u5458\uff1a\", args, **kwargs) super().__init__(*args, **kwargs) def __new__(cls, *args, **kwargs): new_cls = super().__new__(cls, *args, **kwargs) print(\"\u7b2c1\u6b65\uff1a\u521b\u5efa\u7c7b\uff1a\", new_cls) return new_cls def __call__(cls, *args, **kwargs): print(\"\u7b2c3\u6b65\uff1a\u521b\u5efa\u5bf9\u8c61&\u521d\u59cb\u5316\u5bf9\u8c61\", cls) # 1.\u8c03\u7528\u81ea\u5df1\u90a3\u4e2a\u7c7b\u7684 __new__ \u65b9\u6cd5\u53bb\u521b\u5efa\u5bf9\u8c61 new_object = cls.__new__(cls, *args, **kwargs) # 2.\u8c03\u7528\u4f60\u81ea\u5df1\u90a3\u4e2a\u7c7b __init__\u653e\u53d1\u53bb\u521d\u59cb\u5316 cls.__init__(new_object, *args, **kwargs) return new_object class Foo(metaclass=MyType): v1 = 123 def func(self): pass obj = Foo()","title":"2.1 \u6307\u5b9a\u5143\u7c7b(metaclass)\u6765\u521b\u5efa\u7c7b"},{"location":"Django/metaClass/metaClass/#22-mytype","text":"class MyType(type): def __new__(cls, name, bases, attrs): # print(name, bases, attrs) del attrs['v1'] attrs['dex'] = \"xxxx\" xx = super().__new__(cls, name, bases, attrs) return xx # Foo = MyType(\"Foo\", (object,), {\"v1\": 123, \"func\": lambda self: 999}) class Foo(object, metaclass=MyType): v1 = 123 def func(self): pass print(Foo.func) print(Foo.dex) \u5143\u7c7b\u5728DjangoRestframework\u5e8f\u5217\u5316\u5668\u6709\u5e94\u7528\u3002","title":"2.2 \u5728MyType\u5143\u7c7b\u4e2d\u81ea\u5b9a\u4e49\u7c7b\u53d8\u91cf"},{"location":"Django/reatframework_serializer/reatframework_serializer/","text":"7.restframework\u5e8f\u5217\u5316 \u5e8f\u5217\u5316\u5668\u6709\u4e24\u4e2a\u529f\u80fd \u6570\u636e\u6821\u9a8c \u5e8f\u5217\u5316 1.\u5e8f\u5217\u5316\u5668\u7684\u7b80\u5355\u5b9e\u7528 \u5e8f\u5217\u5316\u5668\u5c06django\u901a\u8fc7orm\u64cd\u4f5c\u4ece\u6570\u636e\u5e93\u4e2d\u53d6\u5f97\u7684\u6570\u636e\u505a\u5e8f\u5217\u5316\u64cd\u4f5c\u8f6c\u6362\u4e3aJson\u6570\u636e \u9700\u8981\u7f16\u5199\u5e8f\u5217\u5316\u7c7b from api import models from rest_framework import serializers class DepartSerializer(serializers.Serializer): title = serializers.CharField() count = serializers.IntegerField() \u5e76\u4e14\u5728 \u89c6\u56fe\u51fd\u6570\u4e2d\u5e94\u7528 \uff0c\u5b9e\u4f8b\u5316 DepartSerializer \u5bf9\u8c61\u5e76\u4e14\u4f20\u5165\u901a\u8fc7ORM\u67e5\u8be2\u5f97\u5230\u7684\u5bf9\u8c61 QueryDict class DepartView(APIView): def get(self, request, *args, **kwargs): depart_object = models.Depart.objects.all().first() ser = DepartSerializer(instance=depart_object) print(ser.data) return Response(ser.data) \u5728postman\u4e2d\u6d4b\u8bd5 \u5e8f\u5217\u5316\u5668\u6210\u529f\u5f97\u5230\u6570\u636e\uff0c\u5e76\u4e14\u8fd4\u56de\u7ed9\u63a5\u53e3Json\u6570\u636e \u6ce8\u610f\u26a0\ufe0f\uff1a \u5728\u5e8f\u5217\u5316\u5668\u7c7b\u4e2d\u7684\u5b57\u6bb5\u540d\u5e94\u8be5\u4e0eORM\u4e2d\u7684\u5b57\u6bb5\u540d\u4fdd\u6301\u4e00\u81f4 \u540c\u65f6\u6570\u636e\u7c7b\u578b field \u4e5f\u8981\u4fdd\u6301\u4e00\u81f4 2. \u5bf9\u591a\u4e2a\u5bf9\u8c61\u7684\u5e8f\u5217\u5316 \u89c6\u56fe\u51fd\u6570\u4e2d\u7684\u5e8f\u5217\u5316\u5668\u7684\u5bf9\u8c61\u5728\u751f\u6210\u65f6\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u53c2\u6570 many=True \u6b64\u65f6\uff0cmodels\u63a5\u6536\u7684\u5bf9\u8c61\u5e94\u8be5\u662f\u591a\u4e2a\uff0c\u653e\u5728\u4e00\u4e2a\u5217\u8868\u4e2d [obj1,obj2,obj3,....] \u7528\u5355\u4e2a\u5bf9\u8c61\u63a5\u6536\u5c31\u4e0d\u592a\u5408\u9002\u4e86\uff0c\u8fd9\u91cc\u7528 queryset \u6765\u63a5\u6536 # queryset = [obj1,obj2,obj3,....] queryset = models.Depart.objects.all() from rest_framework.views import APIView from rest_framework.response import Response from api import models from rest_framework import serializers class DepartSerializer(serializers.Serializer): title = serializers.CharField() count = serializers.IntegerField() class DepartView(APIView): def get(self, request, *args, **kwargs): queryset = models.Depart.objects.all() ser = DepartSerializer(instance=queryset, many=True) print(ser.data) context = {\"status\": True, \"data\": ser.data} return Response(context) Postman\u4e2d\u7684\u6d4b\u8bd5\u7ed3\u679c\uff1a 3.ModelSerializer class DepartSerializer(serializers.ModelSerializer): class Meta: model = models.Depart fields = \"__all__\" \u66f4\u52a0\u8f7b\u677e\u7684\u65b9\u5f0f\uff0c\u7c7b\u4f3c ModelForm \u7684\u539f\u7406 \u5728postman\u4e2d\u7684\u6d4b\u8bd5\u7ed3\u679c\uff1a \u6240\u6709\u6570\u636e\u5b57\u6bb5\u90fd\u53ef\u4ee5\u88ab\u5e8f\u5217\u5316 4.source & \u65f6\u95f4\u683c\u5f0f\u5316 class UserSerializer(serializers.ModelSerializer): xx = serializers.CharField(source='get_gender_display') depart = serializers.CharField(source='depart.title') ctime = serializers.DateTimeField(format=\"%Y-%m-%d\") class Meta: model = models.UserInfo # fields = \"__all__\" fields = ['name', 'age', 'xx', 'depart', 'ctime'] source\u53bb\u6570\u636e\u5e93\u4e2d\u5bfb\u627e\u5230\u5bf9\u5e94\u5b57\u6bb5\uff0c new_name \u4f5c\u4e3a\u8fd4\u56de\u7684Json\u4e2d\u7684\u6570\u636e\u7684\u952e\u540d class UserView(APIView): def get(self, request, *args, **kwargs): models.UserInfo.objects.all().update(ctime=datetime.datetime.now()) queryset = models.UserInfo.objects.all() ser = UserSerializer(instance=queryset, many=True) context = {\"status\": True, \"data\": ser.data} return Response(context) \u5728postman\u4e2d\u7684\u6d4b\u8bd5\u7ed3\u679c\uff1a 5. \u5e8f\u5217\u5316\u81ea\u5b9a\u4e49\u65b9\u6cd5 \u5728 serializers \u5b57\u6bb5\u4e2d\u81ea\u5b9a\u4e49 SerializerMethodField() \u5e76\u4e14\u5b9a\u4e49\u51fd\u6570\uff08\u7c7b\u4f3c\u4e0e\u94a9\u5b50\uff09 def get_xxx(self, obj): return '\u8fd9\u91cc\u662f\u81ea\u5b9a\u4e49\u65b9\u6cd5' class UserSerializer(serializers.ModelSerializer): xx = serializers.CharField(source='get_gender_display') depart = serializers.CharField(source='depart.title') ctime = serializers.DateTimeField(format=\"%Y-%m-%d\") xxx = serializers.SerializerMethodField() class Meta: model = models.UserInfo # fields = \"__all__\" fields = ['name', 'age', 'xx', 'depart', 'ctime', 'xxx'] def get_xxx(self, obj): return '\u8fd9\u91cc\u662f\u81ea\u5b9a\u4e49\u65b9\u6cd5' 6.\u5e8f\u5217\u5316\u7c7b\u5d4c\u5957 \u4e3b\u8981\u662fORM\u7c7b\u4e2d\u5bf9\u5e94\u7684 ForeignKey \u548c ManagToManyField \u5b57\u6bb5\u8fdb\u884c\u5e8f\u5217\u5316 \u57fa\u4e8e SerializerMethodField \u81ea\u5b9a\u4e49\u65b9\u6cd5\u5bf9\u5173\u8054\u6570\u636e\u8fdb\u884c\u5e8f\u5217\u5316 \u57fa\u4e8e\u5d4c\u5957\u7c7b\u7684\u5e8f\u5217\u5316 from django.db import models class Role(models.Model): title = models.CharField(verbose_name=\"\u6807\u9898\", max_length=32) order = models.IntegerField(verbose_name=\"\u987a\u5e8f\") class Tag(models.Model): caption = models.CharField(verbose_name=\"\u540d\u79f0\", max_length=32) class UserInfo(models.Model): name = models.CharField(verbose_name=\"\u59d3\u540d\", max_length=32) gender = models.SmallIntegerField(verbose_name=\"\u6027\u522b\", choices=((1, \"\u7537\"), (2, \"\u5973\"))) role = models.ForeignKey(verbose_name=\"\u89d2\u8272\", to=\"Role\", on_delete=models.CASCADE) ctime = models.DateTimeField(verbose_name=\"\u521b\u5efa\u65f6\u95f4\", auto_now_add=True) tags = models.ManyToManyField(verbose_name=\"\u6807\u7b7e\", to=\"Tag\") from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers from api import models class RoleSerializer(serializers.ModelSerializer): class Meta: model = models.Role # fields = \"__all__\" fields = [\"id\", 'title'] class TagSerializer(serializers.ModelSerializer): class Meta: model = models.Tag fields = \"__all__\" class InfoSerializer(serializers.ModelSerializer): role = RoleSerializer() tags = TagSerializer(many=True) class Meta: model = models.UserInfo fields = ['id', 'name', \"role\", \"tags\"] class InfoView(APIView): def get(self, request): queryset = models.UserInfo.objects.all() ser = InfoSerializer(instance=queryset, many=True) print(type(ser.data), ser.data) return Response(ser.data) 7.\u5e8f\u5217\u5316\u7c7b\u7ee7\u627f from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers from api import models class MySerializer(serializers.Serializer): more = serializers.SerializerMethodField() def get_more(self, obj): return \"123\" class InfoSerializer(serializers.ModelSerializer, MySerializer): class Meta: model = models.UserInfo fields = [\"id\", \"name\", 'more'] class InfoView(APIView): def get(self, request): instance = models.UserInfo.objects.all().first() ser = InfoSerializer(instance=instance, many=False) print(type(ser.data), ser.data) return Response(ser.data)","title":"7.restframework\u5e8f\u5217\u5316"},{"location":"Django/reatframework_serializer/reatframework_serializer/#7restframework","text":"\u5e8f\u5217\u5316\u5668\u6709\u4e24\u4e2a\u529f\u80fd \u6570\u636e\u6821\u9a8c \u5e8f\u5217\u5316","title":"7.restframework\u5e8f\u5217\u5316"},{"location":"Django/reatframework_serializer/reatframework_serializer/#1","text":"\u5e8f\u5217\u5316\u5668\u5c06django\u901a\u8fc7orm\u64cd\u4f5c\u4ece\u6570\u636e\u5e93\u4e2d\u53d6\u5f97\u7684\u6570\u636e\u505a\u5e8f\u5217\u5316\u64cd\u4f5c\u8f6c\u6362\u4e3aJson\u6570\u636e \u9700\u8981\u7f16\u5199\u5e8f\u5217\u5316\u7c7b from api import models from rest_framework import serializers class DepartSerializer(serializers.Serializer): title = serializers.CharField() count = serializers.IntegerField() \u5e76\u4e14\u5728 \u89c6\u56fe\u51fd\u6570\u4e2d\u5e94\u7528 \uff0c\u5b9e\u4f8b\u5316 DepartSerializer \u5bf9\u8c61\u5e76\u4e14\u4f20\u5165\u901a\u8fc7ORM\u67e5\u8be2\u5f97\u5230\u7684\u5bf9\u8c61 QueryDict class DepartView(APIView): def get(self, request, *args, **kwargs): depart_object = models.Depart.objects.all().first() ser = DepartSerializer(instance=depart_object) print(ser.data) return Response(ser.data) \u5728postman\u4e2d\u6d4b\u8bd5 \u5e8f\u5217\u5316\u5668\u6210\u529f\u5f97\u5230\u6570\u636e\uff0c\u5e76\u4e14\u8fd4\u56de\u7ed9\u63a5\u53e3Json\u6570\u636e \u6ce8\u610f\u26a0\ufe0f\uff1a \u5728\u5e8f\u5217\u5316\u5668\u7c7b\u4e2d\u7684\u5b57\u6bb5\u540d\u5e94\u8be5\u4e0eORM\u4e2d\u7684\u5b57\u6bb5\u540d\u4fdd\u6301\u4e00\u81f4 \u540c\u65f6\u6570\u636e\u7c7b\u578b field \u4e5f\u8981\u4fdd\u6301\u4e00\u81f4","title":"1.\u5e8f\u5217\u5316\u5668\u7684\u7b80\u5355\u5b9e\u7528"},{"location":"Django/reatframework_serializer/reatframework_serializer/#2","text":"\u89c6\u56fe\u51fd\u6570\u4e2d\u7684\u5e8f\u5217\u5316\u5668\u7684\u5bf9\u8c61\u5728\u751f\u6210\u65f6\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u53c2\u6570 many=True \u6b64\u65f6\uff0cmodels\u63a5\u6536\u7684\u5bf9\u8c61\u5e94\u8be5\u662f\u591a\u4e2a\uff0c\u653e\u5728\u4e00\u4e2a\u5217\u8868\u4e2d [obj1,obj2,obj3,....] \u7528\u5355\u4e2a\u5bf9\u8c61\u63a5\u6536\u5c31\u4e0d\u592a\u5408\u9002\u4e86\uff0c\u8fd9\u91cc\u7528 queryset \u6765\u63a5\u6536 # queryset = [obj1,obj2,obj3,....] queryset = models.Depart.objects.all() from rest_framework.views import APIView from rest_framework.response import Response from api import models from rest_framework import serializers class DepartSerializer(serializers.Serializer): title = serializers.CharField() count = serializers.IntegerField() class DepartView(APIView): def get(self, request, *args, **kwargs): queryset = models.Depart.objects.all() ser = DepartSerializer(instance=queryset, many=True) print(ser.data) context = {\"status\": True, \"data\": ser.data} return Response(context) Postman\u4e2d\u7684\u6d4b\u8bd5\u7ed3\u679c\uff1a","title":"2. \u5bf9\u591a\u4e2a\u5bf9\u8c61\u7684\u5e8f\u5217\u5316"},{"location":"Django/reatframework_serializer/reatframework_serializer/#3modelserializer","text":"class DepartSerializer(serializers.ModelSerializer): class Meta: model = models.Depart fields = \"__all__\" \u66f4\u52a0\u8f7b\u677e\u7684\u65b9\u5f0f\uff0c\u7c7b\u4f3c ModelForm \u7684\u539f\u7406 \u5728postman\u4e2d\u7684\u6d4b\u8bd5\u7ed3\u679c\uff1a \u6240\u6709\u6570\u636e\u5b57\u6bb5\u90fd\u53ef\u4ee5\u88ab\u5e8f\u5217\u5316","title":"3.ModelSerializer"},{"location":"Django/reatframework_serializer/reatframework_serializer/#4source","text":"class UserSerializer(serializers.ModelSerializer): xx = serializers.CharField(source='get_gender_display') depart = serializers.CharField(source='depart.title') ctime = serializers.DateTimeField(format=\"%Y-%m-%d\") class Meta: model = models.UserInfo # fields = \"__all__\" fields = ['name', 'age', 'xx', 'depart', 'ctime'] source\u53bb\u6570\u636e\u5e93\u4e2d\u5bfb\u627e\u5230\u5bf9\u5e94\u5b57\u6bb5\uff0c new_name \u4f5c\u4e3a\u8fd4\u56de\u7684Json\u4e2d\u7684\u6570\u636e\u7684\u952e\u540d class UserView(APIView): def get(self, request, *args, **kwargs): models.UserInfo.objects.all().update(ctime=datetime.datetime.now()) queryset = models.UserInfo.objects.all() ser = UserSerializer(instance=queryset, many=True) context = {\"status\": True, \"data\": ser.data} return Response(context) \u5728postman\u4e2d\u7684\u6d4b\u8bd5\u7ed3\u679c\uff1a","title":"4.source &amp; \u65f6\u95f4\u683c\u5f0f\u5316"},{"location":"Django/reatframework_serializer/reatframework_serializer/#5","text":"\u5728 serializers \u5b57\u6bb5\u4e2d\u81ea\u5b9a\u4e49 SerializerMethodField() \u5e76\u4e14\u5b9a\u4e49\u51fd\u6570\uff08\u7c7b\u4f3c\u4e0e\u94a9\u5b50\uff09 def get_xxx(self, obj): return '\u8fd9\u91cc\u662f\u81ea\u5b9a\u4e49\u65b9\u6cd5' class UserSerializer(serializers.ModelSerializer): xx = serializers.CharField(source='get_gender_display') depart = serializers.CharField(source='depart.title') ctime = serializers.DateTimeField(format=\"%Y-%m-%d\") xxx = serializers.SerializerMethodField() class Meta: model = models.UserInfo # fields = \"__all__\" fields = ['name', 'age', 'xx', 'depart', 'ctime', 'xxx'] def get_xxx(self, obj): return '\u8fd9\u91cc\u662f\u81ea\u5b9a\u4e49\u65b9\u6cd5'","title":"5. \u5e8f\u5217\u5316\u81ea\u5b9a\u4e49\u65b9\u6cd5"},{"location":"Django/reatframework_serializer/reatframework_serializer/#6","text":"\u4e3b\u8981\u662fORM\u7c7b\u4e2d\u5bf9\u5e94\u7684 ForeignKey \u548c ManagToManyField \u5b57\u6bb5\u8fdb\u884c\u5e8f\u5217\u5316 \u57fa\u4e8e SerializerMethodField \u81ea\u5b9a\u4e49\u65b9\u6cd5\u5bf9\u5173\u8054\u6570\u636e\u8fdb\u884c\u5e8f\u5217\u5316 \u57fa\u4e8e\u5d4c\u5957\u7c7b\u7684\u5e8f\u5217\u5316 from django.db import models class Role(models.Model): title = models.CharField(verbose_name=\"\u6807\u9898\", max_length=32) order = models.IntegerField(verbose_name=\"\u987a\u5e8f\") class Tag(models.Model): caption = models.CharField(verbose_name=\"\u540d\u79f0\", max_length=32) class UserInfo(models.Model): name = models.CharField(verbose_name=\"\u59d3\u540d\", max_length=32) gender = models.SmallIntegerField(verbose_name=\"\u6027\u522b\", choices=((1, \"\u7537\"), (2, \"\u5973\"))) role = models.ForeignKey(verbose_name=\"\u89d2\u8272\", to=\"Role\", on_delete=models.CASCADE) ctime = models.DateTimeField(verbose_name=\"\u521b\u5efa\u65f6\u95f4\", auto_now_add=True) tags = models.ManyToManyField(verbose_name=\"\u6807\u7b7e\", to=\"Tag\") from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers from api import models class RoleSerializer(serializers.ModelSerializer): class Meta: model = models.Role # fields = \"__all__\" fields = [\"id\", 'title'] class TagSerializer(serializers.ModelSerializer): class Meta: model = models.Tag fields = \"__all__\" class InfoSerializer(serializers.ModelSerializer): role = RoleSerializer() tags = TagSerializer(many=True) class Meta: model = models.UserInfo fields = ['id', 'name', \"role\", \"tags\"] class InfoView(APIView): def get(self, request): queryset = models.UserInfo.objects.all() ser = InfoSerializer(instance=queryset, many=True) print(type(ser.data), ser.data) return Response(ser.data)","title":"6.\u5e8f\u5217\u5316\u7c7b\u5d4c\u5957"},{"location":"Django/reatframework_serializer/reatframework_serializer/#7","text":"from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers from api import models class MySerializer(serializers.Serializer): more = serializers.SerializerMethodField() def get_more(self, obj): return \"123\" class InfoSerializer(serializers.ModelSerializer, MySerializer): class Meta: model = models.UserInfo fields = [\"id\", \"name\", 'more'] class InfoView(APIView): def get(self, request): instance = models.UserInfo.objects.all().first() ser = InfoSerializer(instance=instance, many=False) print(type(ser.data), ser.data) return Response(ser.data)","title":"7.\u5e8f\u5217\u5316\u7c7b\u7ee7\u627f"},{"location":"Django/reatframework_serializer_isvalid/reatframework_serializer_isvalid/","text":"8.restframework\u6570\u636e\u6821\u9a8c \u8fd9\u7bc7\u968f\u7b14\u9488\u5bf9\u4e8e\u5e94\u7528\uff0c\u5c06\u4f1a\u6709\u5f88\u591a\u5b9e\u4f8b\u4ee3\u7801\u7247\u6bb5\uff0c\u6e90\u7801\u809d\u4e0d\u52a8\u4e86\uff0c\u9700\u8981\u7f13\u7f13\ud83c\udf88 1.\u5185\u7f6e\u6821\u9a8c\uff08\u57fa\u4e8eSerializer\uff09 from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers class InfoSerializer(serializers.Serializer): title = serializers.CharField(required=True, max_length=20, min_length=6) order = serializers.IntegerField(required=False, max_value=100, min_value=10) level = serializers.ChoiceField(choices=[(\"1\", \"\u9ad8\u7ea7\"), (2, \"\u4e2d\u7ea7\")]) class InfoView(APIView): def post(self, request): ser = InfoSerializer(data=request.data) if ser.is_valid(): return Response(ser.validated_data) else: return Response(ser.errors) \u5bf9\u4e8e\u5185\u7f6e\u6821\u9a8c \u57fa\u4e8eserializer\u7c7b\u7684serializer\u5b57\u6bb5\u540e\u6dfb\u52a0\u53c2\u6570 - required - max_length - min_length - choices=[(\"1\", \"xx\"), (2, \"xxx\")] - validators=[xxvalidator(message=\"xxx\u6821\u9a8c\u9519\u8bef\")] - validators=[EmailValidator(message=\"\u90ae\u7bb1\u683c\u5f0f\u9519\u8bef\")] 2.\u6b63\u5219\u6821\u9a8c \u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u6821\u9a8c from django.core.validators import RegexValidator \u4f7f\u7528django\u5185\u7f6e\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u6821\u9a8c\u7c7b\u6765\u5b9e\u73b0 class InfoSerializer(serializers.Serializer): more = serializers.CharField(validators=[RegexValidator(r\"\\d+\", message=\"\u683c\u5f0f\u9519\u8bef\")]) 3.\u94a9\u5b50\u6821\u9a8c \u57fa\u4e8eserializer\u7684\u94a9\u5b50\u65b9\u6cd5\u8fdb\u884c\u6821\u9a8c \u4f8b\u5982\uff1a\u5bf9code\u5b57\u6bb5\u8fdb\u884c\u6821\u9a8c from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers from rest_framework import exceptions class InfoSerializer(serializers.Serializer): title = serializers.CharField(required=True, max_length=20, min_length=6) order = serializers.IntegerField(required=False, max_value=100, min_value=10) code = serializers.CharField() def validate_code(self, value): print(value) if len(value) > 6: raise exceptions.ValidationError(\"\u5b57\u6bb5\u94a9\u5b50\u6821\u9a8c\u5931\u8d25\") return value def validate(self, attrs): print(\"validate=\", attrs) # api_settings.NON_FIELD_ERRORS_KEY # raise exceptions.ValidationError(\"\u5168\u5c40\u94a9\u5b50\u6821\u9a8c\u5931\u8d25\") return attrs \u94a9\u5b50\u65b9\u6cd5 validate_code \u4f20\u5165\u4e24\u4e2a\u56fa\u5b9a\u53c2\u6570\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u56fa\u5b9a\u540d\u79f0\u4e3a value ,\u5c31\u662f\u8bf7\u6c42\u4e2d\u8be5\u5b57\u6bb5\u7684\u503c \u5982\u679c\u6821\u9a8c\u4e0d\u901a\u8fc7\uff0c\u901a\u8fc7 raise exceptions.ValidationError(\"\u5b57\u6bb5\u94a9\u5b50\u6821\u9a8c\u5931\u8d25\")\u629b\u51fa\u5f02\u5e38 \u629b\u51fa\u7684\u5f02\u5e38\u4fe1\u606f\u53ef\u4ee5\u81ea\u5b9a\u4e49\uff0c\u652f\u6301Json\u683c\u5f0f\u8fd4\u56de\u5f02\u5e38 {\"status\":False,\"detail\":\"this field is invalid\"} def validate_code(self, value): print(value) if len(value) > 6: context = { \"status\":False, \"detail\":\"this field is invalid\" } raise exceptions.ValidationError(context) return value \u5168\u5c40\u94a9\u5b50\u65b9\u6cd5 validate \u4f1a\u5728\u6240\u6709\u94a9\u5b50\u65b9\u6cd5\u6821\u9a8c\u4e4b\u5916\u6267\u884c\uff0c\u8fdb\u884c\u5168\u5c40\u6821\u9a8c \u5982\u679c\u6821\u9a8c\u4e0d\u901a\u8fc7\uff0c\u4e3b\u52a8\u629b\u51fa\u5f02\u5e38 raise exceptions.ValidationError(\"\u5168\u5c40\u94a9\u5b50\u6821\u9a8c\u5931\u8d25\") 4.Model\u6821\u9a8c\uff08\u57fa\u4e8eModelSerializer\uff09 from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers from rest_framework import exceptions from api import models from django.core.validators import RegexValidator class RoleSerializer(serializer.ModelSerializer): more = serializers.CharField(required=True) class Meta: model = models.Role fields = [\"title\", \"order\", \"more\"] extra_kwargs = { \"title\": {\"validators\": [RegexValidator(r\"\\d+\", message=\"\u683c\u5f0f\u9519\u8bef\")]}, \"order\": {\"min_value\": 5}, } def validate_more(self, value): return value def validate(self, attrs): return attrs \u5728ModelSerializer\u4e2d\u7684\u6821\u9a8c\u6761\u4ef6\uff0c\u5199\u5728 Meta \u7c7b\u7684 extra_kwargs \u4e2d,\u4ee5 \u952e\u503c\u5bf9 \u7684\u65b9\u5f0f\u5bf9\u6bcf\u4e2a\u5b57\u6bb5\u6dfb\u52a0\u6821\u9a8c\u7684\u6761\u4ef6 \u5b57\u5178\u7684\u5d4c\u5957 extra_kwargs = { \"title\": {\"validators\": [RegexValidator(r\"\\d+\", message=\"\u683c\u5f0f\u9519\u8bef\")]}, \"order\": {\"min_value\": 5}, } 5.\u57fa\u4e8eModelSerializer\u6821\u9a8c\u548c\u4fdd\u5b58 \uff08FK\uff09 class InfoModelSerializer(serializers.ModelSerializer): class Meta: model = models.UserInfo fields = [\"name\", \"age\", \"gender\", \"depart\"] def validate_depart(self, value): print(\"value\",value) return value class InfoView(APIView): def post(self, request): print(request.data) ser = InfoModelSerializer(data=request.data) if ser.is_valid(): ser.save() print(ser.data) # return Response(ser.data) else: print(ser.errors) return Response(\"suucess\") \u5bf9\u4e8e\u5b57\u6bb5\u4e2d\u6709\u5916\u952e\u7684\u60c5\u51b5\uff0c\u5728\u524d\u7aef\u53d1\u9001post\u8bf7\u6c42\u65f6\uff0c\u5e94\u8be5\u4f20\u5165\u5916\u952e\u7684\u90a3\u5f20\u8868 id \u4f46\u662f\u5982\u679c\u7528\u94a9\u5b50\u65b9\u6cd5\u5bf9\u5b57\u6bb5\u8fdb\u884c\u6821\u9a8c\uff0c\u94a9\u5b50\u65b9\u6cd5\u6240\u62ff\u5230\u7684\u5916\u952e\uff0c\u5219\u662f\u5916\u952e\u5bf9\u5e94\u8868\u7684\u5bf9\u8c61 \u5f97\u5230\u7684\u662f Depart object \u5bf9\u8c61 \u62ff\u5230\u5bf9\u8c61\u7684\u8bdd\u5c31\u53ef\u4ee5\u53d6\u5230\u5bf9\u8c61\u4e2d\u7684\u6240\u6709\u6210\u5458\uff0c\u505a\u66f4\u591a\u7684\u5224\u65ad\u548c\u6821\u9a8c\u4e86\uff0c\u751a\u597d\ud83c\udf88 \u4f8b\u5982\uff1a class InfoModelSerializer(serializers.ModelSerializer): class Meta: model = models.UserInfo fields = [\"name\", \"age\", \"gender\", \"depart\"] def validate_depart(self, value): print(\"value\", value) if value.id > 1: return value raise exceptions.ValidationError({\"status\":False,\"detail\":\"\u90e8\u95e8id\u9519\u8bef\"}) 6. \u5e8f\u5217\u5316\u603b\u7ed3 7.\u540c\u65f6\u6821\u9a8c\u548c\u5e8f\u5217\u5316 ser.save() \u7684\u8fd4\u56de\u503c\uff0c\u5728\u6267\u884c\u5e8f\u5217\u5316\u5668\u7684save\u4e4b\u540e\uff0c\u4f1a\u5f97\u5230\u8be5\u65b9\u6cd5\u7684\u8fd4\u56de\u503c \uff0c \u8fd4\u56de\u503c\u662f\u5f53\u524d\u521b\u5efa\u7684\u5bf9\u8c61 xxObject \u53ef\u4ee5\u8fd9\u6837\u7406\u89e3 instance = ser.save() \u5728\u6b64\uff0c\u5e0c\u671b\u518d\u8fdb\u884c\u4e00\u6b21\u5e8f\u5217\u5316\u7684\u64cd\u4f5c\uff0c\u5c06\u51c6\u5907\u5199\u5165\u6570\u636e\u5e93\u7684\u65b0\u6570\u636e\u518d\u6b21\u8fd4\u56de\u7ed9\u524d\u7aefAPI 7.1 \u4f7f\u7528\u4e24\u4e2a\u5e8f\u5217\u5316\u5668\u7c7b \u4f7f\u7528\u4e24\u4e2a\u5e8f\u5217\u5316\u5668\u7c7b\uff0c\u4e00\u4e2a\u7528\u4f5c\u6570\u636e\u6821\u9a8c\uff0c\u4e00\u4e2a\u7528\u4f5c\u6570\u636e\u5e8f\u5217\u5316 class InfoModelSerializer(serializers.ModelSerializer): class Meta: model = models.Depart fields = \"__all__\" class InfoModelSerializer2(serializers.ModelSerializer): class Meta: model = models.Depart fields = [\"id\", \"title\"] class InfoView(APIView): def post(self, request, *args, **kwargs): ser = InfoModelSerializer(data=request.data) if ser.is_valid(): instance = ser.save() print(instance) ser2 = InfoModelSerializer2(instance=instance) return Response(ser2.data) else: print(ser.errors) return Response(\"fail\") \u5176\u4e2d InfoModelSerializer \u7528\u6765\u505a\u6570\u636e\u6821\u9a8c\uff0c\u6821\u9a8c\u6240\u6709\u7684\u5b57\u6bb5 __all__ \uff0c InfoModelSerializer2 \u7528\u6765\u505a\u5e8f\u5217\u5316\uff0c fields = [\"id\", \"title\"] \u7528\u6765\u63a7\u5236\u8f93\u51fa\u54ea\u4e9b\u5b57\u6bb5 \u4e2a\u4eba\u8ba4\u4e3a\u8fd9\u662f\u4e00\u79cd\u6e05\u6670\u7684\u65b9\u5f0f 7.2 \u4e00\u4e2a\u5e8f\u5217\u5316\u5668\u540c\u65f6\u5b8c\u6210\u6821\u9a8c\u548c\u5e8f\u5217\u5316 serializers \u5b57\u6bb5\u7684 read_only \u548c write_only \u53c2\u6570 read_only\u53ea\u6709\u5728\u5e8f\u5217\u5316\u7684\u65f6\u5019\u624d\u4f1a\u4f7f\u7528 write_only\u53ea\u6709\u5728\u6570\u636e\u6821\u9a8c\u7684\u65f6\u5019\u624d\u4f1a\u4f7f\u7528 \u4f8b\u5b50\uff1a \u5bf9\u4e8e id \u5b57\u6bb5\uff0c\u7528\u6237\uff08\u524d\u7aefAPI\uff09\u5728\u4f20\u5165\u7684\u65f6\u5019\u5e76\u4e0d\u4f1a\u4f20\u5165\u8fd9\u4e2a\u5b57\u6bb5\uff0c \u8fd9\u4e2a\u5b57\u6bb5\u662f\u6570\u636e\u586b\u5165\u6570\u636e\u5e93\u4e4b\u540e\uff0c\u6570\u636e\u5e93\u81ea\u52a8\u751f\u6210\u7684 \u4f46\u662f\u6211\u4eec\u901a\u5e38\u5e0c\u671b\u5728\u5e8f\u5217\u5316\u8fd4\u56de\u6570\u636e\u7684\u65f6\u5019\u643a\u5e26 id \u8fd9\u4e2a\u53c2\u6570 class InfoModelSerializer(serializers.ModelSerializer): class Meta: model = models.Depart fields = [\"id\", \"title\", \"order\", \"count\"] extra_kwargs = { \"id\": {\"read_only\": True} } class InfoView(APIView): def post(self, request, *args, **kwargs): ser = InfoModelSerializer(data=request.data) if ser.is_valid(): instance = ser.save() print(instance) ser2 = InfoModelSerializer(instance=instance) return Response(ser2.data) else: print(ser.errors) return Response(\"fail\") \u5728\u8fd9\u91cc\u6dfb\u52a0\u4e86 \"id\": {\"read_only\": True} \u5728 extra_kwargs \u4e2d \u5728postman\u4e2d\u7684\u6d4b\u8bd5\uff0c\u4f20\u51653\u4e2a\u6570\u636e\uff0c\u5f97\u5230\u7684\u6570\u636e\u4e2d\u5305\u62ecid \u53e6\u4e00\u4e2a\u63a7\u5236\u7684\u4f8b\u5b50 class UsModelSerializer(serializer.ModelSerializer): gender_info = serializer.Charfield(source=\"get_gender_display\",read_only=True) class Meta: model=models.UserInfo fields = [\"id\",\"name\",\"age\",\"gender\",\"depart\",\"gender_info\"] extra_kwargs={ \"id\":{\"read_only\":True}, \"gender\":{\"write_only\":True} } 7.3 \u57fa\u4e8e\u94a9\u5b50\u8fdb\u884c\u63a7\u5236 class UsModelSerializer(serializer.ModelSerializer): v1 = seriaizer.SerializerMethodField() class Meta: model=models.UserInfo fields = [\"id\",\"name\",\"age\",\"gender\",\"depart\",\"gender_info\",\"v1\"] extra_kwargs={ \"id\":{\"read_only\":True}, \"gender\":{\"write_only\":True} } def get_v1(self,obj): return {\"id\":obj.gender,\"text\":obj.get_gender_display} 8.\u901a\u8fc7\u4e00\u4e2a\u5b57\u6bb5\u505a\u4e00\u4e9b\u795e\u5947\u7684\u4e8b\u513f \u91cd\u5199\u94a9\u5b50\u65b9\u6cd5\u7684\u52a0\u8f7d\u6d41\u7a0b\uff08\u7cbe\u9ad3\uff09 \u89c6\u56fe\u51fd\u6570\u4e2d from api.ext.hook import NbHookSerializer class SbModelSerializer(NbHookSerializer, serializers.ModelSerializer): class Meta: model = models.NbUserInfo fields = [\"id\", \"name\", \"age\", \"gender\"] extra_kwargs = { \"id\": {\"read_only\": True} } def nb_gender(self, obj): return obj.get_gender_display() def nb_name(self, obj): return obj.get_gender_display() class SbView(APIView): def post(self, request, *args, **kwargs): print(request.data) ser = SbModelSerializer(data=request.data) if ser.is_valid(): ser.save() return Response(ser.data) else: return Response(ser.errors) \u65b0\u5efa\u4e00\u4e2a\u5de5\u5177 hook.py . \u251c\u2500\u2500 __pycache__ \u2502 \u2514\u2500\u2500 hook.cpython-310.pyc \u2514\u2500\u2500 hook.py from collections import OrderedDict from rest_framework.fields import SkipField from rest_framework.relations import PKOnlyObject class NbHookSerializer(object): def to_representation(self, instance): ret = OrderedDict() fields = self._readable_fields for field in fields: if hasattr(self, 'nb_%s' % field.field_name): value = getattr(self, 'nb_%s' % field.field_name)(instance) ret[field.field_name] = value else: try: attribute = field.get_attribute(instance) except SkipField: continue check_for_none = attribute.pk if isinstance(attribute, PKOnlyObject) else attribute if check_for_none is None: ret[field.field_name] = None else: ret[field.field_name] = field.to_representation(attribute) return ret models.py class NbUserInfo(models.Model): name = models.CharField(verbose_name=\"\u59d3\u540d\", max_length=32) age = models.IntegerField(verbose_name=\"\u5e74\u9f84\") gender_choices = ((1, \"\u7537\"), (2, \"\u5973\")) gender = models.SmallIntegerField(verbose_name=\"\u6027\u522b\", choices=gender_choices)","title":"8.restframework\u6570\u636e\u6821\u9a8c"},{"location":"Django/reatframework_serializer_isvalid/reatframework_serializer_isvalid/#8restframework","text":"\u8fd9\u7bc7\u968f\u7b14\u9488\u5bf9\u4e8e\u5e94\u7528\uff0c\u5c06\u4f1a\u6709\u5f88\u591a\u5b9e\u4f8b\u4ee3\u7801\u7247\u6bb5\uff0c\u6e90\u7801\u809d\u4e0d\u52a8\u4e86\uff0c\u9700\u8981\u7f13\u7f13\ud83c\udf88","title":"8.restframework\u6570\u636e\u6821\u9a8c"},{"location":"Django/reatframework_serializer_isvalid/reatframework_serializer_isvalid/#1serializer","text":"from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers class InfoSerializer(serializers.Serializer): title = serializers.CharField(required=True, max_length=20, min_length=6) order = serializers.IntegerField(required=False, max_value=100, min_value=10) level = serializers.ChoiceField(choices=[(\"1\", \"\u9ad8\u7ea7\"), (2, \"\u4e2d\u7ea7\")]) class InfoView(APIView): def post(self, request): ser = InfoSerializer(data=request.data) if ser.is_valid(): return Response(ser.validated_data) else: return Response(ser.errors) \u5bf9\u4e8e\u5185\u7f6e\u6821\u9a8c \u57fa\u4e8eserializer\u7c7b\u7684serializer\u5b57\u6bb5\u540e\u6dfb\u52a0\u53c2\u6570 - required - max_length - min_length - choices=[(\"1\", \"xx\"), (2, \"xxx\")] - validators=[xxvalidator(message=\"xxx\u6821\u9a8c\u9519\u8bef\")] - validators=[EmailValidator(message=\"\u90ae\u7bb1\u683c\u5f0f\u9519\u8bef\")]","title":"1.\u5185\u7f6e\u6821\u9a8c\uff08\u57fa\u4e8eSerializer\uff09"},{"location":"Django/reatframework_serializer_isvalid/reatframework_serializer_isvalid/#2","text":"\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u6821\u9a8c from django.core.validators import RegexValidator \u4f7f\u7528django\u5185\u7f6e\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u6821\u9a8c\u7c7b\u6765\u5b9e\u73b0 class InfoSerializer(serializers.Serializer): more = serializers.CharField(validators=[RegexValidator(r\"\\d+\", message=\"\u683c\u5f0f\u9519\u8bef\")])","title":"2.\u6b63\u5219\u6821\u9a8c"},{"location":"Django/reatframework_serializer_isvalid/reatframework_serializer_isvalid/#3","text":"\u57fa\u4e8eserializer\u7684\u94a9\u5b50\u65b9\u6cd5\u8fdb\u884c\u6821\u9a8c \u4f8b\u5982\uff1a\u5bf9code\u5b57\u6bb5\u8fdb\u884c\u6821\u9a8c from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers from rest_framework import exceptions class InfoSerializer(serializers.Serializer): title = serializers.CharField(required=True, max_length=20, min_length=6) order = serializers.IntegerField(required=False, max_value=100, min_value=10) code = serializers.CharField() def validate_code(self, value): print(value) if len(value) > 6: raise exceptions.ValidationError(\"\u5b57\u6bb5\u94a9\u5b50\u6821\u9a8c\u5931\u8d25\") return value def validate(self, attrs): print(\"validate=\", attrs) # api_settings.NON_FIELD_ERRORS_KEY # raise exceptions.ValidationError(\"\u5168\u5c40\u94a9\u5b50\u6821\u9a8c\u5931\u8d25\") return attrs \u94a9\u5b50\u65b9\u6cd5 validate_code \u4f20\u5165\u4e24\u4e2a\u56fa\u5b9a\u53c2\u6570\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u56fa\u5b9a\u540d\u79f0\u4e3a value ,\u5c31\u662f\u8bf7\u6c42\u4e2d\u8be5\u5b57\u6bb5\u7684\u503c \u5982\u679c\u6821\u9a8c\u4e0d\u901a\u8fc7\uff0c\u901a\u8fc7 raise exceptions.ValidationError(\"\u5b57\u6bb5\u94a9\u5b50\u6821\u9a8c\u5931\u8d25\")\u629b\u51fa\u5f02\u5e38 \u629b\u51fa\u7684\u5f02\u5e38\u4fe1\u606f\u53ef\u4ee5\u81ea\u5b9a\u4e49\uff0c\u652f\u6301Json\u683c\u5f0f\u8fd4\u56de\u5f02\u5e38 {\"status\":False,\"detail\":\"this field is invalid\"} def validate_code(self, value): print(value) if len(value) > 6: context = { \"status\":False, \"detail\":\"this field is invalid\" } raise exceptions.ValidationError(context) return value \u5168\u5c40\u94a9\u5b50\u65b9\u6cd5 validate \u4f1a\u5728\u6240\u6709\u94a9\u5b50\u65b9\u6cd5\u6821\u9a8c\u4e4b\u5916\u6267\u884c\uff0c\u8fdb\u884c\u5168\u5c40\u6821\u9a8c \u5982\u679c\u6821\u9a8c\u4e0d\u901a\u8fc7\uff0c\u4e3b\u52a8\u629b\u51fa\u5f02\u5e38 raise exceptions.ValidationError(\"\u5168\u5c40\u94a9\u5b50\u6821\u9a8c\u5931\u8d25\")","title":"3.\u94a9\u5b50\u6821\u9a8c"},{"location":"Django/reatframework_serializer_isvalid/reatframework_serializer_isvalid/#4modelmodelserializer","text":"from rest_framework.views import APIView from rest_framework.response import Response from rest_framework import serializers from rest_framework import exceptions from api import models from django.core.validators import RegexValidator class RoleSerializer(serializer.ModelSerializer): more = serializers.CharField(required=True) class Meta: model = models.Role fields = [\"title\", \"order\", \"more\"] extra_kwargs = { \"title\": {\"validators\": [RegexValidator(r\"\\d+\", message=\"\u683c\u5f0f\u9519\u8bef\")]}, \"order\": {\"min_value\": 5}, } def validate_more(self, value): return value def validate(self, attrs): return attrs \u5728ModelSerializer\u4e2d\u7684\u6821\u9a8c\u6761\u4ef6\uff0c\u5199\u5728 Meta \u7c7b\u7684 extra_kwargs \u4e2d,\u4ee5 \u952e\u503c\u5bf9 \u7684\u65b9\u5f0f\u5bf9\u6bcf\u4e2a\u5b57\u6bb5\u6dfb\u52a0\u6821\u9a8c\u7684\u6761\u4ef6 \u5b57\u5178\u7684\u5d4c\u5957 extra_kwargs = { \"title\": {\"validators\": [RegexValidator(r\"\\d+\", message=\"\u683c\u5f0f\u9519\u8bef\")]}, \"order\": {\"min_value\": 5}, }","title":"4.Model\u6821\u9a8c\uff08\u57fa\u4e8eModelSerializer\uff09"},{"location":"Django/reatframework_serializer_isvalid/reatframework_serializer_isvalid/#5modelserializer-fk","text":"class InfoModelSerializer(serializers.ModelSerializer): class Meta: model = models.UserInfo fields = [\"name\", \"age\", \"gender\", \"depart\"] def validate_depart(self, value): print(\"value\",value) return value class InfoView(APIView): def post(self, request): print(request.data) ser = InfoModelSerializer(data=request.data) if ser.is_valid(): ser.save() print(ser.data) # return Response(ser.data) else: print(ser.errors) return Response(\"suucess\") \u5bf9\u4e8e\u5b57\u6bb5\u4e2d\u6709\u5916\u952e\u7684\u60c5\u51b5\uff0c\u5728\u524d\u7aef\u53d1\u9001post\u8bf7\u6c42\u65f6\uff0c\u5e94\u8be5\u4f20\u5165\u5916\u952e\u7684\u90a3\u5f20\u8868 id \u4f46\u662f\u5982\u679c\u7528\u94a9\u5b50\u65b9\u6cd5\u5bf9\u5b57\u6bb5\u8fdb\u884c\u6821\u9a8c\uff0c\u94a9\u5b50\u65b9\u6cd5\u6240\u62ff\u5230\u7684\u5916\u952e\uff0c\u5219\u662f\u5916\u952e\u5bf9\u5e94\u8868\u7684\u5bf9\u8c61 \u5f97\u5230\u7684\u662f Depart object \u5bf9\u8c61 \u62ff\u5230\u5bf9\u8c61\u7684\u8bdd\u5c31\u53ef\u4ee5\u53d6\u5230\u5bf9\u8c61\u4e2d\u7684\u6240\u6709\u6210\u5458\uff0c\u505a\u66f4\u591a\u7684\u5224\u65ad\u548c\u6821\u9a8c\u4e86\uff0c\u751a\u597d\ud83c\udf88 \u4f8b\u5982\uff1a class InfoModelSerializer(serializers.ModelSerializer): class Meta: model = models.UserInfo fields = [\"name\", \"age\", \"gender\", \"depart\"] def validate_depart(self, value): print(\"value\", value) if value.id > 1: return value raise exceptions.ValidationError({\"status\":False,\"detail\":\"\u90e8\u95e8id\u9519\u8bef\"})","title":"5.\u57fa\u4e8eModelSerializer\u6821\u9a8c\u548c\u4fdd\u5b58 \uff08FK\uff09"},{"location":"Django/reatframework_serializer_isvalid/reatframework_serializer_isvalid/#6","text":"","title":"6. \u5e8f\u5217\u5316\u603b\u7ed3"},{"location":"Django/reatframework_serializer_isvalid/reatframework_serializer_isvalid/#7","text":"ser.save() \u7684\u8fd4\u56de\u503c\uff0c\u5728\u6267\u884c\u5e8f\u5217\u5316\u5668\u7684save\u4e4b\u540e\uff0c\u4f1a\u5f97\u5230\u8be5\u65b9\u6cd5\u7684\u8fd4\u56de\u503c \uff0c \u8fd4\u56de\u503c\u662f\u5f53\u524d\u521b\u5efa\u7684\u5bf9\u8c61 xxObject \u53ef\u4ee5\u8fd9\u6837\u7406\u89e3 instance = ser.save() \u5728\u6b64\uff0c\u5e0c\u671b\u518d\u8fdb\u884c\u4e00\u6b21\u5e8f\u5217\u5316\u7684\u64cd\u4f5c\uff0c\u5c06\u51c6\u5907\u5199\u5165\u6570\u636e\u5e93\u7684\u65b0\u6570\u636e\u518d\u6b21\u8fd4\u56de\u7ed9\u524d\u7aefAPI","title":"7.\u540c\u65f6\u6821\u9a8c\u548c\u5e8f\u5217\u5316"},{"location":"Django/reatframework_serializer_isvalid/reatframework_serializer_isvalid/#71","text":"\u4f7f\u7528\u4e24\u4e2a\u5e8f\u5217\u5316\u5668\u7c7b\uff0c\u4e00\u4e2a\u7528\u4f5c\u6570\u636e\u6821\u9a8c\uff0c\u4e00\u4e2a\u7528\u4f5c\u6570\u636e\u5e8f\u5217\u5316 class InfoModelSerializer(serializers.ModelSerializer): class Meta: model = models.Depart fields = \"__all__\" class InfoModelSerializer2(serializers.ModelSerializer): class Meta: model = models.Depart fields = [\"id\", \"title\"] class InfoView(APIView): def post(self, request, *args, **kwargs): ser = InfoModelSerializer(data=request.data) if ser.is_valid(): instance = ser.save() print(instance) ser2 = InfoModelSerializer2(instance=instance) return Response(ser2.data) else: print(ser.errors) return Response(\"fail\") \u5176\u4e2d InfoModelSerializer \u7528\u6765\u505a\u6570\u636e\u6821\u9a8c\uff0c\u6821\u9a8c\u6240\u6709\u7684\u5b57\u6bb5 __all__ \uff0c InfoModelSerializer2 \u7528\u6765\u505a\u5e8f\u5217\u5316\uff0c fields = [\"id\", \"title\"] \u7528\u6765\u63a7\u5236\u8f93\u51fa\u54ea\u4e9b\u5b57\u6bb5 \u4e2a\u4eba\u8ba4\u4e3a\u8fd9\u662f\u4e00\u79cd\u6e05\u6670\u7684\u65b9\u5f0f","title":"7.1 \u4f7f\u7528\u4e24\u4e2a\u5e8f\u5217\u5316\u5668\u7c7b"},{"location":"Django/reatframework_serializer_isvalid/reatframework_serializer_isvalid/#72","text":"serializers \u5b57\u6bb5\u7684 read_only \u548c write_only \u53c2\u6570 read_only\u53ea\u6709\u5728\u5e8f\u5217\u5316\u7684\u65f6\u5019\u624d\u4f1a\u4f7f\u7528 write_only\u53ea\u6709\u5728\u6570\u636e\u6821\u9a8c\u7684\u65f6\u5019\u624d\u4f1a\u4f7f\u7528 \u4f8b\u5b50\uff1a \u5bf9\u4e8e id \u5b57\u6bb5\uff0c\u7528\u6237\uff08\u524d\u7aefAPI\uff09\u5728\u4f20\u5165\u7684\u65f6\u5019\u5e76\u4e0d\u4f1a\u4f20\u5165\u8fd9\u4e2a\u5b57\u6bb5\uff0c \u8fd9\u4e2a\u5b57\u6bb5\u662f\u6570\u636e\u586b\u5165\u6570\u636e\u5e93\u4e4b\u540e\uff0c\u6570\u636e\u5e93\u81ea\u52a8\u751f\u6210\u7684 \u4f46\u662f\u6211\u4eec\u901a\u5e38\u5e0c\u671b\u5728\u5e8f\u5217\u5316\u8fd4\u56de\u6570\u636e\u7684\u65f6\u5019\u643a\u5e26 id \u8fd9\u4e2a\u53c2\u6570 class InfoModelSerializer(serializers.ModelSerializer): class Meta: model = models.Depart fields = [\"id\", \"title\", \"order\", \"count\"] extra_kwargs = { \"id\": {\"read_only\": True} } class InfoView(APIView): def post(self, request, *args, **kwargs): ser = InfoModelSerializer(data=request.data) if ser.is_valid(): instance = ser.save() print(instance) ser2 = InfoModelSerializer(instance=instance) return Response(ser2.data) else: print(ser.errors) return Response(\"fail\") \u5728\u8fd9\u91cc\u6dfb\u52a0\u4e86 \"id\": {\"read_only\": True} \u5728 extra_kwargs \u4e2d \u5728postman\u4e2d\u7684\u6d4b\u8bd5\uff0c\u4f20\u51653\u4e2a\u6570\u636e\uff0c\u5f97\u5230\u7684\u6570\u636e\u4e2d\u5305\u62ecid \u53e6\u4e00\u4e2a\u63a7\u5236\u7684\u4f8b\u5b50 class UsModelSerializer(serializer.ModelSerializer): gender_info = serializer.Charfield(source=\"get_gender_display\",read_only=True) class Meta: model=models.UserInfo fields = [\"id\",\"name\",\"age\",\"gender\",\"depart\",\"gender_info\"] extra_kwargs={ \"id\":{\"read_only\":True}, \"gender\":{\"write_only\":True} }","title":"7.2 \u4e00\u4e2a\u5e8f\u5217\u5316\u5668\u540c\u65f6\u5b8c\u6210\u6821\u9a8c\u548c\u5e8f\u5217\u5316"},{"location":"Django/reatframework_serializer_isvalid/reatframework_serializer_isvalid/#73","text":"class UsModelSerializer(serializer.ModelSerializer): v1 = seriaizer.SerializerMethodField() class Meta: model=models.UserInfo fields = [\"id\",\"name\",\"age\",\"gender\",\"depart\",\"gender_info\",\"v1\"] extra_kwargs={ \"id\":{\"read_only\":True}, \"gender\":{\"write_only\":True} } def get_v1(self,obj): return {\"id\":obj.gender,\"text\":obj.get_gender_display}","title":"7.3 \u57fa\u4e8e\u94a9\u5b50\u8fdb\u884c\u63a7\u5236"},{"location":"Django/reatframework_serializer_isvalid/reatframework_serializer_isvalid/#8","text":"\u91cd\u5199\u94a9\u5b50\u65b9\u6cd5\u7684\u52a0\u8f7d\u6d41\u7a0b\uff08\u7cbe\u9ad3\uff09 \u89c6\u56fe\u51fd\u6570\u4e2d from api.ext.hook import NbHookSerializer class SbModelSerializer(NbHookSerializer, serializers.ModelSerializer): class Meta: model = models.NbUserInfo fields = [\"id\", \"name\", \"age\", \"gender\"] extra_kwargs = { \"id\": {\"read_only\": True} } def nb_gender(self, obj): return obj.get_gender_display() def nb_name(self, obj): return obj.get_gender_display() class SbView(APIView): def post(self, request, *args, **kwargs): print(request.data) ser = SbModelSerializer(data=request.data) if ser.is_valid(): ser.save() return Response(ser.data) else: return Response(ser.errors) \u65b0\u5efa\u4e00\u4e2a\u5de5\u5177 hook.py . \u251c\u2500\u2500 __pycache__ \u2502 \u2514\u2500\u2500 hook.cpython-310.pyc \u2514\u2500\u2500 hook.py from collections import OrderedDict from rest_framework.fields import SkipField from rest_framework.relations import PKOnlyObject class NbHookSerializer(object): def to_representation(self, instance): ret = OrderedDict() fields = self._readable_fields for field in fields: if hasattr(self, 'nb_%s' % field.field_name): value = getattr(self, 'nb_%s' % field.field_name)(instance) ret[field.field_name] = value else: try: attribute = field.get_attribute(instance) except SkipField: continue check_for_none = attribute.pk if isinstance(attribute, PKOnlyObject) else attribute if check_for_none is None: ret[field.field_name] = None else: ret[field.field_name] = field.to_representation(attribute) return ret models.py class NbUserInfo(models.Model): name = models.CharField(verbose_name=\"\u59d3\u540d\", max_length=32) age = models.IntegerField(verbose_name=\"\u5e74\u9f84\") gender_choices = ((1, \"\u7537\"), (2, \"\u5973\")) gender = models.SmallIntegerField(verbose_name=\"\u6027\u522b\", choices=gender_choices)","title":"8.\u901a\u8fc7\u4e00\u4e2a\u5b57\u6bb5\u505a\u4e00\u4e9b\u795e\u5947\u7684\u4e8b\u513f"},{"location":"Django/reatframework_version/reatframework_version/","text":"9.restframework\u7248\u672c\u63a7\u5236 \u5728\u8bf7\u6c42\u4e2d\u643a\u5e26API\u7684\u7248\u672c\u53f7\uff0c\u4fbf\u4e8e\u540e\u7eedAPI\u7684\u66f4\u65b0\u8fed\u4ee3 http://www.pythonav.com/api/v1.2/xx http://www.pythonav.com/api/v1.5/xx 1.GET\u53c2\u6570\u4f20\u9012 \u5728 QueryParams \u4e2d\u4f20\u9012\u53c2\u6570 # settings.py REST_FRAMEWORK = { \"VERSION_PARAM\": \"v\", \"DEFAULT_VERSION\": \"v1\", \"ALLOWED_VERSIONS\": [\"v1\", \"v2\", \"v3\"], \"DEFAULT_VERSIONING_CLASS\":\"rest_framework.versioning.QueryParameterVersioning\" } \u5728 \u89c6\u56fe\u51fd\u6570 \u4e2d from rest_framework.views import APIView from rest_framework.response import Response from rest_framework.versioning import QueryParameterVersioning class HomeView(APIView): # \u57fa\u4e8eurl\u4e2d\u62fc\u63a5\u53c2\u6570\u7684\u65b9\u5f0f\u4f20\u9012\u53c2\u6570 versioning_class = QueryParameterVersioning def get(self, request): print(request.version) # restframework\u4e2d\u7684\u53cd\u5411\u751f\u6210\u672c\u8d28\u4e0a\u662fdjango\u4e2d\u7684\u53cd\u5411\u751f\u6210\uff0c\u53ef\u4ee5\u6dfb\u52a0\u7248\u672c\u53c2\u6570 # \u53cd\u5411\u751f\u6210url http://127.0.0.1:8000/home/?version=111 # \u643a\u5e26:version=111 url = request.versioning_scheme.reverse('hhh', request=request) print('\u53cd\u5411\u751f\u6210url', url) return Response(\"HomeView\") \u4f20\u5165\u7684\u6570\u636e\u88ab\u5c01\u88c5\u5728 request \u5bf9\u8c61\u4e2d \u901a\u8fc7 request.version \u8bfb\u53d6 2. URL\u8def\u5f84\u4f20\u9012 \u5728 url.py \u4e2d\u5b9a\u4e49url\u65f6\u4f20\u5165\u5f62\u53c2 from django.urls import path from api import views urlpatterns = [ path('api/<str:version>/home/', views.HomeView.as_view(), name='hhh'), ] \u89c6\u56fe\u51fd\u6570\u4e2d \u5728 versioning_class \u4e2d\u4f7f\u7528 URLPathVersioning class HomeView(APIView): # \u57fa\u4e8eurl\u4e2d\u62fc\u63a5\u53c2\u6570\u7684\u65b9\u5f0f\u4f20\u9012\u53c2\u6570 versioning_class = URLPathVersioning def get(self, request, *args, **kwargs): # print(kwargs) print('\u7248\u672c', kwargs['version']) # request\u5bf9\u8c61\u4e2d\u5305\u62ec\u4e86version\u4fe1\u606f print(request.version) url = request.versioning_scheme.reverse('hhh', request=request) print('\u53cd\u5411\u751f\u6210url', url) return Response(\"HomeView\") \u5728postman\u4e2d\u6d4b\u8bd5\u65f6\u53c2\u6570\u7684\u4f4d\u7f6e\u8981\u4e0e urlpatterns \u4e2d\u5b9a\u4e49\u7684\u683c\u5f0f\u4fdd\u6301\u4e00\u81f4 3. \u8bf7\u6c42\u5934\u4f20\u9012 \u5728 url.py \u4e2d from django.urls import path from api import views urlpatterns = [ path('api/home/', views.HomeView.as_view(), name='hhh'), ] \u89c6\u56fe\u51fd\u6570\u4e2d versioning_class \u8bbe\u7f6e\u4e3a AcceptHeaderVersioning from rest_framework.views import APIView from rest_framework.response import Response from rest_framework.versioning import AcceptHeaderVersioning class HomeView(APIView): # \u5728\u8bf7\u6c42\u5934\u4e2d\u4f20\u9012\u53c2\u6570 versioning_class = AcceptHeaderVersioning def get(self, request, *args, **kwargs): print(request.version) url = request.versioning_scheme.reverse('hhh', request=request) print('\u53cd\u5411\u751f\u6210url', url) return Response(\"HomeView\") \u5728postman\u4e2d\u6d4b\u8bd5\u65f6\u53c2\u6570\u5199\u5728\u8bf7\u6c42\u5934\u4e2d GET /api/home/ HTTP/1.1 Host: 127.0.0.1:8000 version: 11 Cache-Control: no-cache Postman-Token: f9473191-dc72-4e38-33c4-b06da4884292 4. \u53cd\u5411\u751f\u6210url url = request.versioning_scheme.reverse('hhh', request=request) print('\u53cd\u5411\u751f\u6210url', url) \u8fd9\u91cc\u7684\u53cd\u5411\u751f\u6210\u5e95\u5c42\u8c03\u7528\u4e86 django \u7684 reverse \u53cd\u5411\u751f\u6210\uff0c \u643a\u5e26\u4e86\u7248\u672c\u4fe1\u606f\u7684\u53c2\u6570\u6dfb\u52a0\u5230\u53cd\u5411\u751f\u6210\u7684url\u4e2d","title":"9.restframework\u7248\u672c\u63a7\u5236"},{"location":"Django/reatframework_version/reatframework_version/#9restframework","text":"\u5728\u8bf7\u6c42\u4e2d\u643a\u5e26API\u7684\u7248\u672c\u53f7\uff0c\u4fbf\u4e8e\u540e\u7eedAPI\u7684\u66f4\u65b0\u8fed\u4ee3 http://www.pythonav.com/api/v1.2/xx http://www.pythonav.com/api/v1.5/xx","title":"9.restframework\u7248\u672c\u63a7\u5236"},{"location":"Django/reatframework_version/reatframework_version/#1get","text":"\u5728 QueryParams \u4e2d\u4f20\u9012\u53c2\u6570 # settings.py REST_FRAMEWORK = { \"VERSION_PARAM\": \"v\", \"DEFAULT_VERSION\": \"v1\", \"ALLOWED_VERSIONS\": [\"v1\", \"v2\", \"v3\"], \"DEFAULT_VERSIONING_CLASS\":\"rest_framework.versioning.QueryParameterVersioning\" } \u5728 \u89c6\u56fe\u51fd\u6570 \u4e2d from rest_framework.views import APIView from rest_framework.response import Response from rest_framework.versioning import QueryParameterVersioning class HomeView(APIView): # \u57fa\u4e8eurl\u4e2d\u62fc\u63a5\u53c2\u6570\u7684\u65b9\u5f0f\u4f20\u9012\u53c2\u6570 versioning_class = QueryParameterVersioning def get(self, request): print(request.version) # restframework\u4e2d\u7684\u53cd\u5411\u751f\u6210\u672c\u8d28\u4e0a\u662fdjango\u4e2d\u7684\u53cd\u5411\u751f\u6210\uff0c\u53ef\u4ee5\u6dfb\u52a0\u7248\u672c\u53c2\u6570 # \u53cd\u5411\u751f\u6210url http://127.0.0.1:8000/home/?version=111 # \u643a\u5e26:version=111 url = request.versioning_scheme.reverse('hhh', request=request) print('\u53cd\u5411\u751f\u6210url', url) return Response(\"HomeView\") \u4f20\u5165\u7684\u6570\u636e\u88ab\u5c01\u88c5\u5728 request \u5bf9\u8c61\u4e2d \u901a\u8fc7 request.version \u8bfb\u53d6","title":"1.GET\u53c2\u6570\u4f20\u9012"},{"location":"Django/reatframework_version/reatframework_version/#2-url","text":"\u5728 url.py \u4e2d\u5b9a\u4e49url\u65f6\u4f20\u5165\u5f62\u53c2 from django.urls import path from api import views urlpatterns = [ path('api/<str:version>/home/', views.HomeView.as_view(), name='hhh'), ] \u89c6\u56fe\u51fd\u6570\u4e2d \u5728 versioning_class \u4e2d\u4f7f\u7528 URLPathVersioning class HomeView(APIView): # \u57fa\u4e8eurl\u4e2d\u62fc\u63a5\u53c2\u6570\u7684\u65b9\u5f0f\u4f20\u9012\u53c2\u6570 versioning_class = URLPathVersioning def get(self, request, *args, **kwargs): # print(kwargs) print('\u7248\u672c', kwargs['version']) # request\u5bf9\u8c61\u4e2d\u5305\u62ec\u4e86version\u4fe1\u606f print(request.version) url = request.versioning_scheme.reverse('hhh', request=request) print('\u53cd\u5411\u751f\u6210url', url) return Response(\"HomeView\") \u5728postman\u4e2d\u6d4b\u8bd5\u65f6\u53c2\u6570\u7684\u4f4d\u7f6e\u8981\u4e0e urlpatterns \u4e2d\u5b9a\u4e49\u7684\u683c\u5f0f\u4fdd\u6301\u4e00\u81f4","title":"2. URL\u8def\u5f84\u4f20\u9012"},{"location":"Django/reatframework_version/reatframework_version/#3","text":"\u5728 url.py \u4e2d from django.urls import path from api import views urlpatterns = [ path('api/home/', views.HomeView.as_view(), name='hhh'), ] \u89c6\u56fe\u51fd\u6570\u4e2d versioning_class \u8bbe\u7f6e\u4e3a AcceptHeaderVersioning from rest_framework.views import APIView from rest_framework.response import Response from rest_framework.versioning import AcceptHeaderVersioning class HomeView(APIView): # \u5728\u8bf7\u6c42\u5934\u4e2d\u4f20\u9012\u53c2\u6570 versioning_class = AcceptHeaderVersioning def get(self, request, *args, **kwargs): print(request.version) url = request.versioning_scheme.reverse('hhh', request=request) print('\u53cd\u5411\u751f\u6210url', url) return Response(\"HomeView\") \u5728postman\u4e2d\u6d4b\u8bd5\u65f6\u53c2\u6570\u5199\u5728\u8bf7\u6c42\u5934\u4e2d GET /api/home/ HTTP/1.1 Host: 127.0.0.1:8000 version: 11 Cache-Control: no-cache Postman-Token: f9473191-dc72-4e38-33c4-b06da4884292","title":"3. \u8bf7\u6c42\u5934\u4f20\u9012"},{"location":"Django/reatframework_version/reatframework_version/#4-url","text":"url = request.versioning_scheme.reverse('hhh', request=request) print('\u53cd\u5411\u751f\u6210url', url) \u8fd9\u91cc\u7684\u53cd\u5411\u751f\u6210\u5e95\u5c42\u8c03\u7528\u4e86 django \u7684 reverse \u53cd\u5411\u751f\u6210\uff0c \u643a\u5e26\u4e86\u7248\u672c\u4fe1\u606f\u7684\u53c2\u6570\u6dfb\u52a0\u5230\u53cd\u5411\u751f\u6210\u7684url\u4e2d","title":"4. \u53cd\u5411\u751f\u6210url"},{"location":"Django/requestObj/restframeworkRequestObj/","text":"2.restframework Request\u5bf9\u8c61 DRF\u4e2d\u7684request\u5bf9\u8c61\u662f\u5bf9django\u4e2d\u7684request\u5bf9\u8c61\u8fdb\u884c\u7684\u518d\u6b21\u5c01\u88c5 1.\u524d\u620f\uff1a 1.1 opp class Foo(object): def __init__(self,name,age): self.name = name self.age = age def show(self): return 123 def __getattr__(self,item): print('---->',item) return 999 __getattr__ \u65b9\u6cd5\u4f1a\u5728\u5bf9\u8c61\u8c03\u7528\u4e0d\u5b58\u5728\u7684\u6210\u5458\u65f6\u89e6\u53d1 class Foo(object): def __init__(self,name,age): self.name = name self.age = age def show(self): return 123 def __getattrbute__(self,item): print('---->',item) return 999 __getattrbute__ \u5c06\u63a5\u7ba1\u8c03\u7528\u7684\u64cd\u4f5c\uff0c object \u57fa\u7c7b\u4e2d __getattrbute__ \u65b9\u6cd5\u5b9a\u4e49\u4e86\u57fa\u7840\u7684\u6210\u5458\u8fd0\u7b97\u65b9\u6cd5 \u4e0d\u8bba\u6210\u5458/\u65b9\u6cd5\u662f\u5426\u5b58\u5728\uff0c __getattrbute__ \u90fd\u4f1a\u6267\u884c\u3002 \u5728\u57fa\u7c7b\u7684 __getattrbute__ \u65b9\u6cd5\u4e2d\uff0c\u53ef\u4ee5\u505a\u5982\u4e0b\u64cd\u4f5c \u8fd4\u56de\u4e00\u4e9b\u503c \u5982\u679c\u8bbf\u95ee\u4e0d\u5b58\u5728\u7684\u6210\u5458\u65f6\uff0craise errro \u5176\u4ed6\u7684\u5904\u7406\u89c4\u5219 1.2 \u5206\u6790 class HttpRequest(object): def __init__(self): pass def v1(self): print('v1') def v2(self): print('v2') class Request(object): def __init__(self,request,xx): self._request = request self.xx = xx # \u5bf9\u8c61\u4e2d\u6709\u7684\u6210\u5458\uff0c\u4e0d\u4f1a\u51fa\u53d1 # \u5bf9\u8c61\u4e2d\u6ca1\u6709\u7684\u6210\u5458\uff0c\u624d\u4f1a\u89e6\u53d1 def __getattr__(self, attr): try: # \u5bf9\u8c61\u4e2d\u6ca1\u6709\u7684\u6210\u5458\uff0c\u53bb\u53c2\u6570\u4e2d\u4f20\u5165\u7684\u5bf9\u8c61\u627e # \u8fd9\u91cc\u7684\u5bfb\u627e\u65b9\u5f0f\u81ea\u5b9a\u4e49 return getattr(self._request, attr) except AttributeError: return self.__getattribute__(attr) request = HttpRequest() req.v1() req.v2() request. = Request(req,111) request.xx request._request.v1() request._request.v2() \u524d\u620f\u7ed3\u675f\ud83c\udf88 2.\u6e90\u7801\u5206\u6790 class request: def __init__(self, request, parsers=None, authenticators=None, negotiator=None, parser_context=None): assert isinstance(request, HttpRequest), ( 'The `request` argument must be an instance of ' '`django.http.HttpRequest`, not `{}.{}`.' .format(request.__class__.__module__, request.__class__.__name__) ) self._request = request self.parsers = parsers or () self.authenticators = authenticators or () self.negotiator = negotiator or self._default_negotiator() self.parser_context = parser_context self._data = Empty self._files = Empty self._full_data = Empty self._content_type = Empty self._stream = Empty if self.parser_context is None: self.parser_context = {} self.parser_context['request'] = self self.parser_context['encoding'] = request.encoding or settings.DEFAULT_CHARSET force_user = getattr(request, '_force_auth_user', None) force_token = getattr(request, '_force_auth_token', None) if force_user is not None or force_token is not None: forced_auth = ForcedAuthentication(force_user, force_token) self.authenticators = (forced_auth,) # \u8fd9\u91cc\u7684__getattr__\u65b9\u6cd5\u4e0e\u524d\u620f\u4e2d\u7684\u7528\u6cd5\u4e00\u81f4 def __getattr__(self, attr): \"\"\" If an attribute does not exist on this instance, then we also attempt to proxy it to the underlying HttpRequest object. \"\"\" try: return getattr(self._request, attr) except AttributeError: return self.__getattribute__(attr) class APIView(View) # dispatch\u4e2d\u4f20\u5165\u7684request\u5bf9\u8c61\u662fdjango\u7684request\u5bf9\u8c61 def dispatch(self, request, *args, **kwargs): \"\"\" `.dispatch()` is pretty much the same as Django's regular dispatch, but with extra hooks for startup, finalize, and exception handling. \"\"\" self.args = args self.kwargs = kwargs # request = self.initialize_request(request, *args, **kwargs) # \u4ece\u6b64\u5f00\u59cb\u7684request\u662f\u7ecf\u8fc7drf\u5c01\u88c5\u8fc7\u540e\u7684request self.request = request self.headers = self.default_response_headers # deprecate? try: self.initial(request, *args, **kwargs) # Get the appropriate handler method if request.method.lower() in self.http_method_names: # \u901a\u8fc7\u53cd\u5c04\u83b7\u53d6get/post/put/delete\u7b49\u65b9\u6cd5 handler = getattr(self, request.method.lower(), self.http_method_not_allowed) else: handler = self.http_method_not_allowed # \u6267\u884c\u76f8\u5e94\u7684\u65b9\u6cd5 response = handler(request, *args, **kwargs) except Exception as exc: response = self.handle_exception(exc) self.response = self.finalize_response(request, response, *args, **kwargs) return self.response","title":"2.restframework Request\u5bf9\u8c61"},{"location":"Django/requestObj/restframeworkRequestObj/#2restframework-request","text":"DRF\u4e2d\u7684request\u5bf9\u8c61\u662f\u5bf9django\u4e2d\u7684request\u5bf9\u8c61\u8fdb\u884c\u7684\u518d\u6b21\u5c01\u88c5","title":"2.restframework Request\u5bf9\u8c61"},{"location":"Django/requestObj/restframeworkRequestObj/#1","text":"","title":"1.\u524d\u620f\uff1a"},{"location":"Django/requestObj/restframeworkRequestObj/#11-opp","text":"class Foo(object): def __init__(self,name,age): self.name = name self.age = age def show(self): return 123 def __getattr__(self,item): print('---->',item) return 999 __getattr__ \u65b9\u6cd5\u4f1a\u5728\u5bf9\u8c61\u8c03\u7528\u4e0d\u5b58\u5728\u7684\u6210\u5458\u65f6\u89e6\u53d1 class Foo(object): def __init__(self,name,age): self.name = name self.age = age def show(self): return 123 def __getattrbute__(self,item): print('---->',item) return 999 __getattrbute__ \u5c06\u63a5\u7ba1\u8c03\u7528\u7684\u64cd\u4f5c\uff0c object \u57fa\u7c7b\u4e2d __getattrbute__ \u65b9\u6cd5\u5b9a\u4e49\u4e86\u57fa\u7840\u7684\u6210\u5458\u8fd0\u7b97\u65b9\u6cd5 \u4e0d\u8bba\u6210\u5458/\u65b9\u6cd5\u662f\u5426\u5b58\u5728\uff0c __getattrbute__ \u90fd\u4f1a\u6267\u884c\u3002 \u5728\u57fa\u7c7b\u7684 __getattrbute__ \u65b9\u6cd5\u4e2d\uff0c\u53ef\u4ee5\u505a\u5982\u4e0b\u64cd\u4f5c \u8fd4\u56de\u4e00\u4e9b\u503c \u5982\u679c\u8bbf\u95ee\u4e0d\u5b58\u5728\u7684\u6210\u5458\u65f6\uff0craise errro \u5176\u4ed6\u7684\u5904\u7406\u89c4\u5219","title":"1.1 opp"},{"location":"Django/requestObj/restframeworkRequestObj/#12","text":"class HttpRequest(object): def __init__(self): pass def v1(self): print('v1') def v2(self): print('v2') class Request(object): def __init__(self,request,xx): self._request = request self.xx = xx # \u5bf9\u8c61\u4e2d\u6709\u7684\u6210\u5458\uff0c\u4e0d\u4f1a\u51fa\u53d1 # \u5bf9\u8c61\u4e2d\u6ca1\u6709\u7684\u6210\u5458\uff0c\u624d\u4f1a\u89e6\u53d1 def __getattr__(self, attr): try: # \u5bf9\u8c61\u4e2d\u6ca1\u6709\u7684\u6210\u5458\uff0c\u53bb\u53c2\u6570\u4e2d\u4f20\u5165\u7684\u5bf9\u8c61\u627e # \u8fd9\u91cc\u7684\u5bfb\u627e\u65b9\u5f0f\u81ea\u5b9a\u4e49 return getattr(self._request, attr) except AttributeError: return self.__getattribute__(attr) request = HttpRequest() req.v1() req.v2() request. = Request(req,111) request.xx request._request.v1() request._request.v2() \u524d\u620f\u7ed3\u675f\ud83c\udf88","title":"1.2 \u5206\u6790"},{"location":"Django/requestObj/restframeworkRequestObj/#2","text":"class request: def __init__(self, request, parsers=None, authenticators=None, negotiator=None, parser_context=None): assert isinstance(request, HttpRequest), ( 'The `request` argument must be an instance of ' '`django.http.HttpRequest`, not `{}.{}`.' .format(request.__class__.__module__, request.__class__.__name__) ) self._request = request self.parsers = parsers or () self.authenticators = authenticators or () self.negotiator = negotiator or self._default_negotiator() self.parser_context = parser_context self._data = Empty self._files = Empty self._full_data = Empty self._content_type = Empty self._stream = Empty if self.parser_context is None: self.parser_context = {} self.parser_context['request'] = self self.parser_context['encoding'] = request.encoding or settings.DEFAULT_CHARSET force_user = getattr(request, '_force_auth_user', None) force_token = getattr(request, '_force_auth_token', None) if force_user is not None or force_token is not None: forced_auth = ForcedAuthentication(force_user, force_token) self.authenticators = (forced_auth,) # \u8fd9\u91cc\u7684__getattr__\u65b9\u6cd5\u4e0e\u524d\u620f\u4e2d\u7684\u7528\u6cd5\u4e00\u81f4 def __getattr__(self, attr): \"\"\" If an attribute does not exist on this instance, then we also attempt to proxy it to the underlying HttpRequest object. \"\"\" try: return getattr(self._request, attr) except AttributeError: return self.__getattribute__(attr) class APIView(View) # dispatch\u4e2d\u4f20\u5165\u7684request\u5bf9\u8c61\u662fdjango\u7684request\u5bf9\u8c61 def dispatch(self, request, *args, **kwargs): \"\"\" `.dispatch()` is pretty much the same as Django's regular dispatch, but with extra hooks for startup, finalize, and exception handling. \"\"\" self.args = args self.kwargs = kwargs # request = self.initialize_request(request, *args, **kwargs) # \u4ece\u6b64\u5f00\u59cb\u7684request\u662f\u7ecf\u8fc7drf\u5c01\u88c5\u8fc7\u540e\u7684request self.request = request self.headers = self.default_response_headers # deprecate? try: self.initial(request, *args, **kwargs) # Get the appropriate handler method if request.method.lower() in self.http_method_names: # \u901a\u8fc7\u53cd\u5c04\u83b7\u53d6get/post/put/delete\u7b49\u65b9\u6cd5 handler = getattr(self, request.method.lower(), self.http_method_not_allowed) else: handler = self.http_method_not_allowed # \u6267\u884c\u76f8\u5e94\u7684\u65b9\u6cd5 response = handler(request, *args, **kwargs) except Exception as exc: response = self.handle_exception(exc) self.response = self.finalize_response(request, response, *args, **kwargs) return self.response","title":"2.\u6e90\u7801\u5206\u6790"},{"location":"Django/restframeworkThrottle/restframeworkThrottle/","text":"5.restframework \u9650\u6d41 \u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u67d0\u4e2a\u63a5\u53e3\u4e0d\u5e0c\u671b\u7528\u6237\u8bbf\u95ee\u8fc7\u4e8e\u9891\u7e41\uff0c\u91c7\u7528\u9650\u6d41\u7684\u673a\u5236\ud83c\udf88 1.\u9650\u6d41\u7ec4\u4ef6\u7684\u5e94\u7528 \u7f16\u5199\u7c7b \u5e94\u7528\u7c7b ext \u4e2d\u7f16\u5199 throttle.py from rest_framework.throttling import BaseThrottle, SimpleRateThrottle from django.core.cache import cache as default_cache class MyThrottle(SimpleRateThrottle): # \u751f\u6210\u4e00\u4e2a\u552f\u4e00\u6807\u8bc6 scope = \"XXX\" THROTTLE_RATES = {'XXX': '5/m'} cache = default_cache def get_cache_key(self, request, view): if request.user: ident = request.user.pk else: ident = self.get_ident(request) return self.cache_format % {'scope': self.scope, 'ident': ident} settings \u4e2d\u914d\u7f6e\u7f13\u5b58(\u542f\u52a8 redis \u670d\u52a1) pip install django-redis CACHES = { \"default\": { \"BACKEND\": \"django_redis.cache.RedisCache\", \"LOCATION\": \"redis://127.0.0.1:6379\", \"OPTIONS\": { \"CLIENT_CLASS\": \"django_redis.client.DefaultClient\", \"PASSWORD\": \"wycwyc1234\", } } } \u89c6\u56fe\u51fd\u6570\u4e2d\u5e94\u7528 class LoginView(APIView): throttle_classes = [MyThrottle] authentication_classes = [] ... def post(self,request): ... 2. \u6e90\u7801\u5206\u6790 class SimpleRateThrottle(BaseThrottle): cache = default_cache timer = time.time cache_format = 'throttle_%(scope)s_%(ident)s' scope = None THROTTLE_RATES = api_settings.DEFAULT_THROTTLE_RATES def __init__(self): if not getattr(self, 'rate', None): self.rate = self.get_rate() self.num_requests, self.duration = self.parse_rate(self.rate) def get_cache_key(self, request, view): raise NotImplementedError('.get_cache_key() must be overridden') def get_rate(self): \"\"\" Determine the string representation of the allowed request rate. \"\"\" if not getattr(self, 'scope', None): msg = (\"You must set either `.scope` or `.rate` for '%s' throttle\" % self.__class__.__name__) raise ImproperlyConfigured(msg) try: return self.THROTTLE_RATES[self.scope] except KeyError: msg = \"No default throttle rate set for '%s' scope\" % self.scope raise ImproperlyConfigured(msg) def parse_rate(self, rate): \"\"\" Given the request rate string, return a two tuple of: <allowed number of requests>, <period of time in seconds> \"\"\" if rate is None: return (None, None) num, period = rate.split('/') num_requests = int(num) duration = {'s': 1, 'm': 60, 'h': 3600, 'd': 86400}[period[0]] return (num_requests, duration) def allow_request(self, request, view): \"\"\" Implement the check to see if the request should be throttled. On success calls `throttle_success`. On failure calls `throttle_failure`. \"\"\" if self.rate is None: return True self.key = self.get_cache_key(request, view) if self.key is None: return True self.history = self.cache.get(self.key, []) self.now = self.timer() # Drop any requests from the history which have now passed the # throttle duration while self.history and self.history[-1] <= self.now - self.duration: self.history.pop() if len(self.history) >= self.num_requests: return self.throttle_failure() return self.throttle_success() def throttle_success(self): \"\"\" Inserts the current request's timestamp along with the key into the cache. \"\"\" self.history.insert(0, self.now) self.cache.set(self.key, self.history, self.duration) return True def throttle_failure(self): \"\"\" Called when a request to the API has failed due to throttling. \"\"\" return False def wait(self): \"\"\" Returns the recommended next request time in seconds. \"\"\" if self.history: remaining_duration = self.duration - (self.now - self.history[-1]) else: remaining_duration = self.duration available_requests = self.num_requests - len(self.history) + 1 if available_requests <= 0: return None return remaining_duration / float(available_requests) class MyThrottle(SimpleRateThrottle): # \u751f\u6210\u4e00\u4e2a\u552f\u4e00\u6807\u8bc6 scope = \"XXX\" THROTTLE_RATES = {'XXX': '5/m'} cache = default_cache def get_cache_key(self, request, view): if request.user: ident = request.user.pk else: ident = self.get_ident(request) return self.cache_format % {'scope': self.scope, 'ident': ident} class APIView(View): permission_classes = \u5168\u5c40\u914d\u7f6e def check_throttles(self, request): \"\"\" Check if request should be throttled. Raises an appropriate exception if the request is throttled. \"\"\" throttle_durations = [] # \u9650\u6d41\u7c7b\u7684\u5bf9\u8c61\u5217\u8868 for throttle in self.get_throttles(): if not throttle.allow_request(request, self): throttle_durations.append(throttle.wait()) if throttle_durations: # Filter out `None` values which may happen in case of config / rate # changes, see #1438 durations = [ duration for duration in throttle_durations if duration is not None ] duration = max(durations, default=None) self.throttled(request, duration) def initial(self, request, *args, **kwargs): \"\"\" Runs anything that needs to occur prior to calling the method handler. \"\"\" self.format_kwarg = self.get_format_suffix(**kwargs) # Perform content negotiation and store the accepted info on the request neg = self.perform_content_negotiation(request) request.accepted_renderer, request.accepted_media_type = neg # Determine the API version, if versioning is in use. version, scheme = self.determine_version(request, *args, **kwargs) request.version, request.versioning_scheme = version, scheme # Ensure that the incoming request is permitted self.perform_authentication(request) self.check_permissions(request) self.check_throttles(request) def dispatch(self, request, *args, **kwargs): self.args = args self.kwargs = kwargs request = self.initialize_request(request, *args, **kwargs) self.request = request self.headers = self.default_response_headers # deprecate? try: self.initial(request, *args, **kwargs) # Get the appropriate handler method if request.method.lower() in self.http_method_names: handler = getattr(self, request.method.lower(), self.http_method_not_allowed) else: handler = self.http_method_not_allowed response = handler(request, *args, **kwargs) except Exception as exc: response = self.handle_exception(exc) self.response = self.finalize_response(request, response, *args, **kwargs) return self.response 2.1\u591a\u4e2a\u9650\u6d41\u7c7b \u672c\u8d28\uff0c\u6bcf\u4e2a\u9650\u6d41\u7684\u7c7b\u4e2d\u90fd\u6709\u4e00\u4e2a allow_request \u65b9\u6cd5\uff0c\u6b64\u65b9\u6cd5\u5185\u90e8\u53ef\u4ee5\u6709\u4e09\u79cd\u60c5\u51b5\uff1a \u8fd4\u56deTrue\uff0c\u8868\u793a\u5f53\u524d\u9650\u6d41\u7c7b\u5141\u8bb8\u8bbf\u95ee\uff0c\u7ee7\u7eed\u6267\u884c\u540e\u7eed\u7684\u9650\u6d41\u7c7b\u3002 \u8fd4\u56deFalse\uff0c\u8868\u793a\u5f53\u524d\u9650\u6d41\u7c7b\u4e0d\u5141\u8bb8\u8bbf\u95ee\uff0c\u7ee7\u7eed\u6267\u884c\u540e\u7eed\u7684\u9650\u6d41\u7c7b\u3002\u6240\u6709\u7684\u9650\u6d41\u7c7b\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u8bfb\u53d6\u6240\u6709\u4e0d\u5141\u8bb8\u7684\u9650\u6d41\uff0c\u5e76\u8ba1\u7b97\u8fd8\u9700\u7b49\u5f85\u7684\u65f6\u95f4\u3002 \u629b\u51fa\u5f02\u5e38\uff0c\u8868\u793a\u5f53\u524d\u9650\u6d41\u7c7b\u4e0d\u5141\u8bb8\u8bbf\u95ee\uff0c\u540e\u7eed\u9650\u6d41\u7c7b\u4e0d\u518d\u6267\u884c\u3002","title":"5.restframework \u9650\u6d41"},{"location":"Django/restframeworkThrottle/restframeworkThrottle/#5restframework","text":"\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u67d0\u4e2a\u63a5\u53e3\u4e0d\u5e0c\u671b\u7528\u6237\u8bbf\u95ee\u8fc7\u4e8e\u9891\u7e41\uff0c\u91c7\u7528\u9650\u6d41\u7684\u673a\u5236\ud83c\udf88","title":"5.restframework \u9650\u6d41"},{"location":"Django/restframeworkThrottle/restframeworkThrottle/#1","text":"\u7f16\u5199\u7c7b \u5e94\u7528\u7c7b ext \u4e2d\u7f16\u5199 throttle.py from rest_framework.throttling import BaseThrottle, SimpleRateThrottle from django.core.cache import cache as default_cache class MyThrottle(SimpleRateThrottle): # \u751f\u6210\u4e00\u4e2a\u552f\u4e00\u6807\u8bc6 scope = \"XXX\" THROTTLE_RATES = {'XXX': '5/m'} cache = default_cache def get_cache_key(self, request, view): if request.user: ident = request.user.pk else: ident = self.get_ident(request) return self.cache_format % {'scope': self.scope, 'ident': ident} settings \u4e2d\u914d\u7f6e\u7f13\u5b58(\u542f\u52a8 redis \u670d\u52a1) pip install django-redis CACHES = { \"default\": { \"BACKEND\": \"django_redis.cache.RedisCache\", \"LOCATION\": \"redis://127.0.0.1:6379\", \"OPTIONS\": { \"CLIENT_CLASS\": \"django_redis.client.DefaultClient\", \"PASSWORD\": \"wycwyc1234\", } } } \u89c6\u56fe\u51fd\u6570\u4e2d\u5e94\u7528 class LoginView(APIView): throttle_classes = [MyThrottle] authentication_classes = [] ... def post(self,request): ...","title":"1.\u9650\u6d41\u7ec4\u4ef6\u7684\u5e94\u7528"},{"location":"Django/restframeworkThrottle/restframeworkThrottle/#2","text":"class SimpleRateThrottle(BaseThrottle): cache = default_cache timer = time.time cache_format = 'throttle_%(scope)s_%(ident)s' scope = None THROTTLE_RATES = api_settings.DEFAULT_THROTTLE_RATES def __init__(self): if not getattr(self, 'rate', None): self.rate = self.get_rate() self.num_requests, self.duration = self.parse_rate(self.rate) def get_cache_key(self, request, view): raise NotImplementedError('.get_cache_key() must be overridden') def get_rate(self): \"\"\" Determine the string representation of the allowed request rate. \"\"\" if not getattr(self, 'scope', None): msg = (\"You must set either `.scope` or `.rate` for '%s' throttle\" % self.__class__.__name__) raise ImproperlyConfigured(msg) try: return self.THROTTLE_RATES[self.scope] except KeyError: msg = \"No default throttle rate set for '%s' scope\" % self.scope raise ImproperlyConfigured(msg) def parse_rate(self, rate): \"\"\" Given the request rate string, return a two tuple of: <allowed number of requests>, <period of time in seconds> \"\"\" if rate is None: return (None, None) num, period = rate.split('/') num_requests = int(num) duration = {'s': 1, 'm': 60, 'h': 3600, 'd': 86400}[period[0]] return (num_requests, duration) def allow_request(self, request, view): \"\"\" Implement the check to see if the request should be throttled. On success calls `throttle_success`. On failure calls `throttle_failure`. \"\"\" if self.rate is None: return True self.key = self.get_cache_key(request, view) if self.key is None: return True self.history = self.cache.get(self.key, []) self.now = self.timer() # Drop any requests from the history which have now passed the # throttle duration while self.history and self.history[-1] <= self.now - self.duration: self.history.pop() if len(self.history) >= self.num_requests: return self.throttle_failure() return self.throttle_success() def throttle_success(self): \"\"\" Inserts the current request's timestamp along with the key into the cache. \"\"\" self.history.insert(0, self.now) self.cache.set(self.key, self.history, self.duration) return True def throttle_failure(self): \"\"\" Called when a request to the API has failed due to throttling. \"\"\" return False def wait(self): \"\"\" Returns the recommended next request time in seconds. \"\"\" if self.history: remaining_duration = self.duration - (self.now - self.history[-1]) else: remaining_duration = self.duration available_requests = self.num_requests - len(self.history) + 1 if available_requests <= 0: return None return remaining_duration / float(available_requests) class MyThrottle(SimpleRateThrottle): # \u751f\u6210\u4e00\u4e2a\u552f\u4e00\u6807\u8bc6 scope = \"XXX\" THROTTLE_RATES = {'XXX': '5/m'} cache = default_cache def get_cache_key(self, request, view): if request.user: ident = request.user.pk else: ident = self.get_ident(request) return self.cache_format % {'scope': self.scope, 'ident': ident} class APIView(View): permission_classes = \u5168\u5c40\u914d\u7f6e def check_throttles(self, request): \"\"\" Check if request should be throttled. Raises an appropriate exception if the request is throttled. \"\"\" throttle_durations = [] # \u9650\u6d41\u7c7b\u7684\u5bf9\u8c61\u5217\u8868 for throttle in self.get_throttles(): if not throttle.allow_request(request, self): throttle_durations.append(throttle.wait()) if throttle_durations: # Filter out `None` values which may happen in case of config / rate # changes, see #1438 durations = [ duration for duration in throttle_durations if duration is not None ] duration = max(durations, default=None) self.throttled(request, duration) def initial(self, request, *args, **kwargs): \"\"\" Runs anything that needs to occur prior to calling the method handler. \"\"\" self.format_kwarg = self.get_format_suffix(**kwargs) # Perform content negotiation and store the accepted info on the request neg = self.perform_content_negotiation(request) request.accepted_renderer, request.accepted_media_type = neg # Determine the API version, if versioning is in use. version, scheme = self.determine_version(request, *args, **kwargs) request.version, request.versioning_scheme = version, scheme # Ensure that the incoming request is permitted self.perform_authentication(request) self.check_permissions(request) self.check_throttles(request) def dispatch(self, request, *args, **kwargs): self.args = args self.kwargs = kwargs request = self.initialize_request(request, *args, **kwargs) self.request = request self.headers = self.default_response_headers # deprecate? try: self.initial(request, *args, **kwargs) # Get the appropriate handler method if request.method.lower() in self.http_method_names: handler = getattr(self, request.method.lower(), self.http_method_not_allowed) else: handler = self.http_method_not_allowed response = handler(request, *args, **kwargs) except Exception as exc: response = self.handle_exception(exc) self.response = self.finalize_response(request, response, *args, **kwargs) return self.response","title":"2. \u6e90\u7801\u5206\u6790"},{"location":"Django/restframeworkThrottle/restframeworkThrottle/#21","text":"\u672c\u8d28\uff0c\u6bcf\u4e2a\u9650\u6d41\u7684\u7c7b\u4e2d\u90fd\u6709\u4e00\u4e2a allow_request \u65b9\u6cd5\uff0c\u6b64\u65b9\u6cd5\u5185\u90e8\u53ef\u4ee5\u6709\u4e09\u79cd\u60c5\u51b5\uff1a \u8fd4\u56deTrue\uff0c\u8868\u793a\u5f53\u524d\u9650\u6d41\u7c7b\u5141\u8bb8\u8bbf\u95ee\uff0c\u7ee7\u7eed\u6267\u884c\u540e\u7eed\u7684\u9650\u6d41\u7c7b\u3002 \u8fd4\u56deFalse\uff0c\u8868\u793a\u5f53\u524d\u9650\u6d41\u7c7b\u4e0d\u5141\u8bb8\u8bbf\u95ee\uff0c\u7ee7\u7eed\u6267\u884c\u540e\u7eed\u7684\u9650\u6d41\u7c7b\u3002\u6240\u6709\u7684\u9650\u6d41\u7c7b\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u8bfb\u53d6\u6240\u6709\u4e0d\u5141\u8bb8\u7684\u9650\u6d41\uff0c\u5e76\u8ba1\u7b97\u8fd8\u9700\u7b49\u5f85\u7684\u65f6\u95f4\u3002 \u629b\u51fa\u5f02\u5e38\uff0c\u8868\u793a\u5f53\u524d\u9650\u6d41\u7c7b\u4e0d\u5141\u8bb8\u8bbf\u95ee\uff0c\u540e\u7eed\u9650\u6d41\u7c7b\u4e0d\u518d\u6267\u884c\u3002","title":"2.1\u591a\u4e2a\u9650\u6d41\u7c7b"},{"location":"Django/restframework_authentication/restframework_authentication/","text":"3.restframework\u8ba4\u8bc1\u7ec4\u4ef6 1.\u524d\u620f restframework\u7684\u8ba4\u8bc1authenticate\u7ec4\u4ef6\u5e2e\u52a9\u63a5\u53e3\uff08API\uff09\u8fdb\u884c \u8eab\u4efd\u8ba4\u8bc1 \u524d\u620f\u4e0d\u591a\uff0c\u9a6c\u4e0a\u5f00\u59cb\ud83c\udf88 2. \u8ba4\u8bc1\u7ec4\u4ef6\u7684\u5e94\u7528 \u7f16\u5199\u4e00\u4e2a\u6a21\u5757\u5b58\u50a8\u8ba4\u8bc1\u7c7b from rest_framework.authentication import BaseAuthentication class MyAuthentication(BaseAuthentication): def authenticate(self,request): # \u8fdb\u884c\u7528\u6237\u8ba4\u8bc1 # - \u8bfb\u53d6token # - \u68c0\u9a8ctoken\u5408\u6cd5\u6027 # - \u8fd4\u56de # - \u8fd4\u56de\u5143\u7956 \uff08xx,oo\uff09 \u5143\u7ec4\u4e2d\u7684\u4e24\u4e2a\u503c\u5206\u522b\u8d4b\u503c\u7ed9request.user \u548c request.auth # - \u629b\u51fa\u5f02\u5e38 \u8ba4\u8bc1\u5931\u8d25 -> \u8fd4\u56de\u9519\u8bef\u4fe1\u606f # - return None \u591a\u4e2a\u8ba4\u8bc1\u7c7b\u4e2d[c1,c2,c3...] \u53bb\u4e4b\u540e\u7684\u7c7b\u4e2d # - \u5982\u679c\u6240\u6709\u7684\u7c7b\u90fd\u6ca1\u6709\u8ba4\u8bc1\u6210\u529f -> \u533f\u540d\u7528\u6237 pass \u83b7\u53d6token token = request._request.GET.get(\"token\") token = request.query_params.get(\"token\") \u8ba4\u8bc1\u7c7b\u7684\u6a21\u7248 (\u4e0d\u80fd\u5378\u8f7dview\u89c6\u56fe\u4e2d\uff0c\u5faa\u73af\u5f15\u7528\u62a5\u9519) from rest_framework.authentication import BaseAuthentication from rest_framework.exceptions import AuthenticationFailed class MyAuthentication(BaseAuthentication): def authenticate(self,request): token = request.query_params.get(\"token\") if token: return (\"wupeiqi\",token) raise Authentication Failed(\"\u8ba4\u8bc1\u5931\u8d25\") \u5728\u89c6\u56fe\u51fd\u6570\u4e2d from ext.auth import MyAuthentication class OrderView(APIView): authentication_classes = [MyAuthentication,...] def get(self,request): ... pass \u914d\u7f6e\u6587\u4ef6\u4e2d\u914d\u7f6e\u5168\u5c40\u8ba4\u8bc1\u7ec4\u4ef6 REST_FRAMEWORK = { \"UNAUTHENTICATED_USER\": None, # \u503c\uff1a[\u8ba4\u8bc1\u7ec4\u4ef6\u6240\u5728\u7684\u8def\u5f84] \u5168\u5c40\u6240\u6709\u7684\u7c7b\u90fd\u5e94\u7528\u6743\u9650\u7ec4\u4ef6 \"DEFAULT_AUTHENTICATION_CLASSES\": [ 'ext.auth.QueryParamsAuthentication', 'ext.auth.HeaderAuthentication', 'ext.auth.NOAuthentication', ], } 3.\u6e90\u7801\u5206\u6790 \u52a0\u8f7d\u8ba4\u8bc1\u7ec4\u4ef6\uff0c\u672c\u8d28\u5c31\u662f\u5b9e\u4f8b\u5316\u6bcf\u4e2a\u8ba4\u8bc1\u7c7b\u7684\u5bf9\u8c61\uff0c\u5e76\u4e14\u5c01\u88c5\u5230request\u5bf9\u8c61\u4e2d \u56fe\u592a\u5927\u4e86\uff5e\ud83c\udf88 class Request: def __init__(self, request,authenticators=None): self._request = request self.authenticators = authenticators or () def _not_authenticated(self): \"\"\" Set authenticator, user & authtoken representing an unauthenticated request. Defaults are None, AnonymousUser & None. \"\"\" self._authenticator = None # \u8bfb\u53d6\u533f\u540d\u7528\u6237 if api_settings.UNAUTHENTICATED_USER: self.user = api_settings.UNAUTHENTICATED_USER() else: self.user = None if api_settings.UNAUTHENTICATED_TOKEN: self.auth = api_settings.UNAUTHENTICATED_TOKEN() else: self.auth = None def _authenticate(self): \"\"\" Attempt to authenticate the request using each authentication instance in turn. \"\"\" # \u8ba4\u8bc1\u7ec4\u4ef6\u5bf9\u8c61\u7ec4\u6210\u7684\u5217\u8868\u4e2d\u5faa\u73af for authenticator in self.authenticators: try: # \u6267\u884c\u8ba4\u8bc1\u7ec4\u4ef6\u5bf9\u8c61\u7684authenticate\u65b9\u6cd5\uff0cself = request \u5bf9\u8c61 # \u5728\u6b64\u5904\u6267\u884c\u4e86\u7ec4\u4ef6\u4e2d\u7684authenticate\u65b9\u6cd5 user_auth_tuple = authenticator.authenticate(self) except exceptions.APIException: self._not_authenticated() raise if user_auth_tuple is not None: self._authenticator = authenticator # \u5c01\u88c5\u5230request.user,request.auth\u4e2d\uff0cself = reqeust # \u590d\u5236\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u6267\u884csetter self.user, self.auth = user_auth_tuple return self._not_authenticated() @user.setter def user(self, value): \"\"\" Sets the user on the current request. This is necessary to maintain compatibility with django.contrib.auth where the user property is set in the login and logout functions. Note that we also set the user on Django's underlying `HttpRequest` instance, ensuring that it is available to any middleware in the stack. \"\"\" self._user = value self._request.user = value @property def user(self): \"\"\" Returns the user associated with the current request, as authenticated by the authentication classes provided to the request. \"\"\" if not hasattr(self, '_user'): with wrap_attributeerrors(): self._authenticate() return self._user class APIView(View): authentication_classes = api_settings.DEFAULT_AUTHENTICATION_CLASSES def perform_authentication(self, request): request.user def initial(self, request, *args, **kwargs): # Ensure that the incoming request is permitted self.perform_authentication(request) self.check_permissions(request) self.check_throttles(request) def get_authenticators(self): # \u5bf9\u8c61\u5217\u8868\uff0c\u4e0d\u540c\u8ba4\u8bc1\u7c7b\u5b9e\u4f8b\u5316\u5f97\u5230\u7684\u5bf9\u8c61 return [auth() for auth in self.authentication_classes] def initialize_request(self, request, *args, **kwargs): parser_context = self.get_parser_context(request) return Request( request, parsers=self.get_parsers(), authenticators=self.get_authenticators(), negotiator=self.get_content_negotiator(), parser_context=parser_context ) def dispatch(self, request, *args, **kwargs): self.args = args self.kwargs = kwargs # \u8bf7\u6c42\u7684\u5c01\u88c5 (django\u7684request + authenticator\u8ba4\u8bc1\u7ec4\u4ef6) -> \u8ba4\u8bc1\u7ec4\u4ef6\u52a0\u8f7d\u7684\u8fc7\u7a0b request = self.initialize_request(request, *args, **kwargs) self.request = request self.headers = self.default_response_headers # deprecate? # self.initial(request, *args, **kwargs) # Get the appropriate handler method handler = getattr(self, request.method.lower(),self.http_method_not_allowed) handler = self.http_method_not_allowed response = handler(request, *args, **kwargs) self.response = self.finalize_response(request, response, *args, **kwargs) return self.response class UserView(APIView): def get(self, request): print(request.user, request.auth) return Response(\"...\") # \u8bf7\u6c42\u5230\u6765\u65f6 obj = UserView() obj.dispatch()","title":"3.restframework\u8ba4\u8bc1\u7ec4\u4ef6"},{"location":"Django/restframework_authentication/restframework_authentication/#3restframework","text":"","title":"3.restframework\u8ba4\u8bc1\u7ec4\u4ef6"},{"location":"Django/restframework_authentication/restframework_authentication/#1","text":"restframework\u7684\u8ba4\u8bc1authenticate\u7ec4\u4ef6\u5e2e\u52a9\u63a5\u53e3\uff08API\uff09\u8fdb\u884c \u8eab\u4efd\u8ba4\u8bc1 \u524d\u620f\u4e0d\u591a\uff0c\u9a6c\u4e0a\u5f00\u59cb\ud83c\udf88","title":"1.\u524d\u620f"},{"location":"Django/restframework_authentication/restframework_authentication/#2","text":"\u7f16\u5199\u4e00\u4e2a\u6a21\u5757\u5b58\u50a8\u8ba4\u8bc1\u7c7b from rest_framework.authentication import BaseAuthentication class MyAuthentication(BaseAuthentication): def authenticate(self,request): # \u8fdb\u884c\u7528\u6237\u8ba4\u8bc1 # - \u8bfb\u53d6token # - \u68c0\u9a8ctoken\u5408\u6cd5\u6027 # - \u8fd4\u56de # - \u8fd4\u56de\u5143\u7956 \uff08xx,oo\uff09 \u5143\u7ec4\u4e2d\u7684\u4e24\u4e2a\u503c\u5206\u522b\u8d4b\u503c\u7ed9request.user \u548c request.auth # - \u629b\u51fa\u5f02\u5e38 \u8ba4\u8bc1\u5931\u8d25 -> \u8fd4\u56de\u9519\u8bef\u4fe1\u606f # - return None \u591a\u4e2a\u8ba4\u8bc1\u7c7b\u4e2d[c1,c2,c3...] \u53bb\u4e4b\u540e\u7684\u7c7b\u4e2d # - \u5982\u679c\u6240\u6709\u7684\u7c7b\u90fd\u6ca1\u6709\u8ba4\u8bc1\u6210\u529f -> \u533f\u540d\u7528\u6237 pass \u83b7\u53d6token token = request._request.GET.get(\"token\") token = request.query_params.get(\"token\") \u8ba4\u8bc1\u7c7b\u7684\u6a21\u7248 (\u4e0d\u80fd\u5378\u8f7dview\u89c6\u56fe\u4e2d\uff0c\u5faa\u73af\u5f15\u7528\u62a5\u9519) from rest_framework.authentication import BaseAuthentication from rest_framework.exceptions import AuthenticationFailed class MyAuthentication(BaseAuthentication): def authenticate(self,request): token = request.query_params.get(\"token\") if token: return (\"wupeiqi\",token) raise Authentication Failed(\"\u8ba4\u8bc1\u5931\u8d25\") \u5728\u89c6\u56fe\u51fd\u6570\u4e2d from ext.auth import MyAuthentication class OrderView(APIView): authentication_classes = [MyAuthentication,...] def get(self,request): ... pass \u914d\u7f6e\u6587\u4ef6\u4e2d\u914d\u7f6e\u5168\u5c40\u8ba4\u8bc1\u7ec4\u4ef6 REST_FRAMEWORK = { \"UNAUTHENTICATED_USER\": None, # \u503c\uff1a[\u8ba4\u8bc1\u7ec4\u4ef6\u6240\u5728\u7684\u8def\u5f84] \u5168\u5c40\u6240\u6709\u7684\u7c7b\u90fd\u5e94\u7528\u6743\u9650\u7ec4\u4ef6 \"DEFAULT_AUTHENTICATION_CLASSES\": [ 'ext.auth.QueryParamsAuthentication', 'ext.auth.HeaderAuthentication', 'ext.auth.NOAuthentication', ], }","title":"2. \u8ba4\u8bc1\u7ec4\u4ef6\u7684\u5e94\u7528"},{"location":"Django/restframework_authentication/restframework_authentication/#3","text":"\u52a0\u8f7d\u8ba4\u8bc1\u7ec4\u4ef6\uff0c\u672c\u8d28\u5c31\u662f\u5b9e\u4f8b\u5316\u6bcf\u4e2a\u8ba4\u8bc1\u7c7b\u7684\u5bf9\u8c61\uff0c\u5e76\u4e14\u5c01\u88c5\u5230request\u5bf9\u8c61\u4e2d \u56fe\u592a\u5927\u4e86\uff5e\ud83c\udf88 class Request: def __init__(self, request,authenticators=None): self._request = request self.authenticators = authenticators or () def _not_authenticated(self): \"\"\" Set authenticator, user & authtoken representing an unauthenticated request. Defaults are None, AnonymousUser & None. \"\"\" self._authenticator = None # \u8bfb\u53d6\u533f\u540d\u7528\u6237 if api_settings.UNAUTHENTICATED_USER: self.user = api_settings.UNAUTHENTICATED_USER() else: self.user = None if api_settings.UNAUTHENTICATED_TOKEN: self.auth = api_settings.UNAUTHENTICATED_TOKEN() else: self.auth = None def _authenticate(self): \"\"\" Attempt to authenticate the request using each authentication instance in turn. \"\"\" # \u8ba4\u8bc1\u7ec4\u4ef6\u5bf9\u8c61\u7ec4\u6210\u7684\u5217\u8868\u4e2d\u5faa\u73af for authenticator in self.authenticators: try: # \u6267\u884c\u8ba4\u8bc1\u7ec4\u4ef6\u5bf9\u8c61\u7684authenticate\u65b9\u6cd5\uff0cself = request \u5bf9\u8c61 # \u5728\u6b64\u5904\u6267\u884c\u4e86\u7ec4\u4ef6\u4e2d\u7684authenticate\u65b9\u6cd5 user_auth_tuple = authenticator.authenticate(self) except exceptions.APIException: self._not_authenticated() raise if user_auth_tuple is not None: self._authenticator = authenticator # \u5c01\u88c5\u5230request.user,request.auth\u4e2d\uff0cself = reqeust # \u590d\u5236\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u6267\u884csetter self.user, self.auth = user_auth_tuple return self._not_authenticated() @user.setter def user(self, value): \"\"\" Sets the user on the current request. This is necessary to maintain compatibility with django.contrib.auth where the user property is set in the login and logout functions. Note that we also set the user on Django's underlying `HttpRequest` instance, ensuring that it is available to any middleware in the stack. \"\"\" self._user = value self._request.user = value @property def user(self): \"\"\" Returns the user associated with the current request, as authenticated by the authentication classes provided to the request. \"\"\" if not hasattr(self, '_user'): with wrap_attributeerrors(): self._authenticate() return self._user class APIView(View): authentication_classes = api_settings.DEFAULT_AUTHENTICATION_CLASSES def perform_authentication(self, request): request.user def initial(self, request, *args, **kwargs): # Ensure that the incoming request is permitted self.perform_authentication(request) self.check_permissions(request) self.check_throttles(request) def get_authenticators(self): # \u5bf9\u8c61\u5217\u8868\uff0c\u4e0d\u540c\u8ba4\u8bc1\u7c7b\u5b9e\u4f8b\u5316\u5f97\u5230\u7684\u5bf9\u8c61 return [auth() for auth in self.authentication_classes] def initialize_request(self, request, *args, **kwargs): parser_context = self.get_parser_context(request) return Request( request, parsers=self.get_parsers(), authenticators=self.get_authenticators(), negotiator=self.get_content_negotiator(), parser_context=parser_context ) def dispatch(self, request, *args, **kwargs): self.args = args self.kwargs = kwargs # \u8bf7\u6c42\u7684\u5c01\u88c5 (django\u7684request + authenticator\u8ba4\u8bc1\u7ec4\u4ef6) -> \u8ba4\u8bc1\u7ec4\u4ef6\u52a0\u8f7d\u7684\u8fc7\u7a0b request = self.initialize_request(request, *args, **kwargs) self.request = request self.headers = self.default_response_headers # deprecate? # self.initial(request, *args, **kwargs) # Get the appropriate handler method handler = getattr(self, request.method.lower(),self.http_method_not_allowed) handler = self.http_method_not_allowed response = handler(request, *args, **kwargs) self.response = self.finalize_response(request, response, *args, **kwargs) return self.response class UserView(APIView): def get(self, request): print(request.user, request.auth) return Response(\"...\") # \u8bf7\u6c42\u5230\u6765\u65f6 obj = UserView() obj.dispatch()","title":"3.\u6e90\u7801\u5206\u6790"},{"location":"Django/restframework_pager/restframework_pager/","text":"10.restframework Pager restframework\u4e2d\u63d0\u4f9b\u4e86\u4f18\u79c0\u7684\u5206\u9875\u7ec4\u4ef6 \u5728 settings.py \u4e2d\uff0c\u586b\u5199\u5173\u4e8erestframework\u7684\u914d\u7f6e REST_FRAMEWORK = { \"UNAUTHENTICATED_USER\": None, \"PAGE_SIZE\": 4 } 1.PageNumberPagination from rest_framework.pagination import LimitOffsetPagination class BlogView(APIView): authentication_classes = [BlogAuthentication, ] def get(self, request, *args, **kwargs): \"\"\" \u535a\u5ba2\u5217\u8868 \"\"\" # 1.\u8bfb\u53d6\u6570\u636e\u5e93\u4e2d\u7684\u535a\u5ba2\u4fe1\u606f queryset = models.Blog.objects.all().order_by(\"id\") from rest_framework.pagination import LimitOffsetPagination pager = LimitOffsetPagination() res = pager.paginate_queryset(queryset, request, self) # total_res = pager.get_paginated_response() # 2.\u5e8f\u5217\u5316 ser = BlogSerializers(instance=res, many=True) response = pager.get_paginated_response(ser.data) # 3.\u8fd4\u56de return response # \u83b7\u53d6\u5230\u6240\u6709queryset\u5bf9\u8c61 queryset = models.Blog.objects.all().order_by(\"id\") from rest_framework.pagination import PageNumberPagination # \u5b9e\u4f8b\u5316\u5206\u9875\u5bf9\u8c61&\u4f20\u5165\u53c2\u6570\uff08\u6570\u636equeryset,request\u5bf9\u8c61,view\uff09 pager = PageNumberPagination() res = pager.paginate_queryset(queryset, request, self) ser = BlogSerializers(instance=res, many=True) response = pager.get_paginated_response(ser.data) return response return response \u8fd9\u91cc\u7684response\u7ecf\u8fc7\u4e86 get_paginated_response \u65b9\u6cd5\u7684\u5c01\u88c5\uff0c\u5177\u4f53\u8fc7\u7a0b\uff1a class LimitOffsetPagination(BasePagination): ... def get_paginated_response(self, data): return Response(OrderedDict([ ('count', self.count), ('next', self.get_next_link()), ('previous', self.get_previous_link()), ('results', data) ])) get_paginated_response \u5728\u8fd4\u56de\u65f6\u8c03\u7528\u4e86 restframework \u7684response\uff0c \u5e76\u4e14\u5c01\u88c5\u4e86\u66f4\u591a\u7684\u4e0e\u5206\u9875\u76f8\u5173\u7684\u53c2\u6570\u8fd4\u56de\u7ed9\u8c03\u7528\u5b83\u7684API\uff0c \u5982\u679c\u5e0c\u671b\u5bf9\u5c01\u88c5\u7684\u53c2\u6570\u8fdb\u884c\u81ea\u5b9a\u5236 \uff0c\u6216\u8005\u589e\u52a0\u4e00\u4e9b\u5176\u4ed6\u7684\u53c2\u6570\uff0c \u53ef\u4ee5\u5199\u4e00\u4e2a\u5b50\u7c7b MyLimitOffsetPagination \u5e76\u4e14 \u91cd\u5199 get_paginated_response(self, data) \u65b9\u6cd5 class MyLimitOffsetPagination(LimitOffsetPagination): ... def get_paginated_response(self, data): return Response(OrderedDict([ ('xxx',self.xxx) ('count', self.count), ('next', self.get_next_link()), ('previous', self.get_previous_link()), ('results', data) ])) { \"count\": 15, \"next\": \"http://127.0.0.1:8000/api/blog/?limit=4&offset=4&page=2\", \"previous\": null, \"results\": [ { \"id\": 1, \"category\": \"\u4e91\u8ba1\u7b97\", \"image\": \"xxxx/xxxxx.png\", \"title\": \"\u90d1\u7ecf\u7406\", \"summary\": \"....\", \"ctime\": \"2022-10-01\", \"comment_count\": 0, \"favor_count\": 0, \"creator\": { \"id\": 1, \"username\": \"wupeiqi\" } }, { \"id\": 2, \"category\": \"Python\u5168\u6808\", \"image\": \"xxxx/xxxxx.png\", \"title\": \"\u9707\u60ca\u4e86\", \"summary\": \"....\", \"ctime\": \"2022-10-01\", \"comment_count\": 0, \"favor_count\": 0, \"creator\": { \"id\": 2, \"username\": \"cxr\" } }, ...... ] } 2.LimitOffsetPagination from rest_framework.pagination import LimitOffsetPagination class BlogView(APIView): authentication_classes = [BlogAuthentication, ] def get(self, request, *args, **kwargs): \"\"\" \u535a\u5ba2\u5217\u8868 \"\"\" # 1.\u8bfb\u53d6\u6570\u636e\u5e93\u4e2d\u7684\u535a\u5ba2\u4fe1\u606f queryset = models.Blog.objects.all().order_by(\"id\") from rest_framework.pagination import LimitOffsetPagination pager = LimitOffsetPagination() res = pager.paginate_queryset(queryset, request, self) # total_res = pager.get_paginated_response() # 2.\u5e8f\u5217\u5316 ser = BlogSerializers(instance=res, many=True) response = pager.get_paginated_response(ser.data) # 3.\u8fd4\u56de return response ...... LimitOffsetPagination \u66f4\u52a0\u9002\u5408\u6eda\u52a8\u7ffb\u9875\u7684\u60c5\u51b5 LimitOffsetPagination\uff0c\u6eda\u52a8\u7ffb\u9875 /accounts/?offset=2&limit=10 /accounts/?offset=10&limit=10 /accounts/?lastid=10&offset=0&limit=10 /accounts/?lastid=20&offset=0&limit=10","title":"10.restframework Pager"},{"location":"Django/restframework_pager/restframework_pager/#10restframework-pager","text":"restframework\u4e2d\u63d0\u4f9b\u4e86\u4f18\u79c0\u7684\u5206\u9875\u7ec4\u4ef6 \u5728 settings.py \u4e2d\uff0c\u586b\u5199\u5173\u4e8erestframework\u7684\u914d\u7f6e REST_FRAMEWORK = { \"UNAUTHENTICATED_USER\": None, \"PAGE_SIZE\": 4 }","title":"10.restframework Pager"},{"location":"Django/restframework_pager/restframework_pager/#1pagenumberpagination","text":"from rest_framework.pagination import LimitOffsetPagination class BlogView(APIView): authentication_classes = [BlogAuthentication, ] def get(self, request, *args, **kwargs): \"\"\" \u535a\u5ba2\u5217\u8868 \"\"\" # 1.\u8bfb\u53d6\u6570\u636e\u5e93\u4e2d\u7684\u535a\u5ba2\u4fe1\u606f queryset = models.Blog.objects.all().order_by(\"id\") from rest_framework.pagination import LimitOffsetPagination pager = LimitOffsetPagination() res = pager.paginate_queryset(queryset, request, self) # total_res = pager.get_paginated_response() # 2.\u5e8f\u5217\u5316 ser = BlogSerializers(instance=res, many=True) response = pager.get_paginated_response(ser.data) # 3.\u8fd4\u56de return response # \u83b7\u53d6\u5230\u6240\u6709queryset\u5bf9\u8c61 queryset = models.Blog.objects.all().order_by(\"id\") from rest_framework.pagination import PageNumberPagination # \u5b9e\u4f8b\u5316\u5206\u9875\u5bf9\u8c61&\u4f20\u5165\u53c2\u6570\uff08\u6570\u636equeryset,request\u5bf9\u8c61,view\uff09 pager = PageNumberPagination() res = pager.paginate_queryset(queryset, request, self) ser = BlogSerializers(instance=res, many=True) response = pager.get_paginated_response(ser.data) return response return response \u8fd9\u91cc\u7684response\u7ecf\u8fc7\u4e86 get_paginated_response \u65b9\u6cd5\u7684\u5c01\u88c5\uff0c\u5177\u4f53\u8fc7\u7a0b\uff1a class LimitOffsetPagination(BasePagination): ... def get_paginated_response(self, data): return Response(OrderedDict([ ('count', self.count), ('next', self.get_next_link()), ('previous', self.get_previous_link()), ('results', data) ])) get_paginated_response \u5728\u8fd4\u56de\u65f6\u8c03\u7528\u4e86 restframework \u7684response\uff0c \u5e76\u4e14\u5c01\u88c5\u4e86\u66f4\u591a\u7684\u4e0e\u5206\u9875\u76f8\u5173\u7684\u53c2\u6570\u8fd4\u56de\u7ed9\u8c03\u7528\u5b83\u7684API\uff0c \u5982\u679c\u5e0c\u671b\u5bf9\u5c01\u88c5\u7684\u53c2\u6570\u8fdb\u884c\u81ea\u5b9a\u5236 \uff0c\u6216\u8005\u589e\u52a0\u4e00\u4e9b\u5176\u4ed6\u7684\u53c2\u6570\uff0c \u53ef\u4ee5\u5199\u4e00\u4e2a\u5b50\u7c7b MyLimitOffsetPagination \u5e76\u4e14 \u91cd\u5199 get_paginated_response(self, data) \u65b9\u6cd5 class MyLimitOffsetPagination(LimitOffsetPagination): ... def get_paginated_response(self, data): return Response(OrderedDict([ ('xxx',self.xxx) ('count', self.count), ('next', self.get_next_link()), ('previous', self.get_previous_link()), ('results', data) ])) { \"count\": 15, \"next\": \"http://127.0.0.1:8000/api/blog/?limit=4&offset=4&page=2\", \"previous\": null, \"results\": [ { \"id\": 1, \"category\": \"\u4e91\u8ba1\u7b97\", \"image\": \"xxxx/xxxxx.png\", \"title\": \"\u90d1\u7ecf\u7406\", \"summary\": \"....\", \"ctime\": \"2022-10-01\", \"comment_count\": 0, \"favor_count\": 0, \"creator\": { \"id\": 1, \"username\": \"wupeiqi\" } }, { \"id\": 2, \"category\": \"Python\u5168\u6808\", \"image\": \"xxxx/xxxxx.png\", \"title\": \"\u9707\u60ca\u4e86\", \"summary\": \"....\", \"ctime\": \"2022-10-01\", \"comment_count\": 0, \"favor_count\": 0, \"creator\": { \"id\": 2, \"username\": \"cxr\" } }, ...... ] }","title":"1.PageNumberPagination"},{"location":"Django/restframework_pager/restframework_pager/#2limitoffsetpagination","text":"from rest_framework.pagination import LimitOffsetPagination class BlogView(APIView): authentication_classes = [BlogAuthentication, ] def get(self, request, *args, **kwargs): \"\"\" \u535a\u5ba2\u5217\u8868 \"\"\" # 1.\u8bfb\u53d6\u6570\u636e\u5e93\u4e2d\u7684\u535a\u5ba2\u4fe1\u606f queryset = models.Blog.objects.all().order_by(\"id\") from rest_framework.pagination import LimitOffsetPagination pager = LimitOffsetPagination() res = pager.paginate_queryset(queryset, request, self) # total_res = pager.get_paginated_response() # 2.\u5e8f\u5217\u5316 ser = BlogSerializers(instance=res, many=True) response = pager.get_paginated_response(ser.data) # 3.\u8fd4\u56de return response ...... LimitOffsetPagination \u66f4\u52a0\u9002\u5408\u6eda\u52a8\u7ffb\u9875\u7684\u60c5\u51b5 LimitOffsetPagination\uff0c\u6eda\u52a8\u7ffb\u9875 /accounts/?offset=2&limit=10 /accounts/?offset=10&limit=10 /accounts/?lastid=10&offset=0&limit=10 /accounts/?lastid=20&offset=0&limit=10","title":"2.LimitOffsetPagination"},{"location":"Django/restframework_permission/restframework_permission/","text":"4.restframework\u6743\u9650\u7ec4\u4ef6 \u5b98\u65b9\u6587\u6863\ud83c\udf88 1.\u524d\u620f \u4e0e\u8ba4\u8bc1\u7ec4\u4ef6\u505a\u5bf9\u6bd4 \u8ba4\u8bc1\u7ec4\u4ef6 = [\u8ba4\u8bc1\u7c7b,\u8ba4\u8bc1\u7c7b,\u8ba4\u8bc1\u7c7b] -> \u6267\u884c\u6bcf\u4e2a\u8ba4\u8bc1\u7c7b\u4e2d\u7684authencate\u65b9\u6cd5\uff0c - \u8fd4\u56deNone \u65f6\uff0c\u624d\u7ee7\u7eed\u6267\u884c\u540e\u7eed\u7684\u8ba4\u8bc1\u7c7b \u8ba4\u8bc1\u7ec4\u4ef6\u4e4b\u95f4\u7684\u5173\u7cfb\u7c7b\u4f3c\u4e8e\u201c\u6216\u201d\u7684\u5173\u7cfb \u6743\u9650\u7ec4\u4ef6 \u6743\u9650\u7ec4\u4ef6 = [\u6743\u9650\u7c7b,\u6743\u9650\u7c7b,\u6743\u9650\u7c7b...] -> \u6267\u884c\u6240\u6709\u6743\u9650\u7c7b\u7684has_permission\u65b9\u6cd5 - \u6267\u884c\u6240\u6709\u7684\u6743\u9650\u7c7b\uff0c\u8981\u6c42\u6240\u6709\u6743\u9650\u7c7b\u90fd\u901a\u8fc7 \u6743\u9650\u7ec4\u4ef6\u8981\u4fdd\u8bc1\u6743\u9650\u7c7b\u4e2d\u7684\u6240\u6709\u65b9\u6cd5\u90fd\u8fd4\u56de true \u9879\u76ee\u4e2d\u7684\u67d0\u4e00\u4e2a\u8bf7\u6c42\u5fc5\u987b\u901a\u8fc7\u6240\u6709\u7684\u6743\u9650\u7ec4\u4ef6\u4e2d\u7684\u7c7b \u5982\u679c\u5e0c\u671b\u6743\u9650\u7ec4\u4ef6\u7684\u903b\u8f91\u5173\u7cfb\u53d8\u6210\u201c\u6216\u201d\u7684\u5173\u7cfb\uff08\u7c7b\u4f3c\u8ba4\u8bc1\u7ec4\u4ef6\uff09 \uff0c \u9700\u8981\u5bf9\u6e90\u7801\u8fdb\u884c\u9b54\u6539\uff08 \u6269\u5c55&\u81ea\u5b9a\u4e49 \uff09 2.\u6743\u9650\u7ec4\u4ef6\u7684\u5e94\u7528 \u7f16\u5199\u4e00\u4e2a\u6a21\u5757\u5b58\u50a8\u6743\u9650\u7c7b from rest_framework.permissions import BasePermission class MyPermission(BasePermission): def has_permission(self, request, view): return ... \u5728\u89c6\u56fe\u51fd\u6570\u4e2d from ext.per import MyPermission class OrderView(APIView): permission_classes = [MyPermission] def get(self, request): return Response('...') \u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u914d\u7f6e\u5168\u5c40\u6743\u9650\u7ec4\u4ef6 REST_FRAMEWORK = { \"UNAUTHENTICATED_USER\": None, # \u503c\uff1a[\u8ba4\u8bc1\u7ec4\u4ef6\u6240\u5728\u7684\u8def\u5f84] \u5168\u5c40\u6240\u6709\u7684\u7c7b\u90fd\u5e94\u7528\u6743\u9650\u7ec4\u4ef6 \"DEFAULT_AUTHENTICATION_CLASSES\": [ 'ext.auth.QueryParamsAuthentication', 'ext.auth.HeaderAuthentication', 'ext.auth.NOAuthentication', ], \"DEFAULT_PERMISSION_CLASSES\": [ 'ext.per.MyPermission' ] } \u5168\u5c40\u914d\u7f6e\u6743\u9650\u7ec4\u4ef6\u540e\uff0c\u5bf9\u4e8e\u4e0d\u9700\u8981\u6743\u9650\u9a8c\u8bc1\u7684\u89c6\u56fe\u51fd\u6570(\u4f8b\u5982\uff1a\u767b\u9646\u9875\u9762) class LoginView(APIView): permission_classes = [] ... \u6743\u9650\u7ec4\u4ef6\u7684\u5e94\u7528\u4e0e\u8ba4\u8bc1\u7ec4\u4ef6\u90fd\u652f\u6301\u5168\u5c40\u5e94\u7528\u6216\u8005\u5c40\u90e8\u89c6\u56fe\u51fd\u6570\u7684\u5e94\u7528 2.1 \u6743\u9650\u6821\u9a8c\u5931\u8d25\u540e\u81ea\u5b9a\u4e49\u8fd4\u56de\u9519\u8bef\u4fe1\u606f \u5728\u6743\u9650\u7c7b\u4e2d\u81ea\u5b9a\u4e49 message \u7c7b\u53d8\u91cf message = {\"code\": \"1001\", \"msg\": \"\u65e0\u6743\u8bbf\u95ee\"} from rest_framework.permissions import BasePermission import random class MyPermission(BasePermission): message = {\"code\": \"1001\", \"msg\": \"\u65e0\u6743\u8bbf\u95ee\"} def has_permission(self, request, view): v1 = random.randint(1, 3) if v1 == 2: return True return False \u6743\u9650\u6821\u9a8c\u5931\u8d25\u540e\uff0crestframework\u4f1a\u81ea\u52a8\u8bfb\u53d6\u6743\u9650\u7c7b\u4e2d\u5b9a\u4e49\u7684\u7c7b\u53d8\u91cf message \u6e90\u4ee3\u7801\u8c03\u7528\u7684\u5206\u6790 class APIView(View): def permission_denied(self, request, message=None, code=None): # deny\u629b\u51fa\u5f02\u5e38 if request.authenticators and not request.successful_authenticator: raise exceptions.NotAuthenticated() raise exceptions.PermissionDenied(detail=message, code=code) def check_permissions(self, request): for permission in self.get_permissions(): # \u5faa\u73af\u90a3\u4e2a\u5bf9\u8c61\u5217\u8868\uff0c\u6267\u884c\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u7684has_permission\u65b9\u6cd5 # \u5982\u8fc7\u8fd4\u56deFalse if not permission.has_permission(request, self): # \u6743\u9650\u5931\u6548 self.permission_denied( request, # \u8bfb\u53d6\u7684message \u662f\u5728\u6743\u9650\u7c7b\u4e2d\u81ea\u5b9a\u4e49message\u7c7b\u53d8\u91cf message=getattr(permission, 'message', None), code=getattr(permission, 'code', None) ) \u5173\u6ce8 permission_denied \u65b9\u6cd5\u7684\u53d8\u91cf\u8bbe\u7f6e def permission_denied(self, request, message=None, code=None): message=None code=None permission_deny \u65b9\u6cd5\u5728\u88ab check_permissions \u65b9\u6cd5\u8c03\u7528\u65f6\u4f20\u5165\u7684\u53c2\u6570 self.permission_denied( request, # \u8bfb\u53d6\u7684message \u662f\u5728\u6743\u9650\u7c7b\u4e2d\u81ea\u5b9a\u4e49message\u7c7b\u53d8\u91cf message=getattr(permission, 'message', None), code=getattr(permission, 'code', None) ) \u901a\u8fc7 \u53cd\u5c04 \u8bfb\u53d6self\u4e2d\u7c7b\u53d8\u91cf\u7684\u8bbe\u7f6e 2.2 \u6743\u9650\u7ec4\u4ef6\u7684\u6267\u884c\u8fc7\u7a0b \u5b9a\u4e49\u4e09\u4e2a\u6743\u9650\u7c7b from rest_framework.permissions import BasePermission class MyPermission1(BasePermission): message = {\"code\": \"1001\", \"msg\": \"\u65e0\u6743\u8bbf\u95ee\"} def has_permission(self, request, view): print(\"MyPermission1\") return True class MyPermission2(BasePermission): message = {\"code\": \"1001\", \"msg\": \"\u65e0\u6743\u8bbf\u95ee\"} def has_permission(self, request, view): print(\"MyPermission2\") return False class MyPermission3(BasePermission): message = {\"code\": \"1001\", \"msg\": \"\u65e0\u6743\u8bbf\u95ee\"} def has_permission(self, request, view): print(\"MyPermission3\") return True \u5176\u4e2d\u7b2c\u4e8c\u4e2a\u7c7b return False \uff0c\u5176\u4f59\u7c7b\u90fd\u8fd4\u56de True \u5bf9\u4e00\u4e2a\u89c6\u56fe\u51fd\u6570\u5e94\u7528\u8fd9\u4e9b\u7c7b class OrderView(APIView): permission_classes = [MyPermission1, MyPermission2, MyPermission3] def get(self, request): return Response('...') \u5728\u7ec8\u7aef\u7684\u8f93\u51fa\u7ed3\u679c [17/Sep/2022 12:48:18] \"GET /order/ HTTP/1.1\" 403 36 MyPermission1 MyPermission2 \u5982\u679c\u4e00\u4e2a\u7c7b\u6ca1\u6709\u901a\u8fc7\uff08 return True \uff09\uff0c\u540e\u7eed\u7c7b\u5c06\u4e0d\u518d\u6267\u884c \u6240\u6709\u7c7b\u90fd return True \uff0c\u624d\u80fd\u5230\u8fbe\u89c6\u56fe\u51fd\u6570 3. \u6e90\u7801\u5206\u6790 # \u6743\u9650\u7ec4\u4ef6\u6e90\u7801\u5206\u6790 class APIView(View): # \u5728get_permissions\u4e2d\u8bfb\u53d6self.permission_classes (settings\u5168\u5c40\u914d\u7f6e) # \u8bfb\u53d6\u5bf9\u8c61\u5217\u8868\u5e76\u4e14\u8fd4\u56de\u7ed9check_permissions def get_permissions(self): \"\"\" Instantiates and returns the list of permissions that this view requires. \"\"\" return [permission() for permission in self.permission_classes] def permission_denied(self, request, message=None, code=None): # deny\u629b\u51fa\u5f02\u5e38 if request.authenticators and not request.successful_authenticator: raise exceptions.NotAuthenticated() raise exceptions.PermissionDenied(detail=message, code=code) def check_permissions(self, request): for permission in self.get_permissions(): # \u5faa\u73af\u90a3\u4e2a\u5bf9\u8c61\u5217\u8868\uff0c\u6267\u884c\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u7684has_permission\u65b9\u6cd5 # \u5982\u8fc7\u8fd4\u56deFalse if not permission.has_permission(request, self): # \u6743\u9650\u5931\u6548 self.permission_denied( request, # \u8bfb\u53d6\u7684message \u662f\u5728\u6743\u9650\u7c7b\u4e2d\u81ea\u5b9a\u4e49message\u7c7b\u53d8\u91cf message=getattr(permission, 'message', None), code=getattr(permission, 'code', None) ) def initial(self, request, *args, **kwargs): ...... # \u8ba4\u8bc1\u7ec4\u4ef6\u7684\u6267\u884c\uff0c\u5faa\u73af\u6267\u884c\u6bcf\u4e2aauthenticate\u65b9\u6cd5 # \u8ba4\u8bc1\u7ec4\u4ef6\u4e2d\u51fa\u73b0\u8ba4\u8bc1\u5931\u8d25\uff0c\u4f1a\u629b\u51fa\u5f02\u5e38 # \u8ba4\u8bc1\u6210\u529f\u4f1a\u7ed9request.user/request.auth\u8d4b\u503c\uff0c\u4e4b\u540e\u6267\u884ccheck_permissions self.perform_authentication(request) # \u8fdb\u884c\u52a0\u8f7d\u6743\u9650\u7ec4\u4ef6\uff0c\u8fdb\u884c\u6821\u9a8c\uff0c\u6743\u9650\u7ec4\u4ef6\u7684\u8fd0\u884c\u662f\u5728\u8ba4\u8bc1\u7ec4\u4ef6\u4e4b\u540e\u7684 # \u80fd\u8d70\u5230\u8fd9\u4e00\u6b65\uff0c\u8bf4\u660erequest.user/request.auth\u5df2\u7ecf\u88ab\u8d4b\u503c self.check_permissions(request) self.check_throttles(request) def dispatch(self, request, *args, **kwargs): self.args = args self.kwargs = kwargs \"\"\" \u8bf7\u6c42\u7684\u5c01\u88c5\uff0c\u5c06django\u7684request\u5bf9\u8c61\u5c01\u88c5\u8fdb\u5165restframework\u7684 requesty\u5bf9\u8c61 \"\"\" request = self.initialize_request(request, *args, **kwargs) self.request = request self.headers = self.default_response_headers # deprecate? try: self.initial(request, *args, **kwargs) # Get the appropriate handler method if request.method.lower() in self.http_method_names: handler = getattr(self, request.method.lower(), self.http_method_not_allowed) else: handler = self.http_method_not_allowed response = handler(request, *args, **kwargs) except Exception as exc: response = self.handle_exception(exc) self.response = self.finalize_response(request, response, *args, **kwargs) return self.response class OrderView(APIView): permission_classes = [MyPermission1, MyPermission2, MyPermission3] def get(self, request): # \u7531\u6b64\u5904\u8fdb\u5165\u6e90\u7801 self.dispatch return Response('...') 4. \u6743\u9650\u7ec4\u4ef6\u7684\u6269\u5c55 \u901a\u8fc7\u5bf9\u6e90\u7801\u7684\u6269\u5c55\uff0c\u6539\u53d8\u5224\u65ad\u903b\u8f91 \u6838\u5fc3\u662f \u4fee\u6539check_permissions\u65b9\u6cd5 \u7684\u903b\u8f91\uff0c\u5728\u6e90\u4ee3\u7801\u4e2d\u7684check_permissions\u4e2d\uff0c \u53ea\u8981\u5b58\u5728\u4e0d\u6ee1\u8db3\u6743\u9650\u7c7b\u7684\u9a8c\u8bc1\u7684\uff0ccheck_permissions\u4fbf\u4f1a\u8c03\u7528 permission_denied \u65b9\u6cd5\u629b\u51fa\u5f02\u5e38 \u91cd\u5199 check_permissions \u65b9\u6cd5 def check_permissions(self, request): \"\"\" for permission in self.get_permissions(): # \u5faa\u73af\u90a3\u4e2a\u5bf9\u8c61\u5217\u8868\uff0c\u6267\u884c\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u7684has_permission\u65b9\u6cd5 # \u5982\u8fc7\u8fd4\u56deFalse if not permission.has_permission(request, self): # \u6743\u9650\u5931\u6548 self.permission_denied( request, # \u8bfb\u53d6\u7684message \u662f\u5728\u6743\u9650\u7c7b\u4e2d\u81ea\u5b9a\u4e49message\u7c7b\u53d8\u91cf message=getattr(permission, 'message', None), code=getattr(permission, 'code', None) ) \"\"\" for permission in self.get_permissions(): # \u5b58\u5728\u6ee1\u8db3\u4e00\u4e2a\u7c7b\u7684\u5c31return\u901a\u8fc7 if permission.has_permission(request, self): return self.permission_denied( request, # \u8bfb\u53d6\u7684message \u662f\u5728\u6743\u9650\u7c7b\u4e2d\u81ea\u5b9a\u4e49message\u7c7b\u53d8\u91cf message=getattr(permission, 'message', None), code=getattr(permission, 'code', None) ) 4.1 \u5728OrderView \u7c7b\u4e2d\u91cd\u5199check_permissions\u65b9\u6cd5 OrderView \u7c7b\u7ee7\u627f APIView \u7c7b\uff0cself\u662f OrderView \u7c7b\u5b9e\u4f8b\u5316\u7684\u5bf9\u8c61\uff0c\u6240\u4ee5\u4f18\u5148\u5728 OrderView \u7c7b\u4e2d\u5bfb\u627e check_permissions \u65b9\u6cd5 class OrderView(APIView): permission_classes = [MyPermission1, MyPermission2, MyPermission3] def get(self, request): return Response('...') def check_permissions(self, request): no_permission_object = [] for permission in self.get_permissions(): # \u5b58\u5728\u6ee1\u8db3\u4e00\u4e2a\u7c7b\u7684\u5c31return\u901a\u8fc7 if permission.has_permission(request, self): return else: no_permission_object.append(permission) else: self.permission_denied( request, # \u8bfb\u53d6\u7684message \u662f\u5728\u6743\u9650\u7c7b\u4e2d\u81ea\u5b9a\u4e49message\u7c7b\u53d8\u91cf # \u53d6\u9519\u8bef\u4fe1\u606f\u7684\u7b2c\u4e00\u4e2a message=getattr(no_permission_object[0], 'message', None), code=getattr(no_permission_object[0], 'code', None) )","title":"4.restframework\u6743\u9650\u7ec4\u4ef6"},{"location":"Django/restframework_permission/restframework_permission/#4restframework","text":"\u5b98\u65b9\u6587\u6863\ud83c\udf88","title":"4.restframework\u6743\u9650\u7ec4\u4ef6"},{"location":"Django/restframework_permission/restframework_permission/#1","text":"","title":"1.\u524d\u620f"},{"location":"Django/restframework_permission/restframework_permission/#_1","text":"\u8ba4\u8bc1\u7ec4\u4ef6 = [\u8ba4\u8bc1\u7c7b,\u8ba4\u8bc1\u7c7b,\u8ba4\u8bc1\u7c7b] -> \u6267\u884c\u6bcf\u4e2a\u8ba4\u8bc1\u7c7b\u4e2d\u7684authencate\u65b9\u6cd5\uff0c - \u8fd4\u56deNone \u65f6\uff0c\u624d\u7ee7\u7eed\u6267\u884c\u540e\u7eed\u7684\u8ba4\u8bc1\u7c7b \u8ba4\u8bc1\u7ec4\u4ef6\u4e4b\u95f4\u7684\u5173\u7cfb\u7c7b\u4f3c\u4e8e\u201c\u6216\u201d\u7684\u5173\u7cfb","title":"\u4e0e\u8ba4\u8bc1\u7ec4\u4ef6\u505a\u5bf9\u6bd4"},{"location":"Django/restframework_permission/restframework_permission/#_2","text":"\u6743\u9650\u7ec4\u4ef6 = [\u6743\u9650\u7c7b,\u6743\u9650\u7c7b,\u6743\u9650\u7c7b...] -> \u6267\u884c\u6240\u6709\u6743\u9650\u7c7b\u7684has_permission\u65b9\u6cd5 - \u6267\u884c\u6240\u6709\u7684\u6743\u9650\u7c7b\uff0c\u8981\u6c42\u6240\u6709\u6743\u9650\u7c7b\u90fd\u901a\u8fc7 \u6743\u9650\u7ec4\u4ef6\u8981\u4fdd\u8bc1\u6743\u9650\u7c7b\u4e2d\u7684\u6240\u6709\u65b9\u6cd5\u90fd\u8fd4\u56de true \u9879\u76ee\u4e2d\u7684\u67d0\u4e00\u4e2a\u8bf7\u6c42\u5fc5\u987b\u901a\u8fc7\u6240\u6709\u7684\u6743\u9650\u7ec4\u4ef6\u4e2d\u7684\u7c7b \u5982\u679c\u5e0c\u671b\u6743\u9650\u7ec4\u4ef6\u7684\u903b\u8f91\u5173\u7cfb\u53d8\u6210\u201c\u6216\u201d\u7684\u5173\u7cfb\uff08\u7c7b\u4f3c\u8ba4\u8bc1\u7ec4\u4ef6\uff09 \uff0c \u9700\u8981\u5bf9\u6e90\u7801\u8fdb\u884c\u9b54\u6539\uff08 \u6269\u5c55&\u81ea\u5b9a\u4e49 \uff09","title":"\u6743\u9650\u7ec4\u4ef6"},{"location":"Django/restframework_permission/restframework_permission/#2","text":"\u7f16\u5199\u4e00\u4e2a\u6a21\u5757\u5b58\u50a8\u6743\u9650\u7c7b from rest_framework.permissions import BasePermission class MyPermission(BasePermission): def has_permission(self, request, view): return ... \u5728\u89c6\u56fe\u51fd\u6570\u4e2d from ext.per import MyPermission class OrderView(APIView): permission_classes = [MyPermission] def get(self, request): return Response('...') \u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u914d\u7f6e\u5168\u5c40\u6743\u9650\u7ec4\u4ef6 REST_FRAMEWORK = { \"UNAUTHENTICATED_USER\": None, # \u503c\uff1a[\u8ba4\u8bc1\u7ec4\u4ef6\u6240\u5728\u7684\u8def\u5f84] \u5168\u5c40\u6240\u6709\u7684\u7c7b\u90fd\u5e94\u7528\u6743\u9650\u7ec4\u4ef6 \"DEFAULT_AUTHENTICATION_CLASSES\": [ 'ext.auth.QueryParamsAuthentication', 'ext.auth.HeaderAuthentication', 'ext.auth.NOAuthentication', ], \"DEFAULT_PERMISSION_CLASSES\": [ 'ext.per.MyPermission' ] } \u5168\u5c40\u914d\u7f6e\u6743\u9650\u7ec4\u4ef6\u540e\uff0c\u5bf9\u4e8e\u4e0d\u9700\u8981\u6743\u9650\u9a8c\u8bc1\u7684\u89c6\u56fe\u51fd\u6570(\u4f8b\u5982\uff1a\u767b\u9646\u9875\u9762) class LoginView(APIView): permission_classes = [] ... \u6743\u9650\u7ec4\u4ef6\u7684\u5e94\u7528\u4e0e\u8ba4\u8bc1\u7ec4\u4ef6\u90fd\u652f\u6301\u5168\u5c40\u5e94\u7528\u6216\u8005\u5c40\u90e8\u89c6\u56fe\u51fd\u6570\u7684\u5e94\u7528","title":"2.\u6743\u9650\u7ec4\u4ef6\u7684\u5e94\u7528"},{"location":"Django/restframework_permission/restframework_permission/#21","text":"\u5728\u6743\u9650\u7c7b\u4e2d\u81ea\u5b9a\u4e49 message \u7c7b\u53d8\u91cf message = {\"code\": \"1001\", \"msg\": \"\u65e0\u6743\u8bbf\u95ee\"} from rest_framework.permissions import BasePermission import random class MyPermission(BasePermission): message = {\"code\": \"1001\", \"msg\": \"\u65e0\u6743\u8bbf\u95ee\"} def has_permission(self, request, view): v1 = random.randint(1, 3) if v1 == 2: return True return False \u6743\u9650\u6821\u9a8c\u5931\u8d25\u540e\uff0crestframework\u4f1a\u81ea\u52a8\u8bfb\u53d6\u6743\u9650\u7c7b\u4e2d\u5b9a\u4e49\u7684\u7c7b\u53d8\u91cf message \u6e90\u4ee3\u7801\u8c03\u7528\u7684\u5206\u6790 class APIView(View): def permission_denied(self, request, message=None, code=None): # deny\u629b\u51fa\u5f02\u5e38 if request.authenticators and not request.successful_authenticator: raise exceptions.NotAuthenticated() raise exceptions.PermissionDenied(detail=message, code=code) def check_permissions(self, request): for permission in self.get_permissions(): # \u5faa\u73af\u90a3\u4e2a\u5bf9\u8c61\u5217\u8868\uff0c\u6267\u884c\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u7684has_permission\u65b9\u6cd5 # \u5982\u8fc7\u8fd4\u56deFalse if not permission.has_permission(request, self): # \u6743\u9650\u5931\u6548 self.permission_denied( request, # \u8bfb\u53d6\u7684message \u662f\u5728\u6743\u9650\u7c7b\u4e2d\u81ea\u5b9a\u4e49message\u7c7b\u53d8\u91cf message=getattr(permission, 'message', None), code=getattr(permission, 'code', None) ) \u5173\u6ce8 permission_denied \u65b9\u6cd5\u7684\u53d8\u91cf\u8bbe\u7f6e def permission_denied(self, request, message=None, code=None): message=None code=None permission_deny \u65b9\u6cd5\u5728\u88ab check_permissions \u65b9\u6cd5\u8c03\u7528\u65f6\u4f20\u5165\u7684\u53c2\u6570 self.permission_denied( request, # \u8bfb\u53d6\u7684message \u662f\u5728\u6743\u9650\u7c7b\u4e2d\u81ea\u5b9a\u4e49message\u7c7b\u53d8\u91cf message=getattr(permission, 'message', None), code=getattr(permission, 'code', None) ) \u901a\u8fc7 \u53cd\u5c04 \u8bfb\u53d6self\u4e2d\u7c7b\u53d8\u91cf\u7684\u8bbe\u7f6e","title":"2.1\u6743\u9650\u6821\u9a8c\u5931\u8d25\u540e\u81ea\u5b9a\u4e49\u8fd4\u56de\u9519\u8bef\u4fe1\u606f"},{"location":"Django/restframework_permission/restframework_permission/#22","text":"\u5b9a\u4e49\u4e09\u4e2a\u6743\u9650\u7c7b from rest_framework.permissions import BasePermission class MyPermission1(BasePermission): message = {\"code\": \"1001\", \"msg\": \"\u65e0\u6743\u8bbf\u95ee\"} def has_permission(self, request, view): print(\"MyPermission1\") return True class MyPermission2(BasePermission): message = {\"code\": \"1001\", \"msg\": \"\u65e0\u6743\u8bbf\u95ee\"} def has_permission(self, request, view): print(\"MyPermission2\") return False class MyPermission3(BasePermission): message = {\"code\": \"1001\", \"msg\": \"\u65e0\u6743\u8bbf\u95ee\"} def has_permission(self, request, view): print(\"MyPermission3\") return True \u5176\u4e2d\u7b2c\u4e8c\u4e2a\u7c7b return False \uff0c\u5176\u4f59\u7c7b\u90fd\u8fd4\u56de True \u5bf9\u4e00\u4e2a\u89c6\u56fe\u51fd\u6570\u5e94\u7528\u8fd9\u4e9b\u7c7b class OrderView(APIView): permission_classes = [MyPermission1, MyPermission2, MyPermission3] def get(self, request): return Response('...') \u5728\u7ec8\u7aef\u7684\u8f93\u51fa\u7ed3\u679c [17/Sep/2022 12:48:18] \"GET /order/ HTTP/1.1\" 403 36 MyPermission1 MyPermission2 \u5982\u679c\u4e00\u4e2a\u7c7b\u6ca1\u6709\u901a\u8fc7\uff08 return True \uff09\uff0c\u540e\u7eed\u7c7b\u5c06\u4e0d\u518d\u6267\u884c \u6240\u6709\u7c7b\u90fd return True \uff0c\u624d\u80fd\u5230\u8fbe\u89c6\u56fe\u51fd\u6570","title":"2.2 \u6743\u9650\u7ec4\u4ef6\u7684\u6267\u884c\u8fc7\u7a0b"},{"location":"Django/restframework_permission/restframework_permission/#3","text":"# \u6743\u9650\u7ec4\u4ef6\u6e90\u7801\u5206\u6790 class APIView(View): # \u5728get_permissions\u4e2d\u8bfb\u53d6self.permission_classes (settings\u5168\u5c40\u914d\u7f6e) # \u8bfb\u53d6\u5bf9\u8c61\u5217\u8868\u5e76\u4e14\u8fd4\u56de\u7ed9check_permissions def get_permissions(self): \"\"\" Instantiates and returns the list of permissions that this view requires. \"\"\" return [permission() for permission in self.permission_classes] def permission_denied(self, request, message=None, code=None): # deny\u629b\u51fa\u5f02\u5e38 if request.authenticators and not request.successful_authenticator: raise exceptions.NotAuthenticated() raise exceptions.PermissionDenied(detail=message, code=code) def check_permissions(self, request): for permission in self.get_permissions(): # \u5faa\u73af\u90a3\u4e2a\u5bf9\u8c61\u5217\u8868\uff0c\u6267\u884c\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u7684has_permission\u65b9\u6cd5 # \u5982\u8fc7\u8fd4\u56deFalse if not permission.has_permission(request, self): # \u6743\u9650\u5931\u6548 self.permission_denied( request, # \u8bfb\u53d6\u7684message \u662f\u5728\u6743\u9650\u7c7b\u4e2d\u81ea\u5b9a\u4e49message\u7c7b\u53d8\u91cf message=getattr(permission, 'message', None), code=getattr(permission, 'code', None) ) def initial(self, request, *args, **kwargs): ...... # \u8ba4\u8bc1\u7ec4\u4ef6\u7684\u6267\u884c\uff0c\u5faa\u73af\u6267\u884c\u6bcf\u4e2aauthenticate\u65b9\u6cd5 # \u8ba4\u8bc1\u7ec4\u4ef6\u4e2d\u51fa\u73b0\u8ba4\u8bc1\u5931\u8d25\uff0c\u4f1a\u629b\u51fa\u5f02\u5e38 # \u8ba4\u8bc1\u6210\u529f\u4f1a\u7ed9request.user/request.auth\u8d4b\u503c\uff0c\u4e4b\u540e\u6267\u884ccheck_permissions self.perform_authentication(request) # \u8fdb\u884c\u52a0\u8f7d\u6743\u9650\u7ec4\u4ef6\uff0c\u8fdb\u884c\u6821\u9a8c\uff0c\u6743\u9650\u7ec4\u4ef6\u7684\u8fd0\u884c\u662f\u5728\u8ba4\u8bc1\u7ec4\u4ef6\u4e4b\u540e\u7684 # \u80fd\u8d70\u5230\u8fd9\u4e00\u6b65\uff0c\u8bf4\u660erequest.user/request.auth\u5df2\u7ecf\u88ab\u8d4b\u503c self.check_permissions(request) self.check_throttles(request) def dispatch(self, request, *args, **kwargs): self.args = args self.kwargs = kwargs \"\"\" \u8bf7\u6c42\u7684\u5c01\u88c5\uff0c\u5c06django\u7684request\u5bf9\u8c61\u5c01\u88c5\u8fdb\u5165restframework\u7684 requesty\u5bf9\u8c61 \"\"\" request = self.initialize_request(request, *args, **kwargs) self.request = request self.headers = self.default_response_headers # deprecate? try: self.initial(request, *args, **kwargs) # Get the appropriate handler method if request.method.lower() in self.http_method_names: handler = getattr(self, request.method.lower(), self.http_method_not_allowed) else: handler = self.http_method_not_allowed response = handler(request, *args, **kwargs) except Exception as exc: response = self.handle_exception(exc) self.response = self.finalize_response(request, response, *args, **kwargs) return self.response class OrderView(APIView): permission_classes = [MyPermission1, MyPermission2, MyPermission3] def get(self, request): # \u7531\u6b64\u5904\u8fdb\u5165\u6e90\u7801 self.dispatch return Response('...')","title":"3. \u6e90\u7801\u5206\u6790"},{"location":"Django/restframework_permission/restframework_permission/#4","text":"\u901a\u8fc7\u5bf9\u6e90\u7801\u7684\u6269\u5c55\uff0c\u6539\u53d8\u5224\u65ad\u903b\u8f91 \u6838\u5fc3\u662f \u4fee\u6539check_permissions\u65b9\u6cd5 \u7684\u903b\u8f91\uff0c\u5728\u6e90\u4ee3\u7801\u4e2d\u7684check_permissions\u4e2d\uff0c \u53ea\u8981\u5b58\u5728\u4e0d\u6ee1\u8db3\u6743\u9650\u7c7b\u7684\u9a8c\u8bc1\u7684\uff0ccheck_permissions\u4fbf\u4f1a\u8c03\u7528 permission_denied \u65b9\u6cd5\u629b\u51fa\u5f02\u5e38 \u91cd\u5199 check_permissions \u65b9\u6cd5 def check_permissions(self, request): \"\"\" for permission in self.get_permissions(): # \u5faa\u73af\u90a3\u4e2a\u5bf9\u8c61\u5217\u8868\uff0c\u6267\u884c\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u7684has_permission\u65b9\u6cd5 # \u5982\u8fc7\u8fd4\u56deFalse if not permission.has_permission(request, self): # \u6743\u9650\u5931\u6548 self.permission_denied( request, # \u8bfb\u53d6\u7684message \u662f\u5728\u6743\u9650\u7c7b\u4e2d\u81ea\u5b9a\u4e49message\u7c7b\u53d8\u91cf message=getattr(permission, 'message', None), code=getattr(permission, 'code', None) ) \"\"\" for permission in self.get_permissions(): # \u5b58\u5728\u6ee1\u8db3\u4e00\u4e2a\u7c7b\u7684\u5c31return\u901a\u8fc7 if permission.has_permission(request, self): return self.permission_denied( request, # \u8bfb\u53d6\u7684message \u662f\u5728\u6743\u9650\u7c7b\u4e2d\u81ea\u5b9a\u4e49message\u7c7b\u53d8\u91cf message=getattr(permission, 'message', None), code=getattr(permission, 'code', None) )","title":"4. \u6743\u9650\u7ec4\u4ef6\u7684\u6269\u5c55"},{"location":"Django/restframework_permission/restframework_permission/#41-orderview-check_permissions","text":"OrderView \u7c7b\u7ee7\u627f APIView \u7c7b\uff0cself\u662f OrderView \u7c7b\u5b9e\u4f8b\u5316\u7684\u5bf9\u8c61\uff0c\u6240\u4ee5\u4f18\u5148\u5728 OrderView \u7c7b\u4e2d\u5bfb\u627e check_permissions \u65b9\u6cd5 class OrderView(APIView): permission_classes = [MyPermission1, MyPermission2, MyPermission3] def get(self, request): return Response('...') def check_permissions(self, request): no_permission_object = [] for permission in self.get_permissions(): # \u5b58\u5728\u6ee1\u8db3\u4e00\u4e2a\u7c7b\u7684\u5c31return\u901a\u8fc7 if permission.has_permission(request, self): return else: no_permission_object.append(permission) else: self.permission_denied( request, # \u8bfb\u53d6\u7684message \u662f\u5728\u6743\u9650\u7c7b\u4e2d\u81ea\u5b9a\u4e49message\u7c7b\u53d8\u91cf # \u53d6\u9519\u8bef\u4fe1\u606f\u7684\u7b2c\u4e00\u4e2a message=getattr(no_permission_object[0], 'message', None), code=getattr(no_permission_object[0], 'code', None) )","title":"4.1 \u5728OrderView \u7c7b\u4e2d\u91cd\u5199check_permissions\u65b9\u6cd5"},{"location":"Django/restframework_practice/restframework_blog/","text":"6.restframework\uff1ablog \u95ee\u9898\uff1a class BlogSerializer(NbHookSerializer, serializers.ModelSerializer): # category = serializers.CharField(source=\"get_category_display\") ctime = serializers.DateTimeField(format=\"%Y-%m-%d\", read_only=True) # creator = serializers.CharField(source='creator.username', read_only=True) # creator_info = serializers.SerializerMethodField() # creator_info_class = BlogInfoSerializer() class Meta: model = models.Blog # fields = ['category', 'image', 'title', 'summary', 'text', 'ctime', 'creator', 'creator_name', 'creator_info'] fields = ['id', \"category\", \"image\", \"title\", \"text\", \"summary\", \"ctime\", \"comment_count\", \"favor_count\", \"creator\"] extra_kwargs = { \"comment_count\": {\"read_only\": True}, \"favor_count\": {\"read_only\": True}, 'text': {\"write_only\": True}, # 'creator':{\"read_only\":True} } # \u94a9\u5b50\u65b9\u6cd5 \"\"\" def get_creator_info(self, obj): # obj \u6b64\u65f6\u662fBlog Object # \u4e0eclass Meta\u4e2d\u9996\u5148\u58f0\u660e\u7684model\u76f8\u5173 print(obj) # Blog object (2) context = { \"creator_id\": obj.creator.id, \"creator_name\": obj.creator.username } return context \"\"\" def nb_category(self, obj): return obj.get_category_display class BlogView(APIView): authentication_classes = [BlogAuthentication, ] def get(self, request, *args, **kwargs): queryset = models.Blog.objects.all().order_by('-id') ser = BlogSerializer(instance=queryset, many=True) context = {\"status\": True, \"data\": ser.data} return Response(context) def post(self, request): \"\"\"\u65b0\u5efa\u535a\u5ba2\"\"\" if not request.user: return Response({\"status\": False, \"detail\": \"\u672a\u767b\u5f55\"}) ser = BlogSerializer(data=request.data) if not ser.is_valid(): return Response({\"status\": False, \"detail\": \"\u6821\u9a8c\u5931\u8d25\", \"errors\": ser.errors}) ser.save(creator=request.user) return Response({\"status\": True, \"detail\": \"\u65b0\u5efa\u535a\u5ba2\u6210\u529f\", \"data\": ser.data}) \u5e94\u8be5\u662f\u4e2d\u95f4\u4ef6\u62e6\u622a [01/Oct/2022 09:05:32] \"POST /api/blog/?token=6622d344-abea-4a71-9605-3635e4f13f3f HTTP/1.1\" 200 89 { \"status\": false, \"detail\": \"\u6821\u9a8c\u5931\u8d25\", \"errors\": { \"creator\": [ \"This field is required.\" ] } } 1. \u524d\u620f \u57fa\u4e8edjangorestframework\u7f16\u5199\u7684\u4e00\u5957\u7b80\u5355\u7684restAPI\uff0c\u5b8c\u6210\u4e86\u535a\u5ba2\u7cfb\u7edf\u7684\u6838\u5fc3\u529f\u80fd \u751f\u6210\u6d4b\u8bd5\u6570\u636e\u7684 scripts def db(request): v1 = models.UserInfo.objects.create(username=\"wupeiqi\", password='123') v2 = models.UserInfo.objects.create(username=\"cxr\", password='123') models.Blog.objects.create( category=1, image=\"xxxx/xxxxx.png\", title=\"\u90d1\u7ecf\u7406\", summary=\"....\", text=\"\u5361\u5c01\u5efa\u65f6\u4ee3\uff1bif\u53ef\u7ed3\u6848\u65f6\uff1b\u4e86\u591a\u5f00\u51e0\u4efd\uff1b\u57c3\u91cc\u514b\u68ee\u7684\u673a\u623f\", creator=v1 ) models.Blog.objects.create( category=2, image=\"xxxx/xxxxx.png\", title=\"\u9707\u60ca\u4e86\", summary=\"....\", text=\"\u5361\u5c01\u6210\u578b\u5982\u5c45\u7136\u584c\u65b9\u4e86\u623f\", creator=v2 ) models.Comment.objects.create(content='x1asdf', blog_id=1, user_id=1) models.Comment.objects.create(content='x1ffff', blog_id=1, user_id=2) return HttpResponse(\"\u6210\u529f\") 2.\u914d\u7f6e\u4fe1\u606f\u4e0e\u8868\u7ed3\u6784 settings.py \"\"\" Django settings for day15 project. Generated by 'django-admin startproject' using Django 3.2. For more information on this file, see https://docs.djangoproject.com/en/3.2/topics/settings/ For the full list of settings and their values, see https://docs.djangoproject.com/en/3.2/ref/settings/ \"\"\" from pathlib import Path # Build paths inside the project like this: BASE_DIR / 'subdir'. BASE_DIR = Path(__file__).resolve().parent.parent # Quick-start development settings - unsuitable for production # See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/ # SECURITY WARNING: keep the secret key used in production secret! SECRET_KEY = 'django-insecure-2uu-os!i!iapa7fsb-xe#v_1xyv+&(_c_d%nxt0d1l9*%-r60l' # SECURITY WARNING: don't run with debug turned on in production! DEBUG = True ALLOWED_HOSTS = [] # Application definition INSTALLED_APPS = [ # 'django.contrib.admin', # 'django.contrib.auth', # 'django.contrib.contenttypes', # 'django.contrib.sessions', # 'django.contrib.messages', 'django.contrib.staticfiles', 'rest_framework', 'api.apps.ApiConfig', ] MIDDLEWARE = [ 'django.middleware.security.SecurityMiddleware', # 'django.contrib.sessions.middleware.SessionMiddleware', 'django.middleware.common.CommonMiddleware', # 'django.middleware.csrf.CsrfViewMiddleware', # 'django.contrib.auth.middleware.AuthenticationMiddleware', # 'django.contrib.messages.middleware.MessageMiddleware', 'django.middleware.clickjacking.XFrameOptionsMiddleware', ] ROOT_URLCONF = 'day15.urls' TEMPLATES = [ { 'BACKEND': 'django.template.backends.django.DjangoTemplates', 'DIRS': [], 'APP_DIRS': True, 'OPTIONS': { 'context_processors': [ 'django.template.context_processors.debug', 'django.template.context_processors.request', # 'django.contrib.auth.context_processors.auth', # 'django.contrib.messages.context_processors.messages', ], }, }, ] WSGI_APPLICATION = 'day15.wsgi.application' # Database # https://docs.djangoproject.com/en/3.2/ref/settings/#databases DATABASES = { 'default': { 'ENGINE': 'django.db.backends.sqlite3', 'NAME': BASE_DIR / 'db.sqlite3', } } # Password validation # https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators AUTH_PASSWORD_VALIDATORS = [ { 'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator', }, { 'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator', }, { 'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator', }, { 'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator', }, ] # Internationalization # https://docs.djangoproject.com/en/3.2/topics/i18n/ LANGUAGE_CODE = 'en-us' TIME_ZONE = 'UTC' USE_I18N = True USE_L10N = True USE_TZ = True # Static files (CSS, JavaScript, Images) # https://docs.djangoproject.com/en/3.2/howto/static-files/ STATIC_URL = '/static/' # Default primary key field type # https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField' from rest_framework.request import Request REST_FRAMEWORK = { \"UNAUTHENTICATED_USER\": None } models.py from django.db import models class UserInfo(models.Model): username = models.CharField(verbose_name=\"\u7528\u6237\u540d\", max_length=32, db_index=True) password = models.CharField(verbose_name=\"\u5bc6\u7801\", max_length=64) token = models.CharField(verbose_name=\"TOKEN\", max_length=64, null=True, blank=True, db_index=True) class Blog(models.Model): category_choices = ((1, \"\u4e91\u8ba1\u7b97\"), (2, \"Python\u5168\u6808\"), (3, \"Go\u5f00\u53d1\")) category = models.IntegerField(verbose_name=\"\u5206\u7c7b\", choices=category_choices) image = models.CharField(verbose_name=\"\u5c01\u9762\", max_length=255) title = models.CharField(verbose_name=\"\u6807\u9898\", max_length=32) summary = models.CharField(verbose_name=\"\u7b80\u4ecb\", max_length=256) text = models.TextField(verbose_name=\"\u535a\u6587\") ctime = models.DateTimeField(verbose_name=\"\u521b\u5efa\u65f6\u95f4\", auto_now_add=True) creator = models.ForeignKey(verbose_name=\"\u521b\u5efa\u8005\", to=\"UserInfo\", on_delete=models.CASCADE) comment_count = models.PositiveIntegerField(verbose_name=\"\u8bc4\u8bba\u6570\", default=0) favor_count = models.PositiveIntegerField(verbose_name=\"\u8d5e\u6570\", default=0) class Favor(models.Model): \"\"\" \u8d5e \"\"\" blog = models.ForeignKey(verbose_name=\"\u535a\u5ba2\", to=\"Blog\", on_delete=models.CASCADE) user = models.ForeignKey(verbose_name=\"\u7528\u6237\", to=\"UserInfo\", on_delete=models.CASCADE) create_datetime = models.DateTimeField(verbose_name=\"\u521b\u5efa\u65f6\u95f4\", auto_now_add=True) class Meta: constraints = [ models.UniqueConstraint(fields=['blog', 'user'], name='uni_favor_blog_user') ] class Comment(models.Model): \"\"\" \u8bc4\u8bba\u8868 \"\"\" blog = models.ForeignKey(verbose_name=\"\u535a\u5ba2\", to=\"Blog\", on_delete=models.CASCADE) user = models.ForeignKey(verbose_name=\"\u7528\u6237\", to=\"UserInfo\", on_delete=models.CASCADE) content = models.CharField(verbose_name=\"\u5185\u5bb9\", max_length=150) create_datetime = models.DateTimeField(verbose_name=\"\u521b\u5efa\u65f6\u95f4\", auto_now_add=True) urls.py from django.urls import path from api import views urlpatterns = [ # path('admin/', admin.site.urls), # path('db/', views.db), path('api/blog/', views.BlogView.as_view()), path('api/blog/<int:pk>/', views.BlogDetailView.as_view()), path('api/comment/<int:blog_id>/', views.CommentView.as_view()), path('api/register/', views.RegisterView.as_view()), path('api/login/',views.LoginView.as_view()), path('api/favor/',views.FavorView.as_view()), path('api/cancelfavor/',views.CancelFavorView.as_view()), ] views.py from django.shortcuts import render, HttpResponse from api import models from rest_framework.request import Request from rest_framework.views import APIView from rest_framework import serializers from rest_framework.response import Response from ext.hook import NbHookSerializer from rest_framework import exceptions import uuid from ext.auth import BlogAuthentication, NoAuthentication ext.py \u251c\u2500\u2500 auth.py \u2514\u2500\u2500 hook.py auth.py from rest_framework.authentication import BaseAuthentication from api import models from rest_framework import exceptions class BlogAuthentication(BaseAuthentication): def authenticate(self, request): \"\"\" Authenticate the request and return a two-tuple of (user, token). \"\"\" token = request.query_params.get('token') if not token: return instance = models.UserInfo.objects.filter(token=token).first() if not instance: return return instance, token def authenticate_header(self, request): \"\"\" Return a string to be used as the value of the `WWW-Authenticate` header in a `401 Unauthenticated` response, or `None` if the authentication scheme should return `403 Permission Denied` responses. \"\"\" # \u8ba4\u8bc1\u5931\u8d25\u65f6\uff0c\u54cd\u5e94\u5934\u4e0d\u518d\u662f403\uff0c\u54cd\u5e94\u5934\u53d8\u6210401 return \"API\" class NoAuthentication(BaseAuthentication): def authenticate(self, request): \"\"\" Authenticate the request and return a two-tuple of (user, token). \"\"\" raise exceptions.AuthenticationFailed({\"status\": False, \"detail\": \"\u8ba4\u8bc1\u5931\u8d25(NoAuthentication)\"}) def authenticate_header(self, request): \"\"\" Return a string to be used as the value of the `WWW-Authenticate` header in a `401 Unauthenticated` response, or `None` if the authentication scheme should return `403 Permission Denied` responses. \"\"\" # \u8ba4\u8bc1\u5931\u8d25\u65f6\uff0c\u54cd\u5e94\u5934\u4e0d\u518d\u662f403\uff0c\u54cd\u5e94\u5934\u53d8\u6210401 return \"API\" hook.py from collections import OrderedDict from rest_framework.fields import SkipField from rest_framework.relations import PKOnlyObject class NbHookSerializer(object): def to_representation(self, instance): ret = OrderedDict() fields = self._readable_fields for field in fields: if hasattr(self, 'nb_%s' % field.field_name): value = getattr(self, 'nb_%s' % field.field_name)(instance) ret[field.field_name] = value else: try: attribute = field.get_attribute(instance) except SkipField: continue check_for_none = attribute.pk if isinstance(attribute, PKOnlyObject) else attribute if check_for_none is None: ret[field.field_name] = None else: ret[field.field_name] = field.to_representation(attribute) return ret 4.\u535a\u5ba2\u5217\u8868\u5c55\u793a\u548c\u65b0\u5efa\u6587\u7ae0 \"\"\"\u83b7\u53d6\u535a\u5ba2\u5217\u8868\"\"\" class BlogUserSerializers(serializers.ModelSerializer): class Meta: model = models.UserInfo fields = [\"id\", \"username\"] class BlogSerializers(NbHookSerializer, serializers.ModelSerializer): ctime = serializers.DateTimeField(format=\"%Y-%m-%d\", read_only=True) creator = BlogUserSerializers(read_only=True) class Meta: model = models.Blog fields = ['id', \"category\", \"image\", \"title\", \"text\", \"summary\", \"ctime\", \"comment_count\", \"favor_count\", \"creator\"] extra_kwargs = { \"comment_count\": {\"read_only\": True}, \"favor_count\": {\"read_only\": True}, \"text\": {\"write_only\": True}, } def nb_category(self, obj): return obj.get_category_display() class BlogView(APIView): authentication_classes = [BlogAuthentication, ] def get(self, request, *args, **kwargs): \"\"\" \u535a\u5ba2\u5217\u8868 \"\"\" # 1.\u8bfb\u53d6\u6570\u636e\u5e93\u4e2d\u7684\u535a\u5ba2\u4fe1\u606f queryset = models.Blog.objects.all().order_by(\"-id\") # 2.\u5e8f\u5217\u5316 ser = BlogSerializers(instance=queryset, many=True) # 3.\u8fd4\u56de context = {\"code\": 1000, 'data': ser.data} return Response(context) def post(self, request): if not request.user: return Response({\"code\": 3000, 'error': \"\u8ba4\u8bc1\u5931\u8d25\"}) ser = BlogSerializers(data=request.data) if not ser.is_valid(): return Response({\"code\": 1002, 'error': \"\u6821\u9a8c\u5931\u8d25\", 'detail': ser.errors}) ser.save(creator=request.user) return Response({\"code\": 1000, \"data\": ser.data}) \u5d4c\u5957\u4e24\u4e2a\u5e8f\u5217\u5316\u5668\u7c7b \u5bf9creator\u4fe1\u606f\u7684\u5e8f\u5217\u5316 \u5bf9\u535a\u5ba2\u4fe1\u606f\u7684\u5e8f\u5217\u5316 \u8bfb\u53d6\u535a\u5ba2\u5217\u8868(get)\u548c\u65b0\u5efa\u535a\u5ba2(post)\u7684\u529f\u80fd\u653e\u5728\u4e00\u4e2a\u89c6\u56fe\u7c7b\u4e2d \u5728postman\u4e2d\u6d4b\u8bd5\uff1a \u67e5\u770b\u535a\u5ba2\u5217\u8868 { \"code\": 1000, \"data\": [ { \"id\": 13, \"category\": \"Python\u5168\u6808\", \"image\": \"xxx.jpg\", \"title\": \"title\", \"summary\": \"summary\", \"ctime\": \"2022-10-01\", \"comment_count\": 0, \"favor_count\": 0, \"creator\": { \"id\": 1, \"username\": \"wupeiqi\" } }, { \"id\": 12, \"category\": \"Python\u5168\u6808\", \"image\": \"xxx.jpg\", \"title\": \"title\", \"summary\": \"summary\", \"ctime\": \"2022-10-01\", \"comment_count\": 0, \"favor_count\": 0, \"creator\": { \"id\": 1, \"username\": \"wupeiqi\" } }, ] } \u65b0\u5efa\u535a\u5ba2 http://127.0.0.1:8000/api/blog/?token=6622d344-abea-4a71-9605-3635e4f13f3f { \"code\": 1000, \"data\": { \"id\": 14, \"category\": \"Python\u5168\u6808\", \"image\": \"xxx.jpg\", \"title\": \"title\", \"summary\": \"summary\", \"ctime\": \"2022-10-01\", \"comment_count\": 0, \"favor_count\": 0, \"creator\": { \"id\": 1, \"username\": \"wupeiqi\" } } } 5.\u535a\u5ba2\u8be6\u7ec6 class BlogDetailSerializer(serializers.ModelSerializer): category = serializers.CharField(source=\"get_category_display\") ctime = serializers.DateTimeField(format=\"%Y-%m-%d\") creator = serializers.CharField(source='creator.username') class Meta: model = models.Blog fields = \"__all__\" class BlogDetailView(APIView): def get(self, request, *args, **kwargs): # \u83b7\u53d6id pk = kwargs.get('pk') # \u6839\u636eid\u83b7\u53d6\u5bf9\u8c61 instance = models.Blog.objects.filter(id=pk).first() if not instance: return Response({\"status\": False, \"detail\": None}) ser = BlogDetailSerializer(instance=instance) context = {\"status\": True, \"data\": ser.data} return Response(context) \u67e5\u770b\u54ea\u4e00\u7247\u535a\u5ba2\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u535a\u5ba2id\u7684\u53c2\u6570\u5728url\u4e2d\u4f20\u9012 http://127.0.0.1:8000/api/blog/1/ \u53c2\u8003\u8def\u7531\u4e2d\u53c2\u6570\u9884\u7559\u7684\u4f4d\u7f6e path('api/blog/<int:pk>/', views.BlogDetailView.as_view()), \u5728postman\u4e2d\u6d4b\u8bd5\uff1a http://127.0.0.1:8000/api/blog/1/ { \"status\": true, \"data\": { \"id\": 1, \"category\": \"\u4e91\u8ba1\u7b97\", \"ctime\": \"2022-10-01\", \"creator\": \"wupeiqi\", \"image\": \"xxxx/xxxxx.png\", \"title\": \"\u90d1\u7ecf\u7406\", \"summary\": \"....\", \"text\": \"\u5361\u5c01\u5efa\u65f6\u4ee3\uff1bif\u53ef\u7ed3\u6848\u65f6\uff1b\u4e86\u591a\u5f00\u51e0\u4efd\uff1b\u57c3\u91cc\u514b\u68ee\u7684\u673a\u623f\", \"comment_count\": 0, \"favor_count\": 0 } } 6.\u8bc4\u8bba\u5217\u8868\u4e0e\u53d1\u5e03\u8bc4\u8bba \u540c\u6837\u662f\u5c06\u4e24\u4e2a\u529f\u80fd\u5199\u5728\u540c\u4e00\u4e2a\u89c6\u56fe\u7c7b\u4e2d \u8bc4\u8bba\u5217\u8868(get) \u53d1\u5e03\u8bc4\u8bba(post)\uff0c\u53d1\u5e03\u8bc4\u8bba\u8981\u6c42\u901a\u8fc7\u8ba4\u8bc1\u7ec4\u4ef6\uff0c\uff08token\uff09 class CommentSerializer(NbHookSerializer, serializers.ModelSerializer): class Meta: model = models.Comment fields = ['id', 'content', 'user'] extra_kwargs = { \"id\": {\"read_only\": True}, \"user\": {\"read_only\": True}, } def nb_user(self, obj): return obj.user.username class CommentView(APIView): authentication_classes = [BlogAuthentication] def get(self, request, *args, **kwargs): \"\"\" \u8bc4\u8bba\u5217\u8868\"\"\" blog_id = kwargs.get('blog_id') print(blog_id) queryset = models.Comment.objects.filter(blog_id=blog_id) # \u518d\u6b21\u5e8f\u5217\u5316 ser = CommentSerializer(instance=queryset, many=True) context = { \"status\": True, \"details\": ser.data } return Response(context) def post(self, request, *args, **kwargs): \"\"\" - \u8ba4\u8bc1\u6210\u529f\u4e4b\u540e\u624d\u80fd\u767b\u9646\uff0c\u8ba4\u8bc1\u7ec4\u4ef6\uff0c\u9a8c\u8bc1token - \u5199\u5728\u54ea\u4e2a\u4f4d\u7f6e\uff1f \"\"\" \"\"\" \u53d1\u5e03\u8bc4\u8bba\uff0c\u540c\u65f6\u643a\u5e26blog_id url\u4e2d /api/comment/1/ \u8bf7\u6c42\u4f53\u4e2d {\"content\":\"\u535a\u5ba2\u6b63\u6587\u5185\u5bb9\"} \"\"\" blog_id = kwargs.get('blog_id') # \u9a8c\u8bc1\u7528\u6237\u662f\u5426\u5df2\u767b\u9646 if not request.user: return Response({\"status\": False, \"detail\": \"\u8bf7\u767b\u9646\u540e\u518d\u8bc4\u8bba\"}) blog_obj = models.Blog.objects.filter(id=blog_id).first() if not blog_obj: return Response({\"status\": False, \"detail\": \"\u535a\u5ba2\u4e0d\u5b58\u5728\"}) ser = CommentSerializer(data=request.data) if not ser.is_valid(): return Response({\"status\": False, \"detail\": \"\u6821\u9a8c\u5931\u8d25\", 'errors': ser.errors}) ser.save(blog=blog_obj, user=request.user) return Response({\"status\": True, \"detail\": \"\u8bc4\u8bba\u53d1\u5e03\u6210\u529f\", 'data': ser.data}) \u5728postman\u4e2d\u7684\u6d4b\u8bd5 \u5bf9\u4e8e\u67e5\u770b\u8bc4\u8bba\uff0c\u9700\u8981\u4f20\u5165\u535a\u5ba2id\uff0c\u6765\u67e5\u8be2\u5177\u4f53\u662f\u54ea\u4e00\u7bc7\u535a\u5ba2\u7684\u8bc4\u8bba\u4fe1\u606f url \u4e2d\u7684\u53c2\u6570\u9884\u7559 path('api/comment/<int:blog_id>/', views.CommentView.as_view()), \u67e5\u770b\u8bc4\u8bba http://127.0.0.1:8000/api/comment/1/ { \"status\": true, \"details\": [ { \"id\": 1, \"content\": \"x1asdf\", \"user\": \"wupeiqi\" }, { \"id\": 2, \"content\": \"x1ffff\", \"user\": \"cxr\" }, { \"id\": 3, \"content\": \"nice\", \"user\": \"wupeiqi\" }, { \"id\": 4, \"content\": \"nice\", \"user\": \"wupeiqi\" } ] } \u53d1\u5e03\u8bc4\u8bba http://127.0.0.1:8000/api/comment/1/?token=6622d344-abea-4a71-9605-3635e4f13f3f { \"status\": true, \"detail\": \"\u8bc4\u8bba\u53d1\u5e03\u6210\u529f\", \"data\": { \"id\": 5, \"content\": \"nice\", \"user\": \"wupeiqi\" } } 7.\u6ce8\u518c class RegisterSerializer(serializers.ModelSerializer): confirm_password = serializers.CharField(write_only=True) class Meta: model = models.UserInfo fields = ['id', 'username', 'password', 'confirm_password'] extra_kwargs = { 'password': {\"write_only\": True}, 'id': {\"read_only\": True} } \"\"\" def validate_password(self, value): return value \"\"\" def validate_confirm_password(self, value): password = self.initial_data.get('password') if password != value: raise exceptions.ValidationError(\"\u5bc6\u7801\u4e0d\u4e00\u81f4\") return value class RegisterView(APIView): def post(self, request): \"\"\" \u63d0\u4ea4\u6570\u636e - username : xx - password : xx - confirm_password :xx \"\"\" ser = RegisterSerializer(data=request.data) if ser.is_valid(): confirm_password = ser.validated_data.pop(\"confirm_password\") ser.save() return Response({\"status\": True, \"errors\": None, \"detail\": ser.data}) else: return Response({\"status\": False, \"errors\": \"\u6ce8\u518c\u5931\u8d25\", \"detail\": ser.errors}) \u5728postman\u4e2d\u7684\u6d4b\u8bd5 http://127.0.0.1:8000/api/register/ {\"username\":\"uic\",\"password\":\"123\",\"confirm_password\":\"123\"} { \"status\": true, \"errors\": null, \"detail\": { \"id\": 9, \"username\": \"uic\" } } 8.\u767b\u9646 class LoginSerializer(serializers.ModelSerializer): class Meta: model = models.UserInfo fields = ['username', 'password'] class LoginView(APIView): def post(self, request): request.data # {\"username\":xx,\"password\":xxx} ser = LoginSerializer(data=request.data) if not ser.is_valid(): return Response({\"status\": False, \"detail\": \"login unsuccess\"}) instance = models.UserInfo.objects.filter(**ser.validated_data).first() if not instance: return Response({\"status\": False, \"detail\": \"\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef\"}) token = str(uuid.uuid4()) instance.token = token instance.save() return Response({\"status\": True, \"detail\": {\"login\": \"\u767b\u9646\u6210\u529f\", \"token\": token}}) \u5728postman\u4e2d\u7684\u6d4b\u8bd5 http://127.0.0.1:8000/api/login/ { \"status\": true, \"detail\": { \"login\": \"\u767b\u9646\u6210\u529f\", \"token\": \"f08618aa-2a4e-4d7d-8216-e544c3483250\" } } 9.\u70b9\u8d5e class FavorSerializer(serializers.ModelSerializer): class Meta: model = models.Favor fields = ['blog'] class FavorView(APIView): \"\"\" - \u7ed9\u54ea\u7bc7\u535a\u5ba2\u70b9\u8d5e - \u70b9\u8d5e\u7684\u7528\u6237 - \u67e5\u8be2->\u4e0d\u5b58\u5728\u8d5e\u7684\u8bb0\u5f55->\u6dfb\u52a0 - \u5982\u679c\u5df2\u7ecf\u5b58\u5728\u8bb0\u5f55\uff0c\u4e0d\u8fdb\u884c\u589e\u52a0\u8d5e \"\"\" authentication_classes = [BlogAuthentication, NoAuthentication] def post(self, request): ser = FavorSerializer(data=request.data) if not ser.is_valid(): return Response({\"status\": False, \"detail\": \"\u6821\u9a8c\u5931\u8d25\", \"errors\": ser.errors}) # \u67e5\u8be2\uff0c\u5b58\u5728\u7684\u8bdd\u5c31\u4e0d\u518d\u70b9\u8d5e res = models.Favor.objects.filter(user=request.user, blog=ser.validated_data.get(\"blog\")).exists() if res: return Response({\"status\": False, \"detail\": \"\u5df2\u7ecf\u70b9\u8d5e\"}) # models.Favor.objects.filter(user=request.user, **ser.validated_data) ser.save(user=request.user) return Response({\"status\": True, \"data\": ser.data, \"detail\": \"\u70b9\u8d5e\u6210\u529f\"}) \u5728postman\u4e2d\u7684\u6d4b\u8bd5 http://127.0.0.1:8000/api/favor/?token=f08618aa-2a4e-4d7d-8216-e544c3483250 { \"status\": false, \"detail\": \"\u5df2\u7ecf\u70b9\u8d5e\" } 10.\u53d6\u6d88\u8d5e class CancelFavorSerializer(serializers.ModelSerializer): class Meta: model = models.Favor fields = ['blog'] class CancelFavorView(APIView): authentication_classes = [BlogAuthentication, NoAuthentication] def post(self, request): ser = CancelFavorSerializer(data=request.data) if not ser.is_valid(): return Response({\"status\": False, \"detail\": \"\u6821\u9a8c\u5931\u8d25\", \"errors\": ser.errors}) res = models.Favor.objects.filter(user=request.user, blog=ser.validated_data.get(\"blog\")).exists() if not res: return Response({\"status\": False, \"detail\": \"\u8fd8\u672a\u70b9\u8d5e\"}) models.Favor.objects.filter(blog=ser.validated_data.get(\"blog\"), user=request.user).delete() return Response({\"status\": True, \"detail\": \"\u70b9\u8d5e\u5df2\u53d6\u6d88\"}) \u5728postman\u4e2d\u7684\u6d4b\u8bd5 http://127.0.0.1:8000/api/cancelfavor/?token=f08618aa-2a4e-4d7d-8216-e544c3483250 { \"status\": true, \"detail\": \"\u70b9\u8d5e\u5df2\u53d6\u6d88\" } 11.\u6574\u4f53\u9879\u76ee\u7ed3\u6784 . \u251c\u2500\u2500 api \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 __pycache__ \u2502 \u2502 \u251c\u2500\u2500 __init__.cpython-310.pyc \u2502 \u2502 \u251c\u2500\u2500 apps.cpython-310.pyc \u2502 \u2502 \u251c\u2500\u2500 models.cpython-310.pyc \u2502 \u2502 \u2514\u2500\u2500 views.cpython-310.pyc \u2502 \u251c\u2500\u2500 admin.py \u2502 \u251c\u2500\u2500 apps.py \u2502 \u251c\u2500\u2500 migrations \u2502 \u2502 \u251c\u2500\u2500 0001_initial.py \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u2514\u2500\u2500 __pycache__ \u2502 \u2502 \u251c\u2500\u2500 0001_initial.cpython-310.pyc \u2502 \u2502 \u2514\u2500\u2500 __init__.cpython-310.pyc \u2502 \u251c\u2500\u2500 models.py \u2502 \u251c\u2500\u2500 tests.py \u2502 \u2514\u2500\u2500 views.py \u251c\u2500\u2500 day15 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 __pycache__ \u2502 \u2502 \u251c\u2500\u2500 __init__.cpython-310.pyc \u2502 \u2502 \u251c\u2500\u2500 settings.cpython-310.pyc \u2502 \u2502 \u251c\u2500\u2500 urls.cpython-310.pyc \u2502 \u2502 \u2514\u2500\u2500 wsgi.cpython-310.pyc \u2502 \u251c\u2500\u2500 asgi.py \u2502 \u251c\u2500\u2500 settings.py \u2502 \u251c\u2500\u2500 urls.py \u2502 \u2514\u2500\u2500 wsgi.py \u251c\u2500\u2500 db.sqlite3 \u251c\u2500\u2500 ext \u2502 \u251c\u2500\u2500 __pycache__ \u2502 \u2502 \u251c\u2500\u2500 auth.cpython-310.pyc \u2502 \u2502 \u2514\u2500\u2500 hook.cpython-310.pyc \u2502 \u251c\u2500\u2500 auth.py \u2502 \u2514\u2500\u2500 hook.py \u2514\u2500\u2500 manage.py","title":"6.restframework\uff1ablog"},{"location":"Django/restframework_practice/restframework_blog/#6restframeworkblog","text":"","title":"6.restframework\uff1ablog"},{"location":"Django/restframework_practice/restframework_blog/#_1","text":"class BlogSerializer(NbHookSerializer, serializers.ModelSerializer): # category = serializers.CharField(source=\"get_category_display\") ctime = serializers.DateTimeField(format=\"%Y-%m-%d\", read_only=True) # creator = serializers.CharField(source='creator.username', read_only=True) # creator_info = serializers.SerializerMethodField() # creator_info_class = BlogInfoSerializer() class Meta: model = models.Blog # fields = ['category', 'image', 'title', 'summary', 'text', 'ctime', 'creator', 'creator_name', 'creator_info'] fields = ['id', \"category\", \"image\", \"title\", \"text\", \"summary\", \"ctime\", \"comment_count\", \"favor_count\", \"creator\"] extra_kwargs = { \"comment_count\": {\"read_only\": True}, \"favor_count\": {\"read_only\": True}, 'text': {\"write_only\": True}, # 'creator':{\"read_only\":True} } # \u94a9\u5b50\u65b9\u6cd5 \"\"\" def get_creator_info(self, obj): # obj \u6b64\u65f6\u662fBlog Object # \u4e0eclass Meta\u4e2d\u9996\u5148\u58f0\u660e\u7684model\u76f8\u5173 print(obj) # Blog object (2) context = { \"creator_id\": obj.creator.id, \"creator_name\": obj.creator.username } return context \"\"\" def nb_category(self, obj): return obj.get_category_display class BlogView(APIView): authentication_classes = [BlogAuthentication, ] def get(self, request, *args, **kwargs): queryset = models.Blog.objects.all().order_by('-id') ser = BlogSerializer(instance=queryset, many=True) context = {\"status\": True, \"data\": ser.data} return Response(context) def post(self, request): \"\"\"\u65b0\u5efa\u535a\u5ba2\"\"\" if not request.user: return Response({\"status\": False, \"detail\": \"\u672a\u767b\u5f55\"}) ser = BlogSerializer(data=request.data) if not ser.is_valid(): return Response({\"status\": False, \"detail\": \"\u6821\u9a8c\u5931\u8d25\", \"errors\": ser.errors}) ser.save(creator=request.user) return Response({\"status\": True, \"detail\": \"\u65b0\u5efa\u535a\u5ba2\u6210\u529f\", \"data\": ser.data}) \u5e94\u8be5\u662f\u4e2d\u95f4\u4ef6\u62e6\u622a [01/Oct/2022 09:05:32] \"POST /api/blog/?token=6622d344-abea-4a71-9605-3635e4f13f3f HTTP/1.1\" 200 89 { \"status\": false, \"detail\": \"\u6821\u9a8c\u5931\u8d25\", \"errors\": { \"creator\": [ \"This field is required.\" ] } }","title":"\u95ee\u9898\uff1a"},{"location":"Django/restframework_practice/restframework_blog/#1","text":"\u57fa\u4e8edjangorestframework\u7f16\u5199\u7684\u4e00\u5957\u7b80\u5355\u7684restAPI\uff0c\u5b8c\u6210\u4e86\u535a\u5ba2\u7cfb\u7edf\u7684\u6838\u5fc3\u529f\u80fd \u751f\u6210\u6d4b\u8bd5\u6570\u636e\u7684 scripts def db(request): v1 = models.UserInfo.objects.create(username=\"wupeiqi\", password='123') v2 = models.UserInfo.objects.create(username=\"cxr\", password='123') models.Blog.objects.create( category=1, image=\"xxxx/xxxxx.png\", title=\"\u90d1\u7ecf\u7406\", summary=\"....\", text=\"\u5361\u5c01\u5efa\u65f6\u4ee3\uff1bif\u53ef\u7ed3\u6848\u65f6\uff1b\u4e86\u591a\u5f00\u51e0\u4efd\uff1b\u57c3\u91cc\u514b\u68ee\u7684\u673a\u623f\", creator=v1 ) models.Blog.objects.create( category=2, image=\"xxxx/xxxxx.png\", title=\"\u9707\u60ca\u4e86\", summary=\"....\", text=\"\u5361\u5c01\u6210\u578b\u5982\u5c45\u7136\u584c\u65b9\u4e86\u623f\", creator=v2 ) models.Comment.objects.create(content='x1asdf', blog_id=1, user_id=1) models.Comment.objects.create(content='x1ffff', blog_id=1, user_id=2) return HttpResponse(\"\u6210\u529f\")","title":"1. \u524d\u620f"},{"location":"Django/restframework_practice/restframework_blog/#2","text":"settings.py \"\"\" Django settings for day15 project. Generated by 'django-admin startproject' using Django 3.2. For more information on this file, see https://docs.djangoproject.com/en/3.2/topics/settings/ For the full list of settings and their values, see https://docs.djangoproject.com/en/3.2/ref/settings/ \"\"\" from pathlib import Path # Build paths inside the project like this: BASE_DIR / 'subdir'. BASE_DIR = Path(__file__).resolve().parent.parent # Quick-start development settings - unsuitable for production # See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/ # SECURITY WARNING: keep the secret key used in production secret! SECRET_KEY = 'django-insecure-2uu-os!i!iapa7fsb-xe#v_1xyv+&(_c_d%nxt0d1l9*%-r60l' # SECURITY WARNING: don't run with debug turned on in production! DEBUG = True ALLOWED_HOSTS = [] # Application definition INSTALLED_APPS = [ # 'django.contrib.admin', # 'django.contrib.auth', # 'django.contrib.contenttypes', # 'django.contrib.sessions', # 'django.contrib.messages', 'django.contrib.staticfiles', 'rest_framework', 'api.apps.ApiConfig', ] MIDDLEWARE = [ 'django.middleware.security.SecurityMiddleware', # 'django.contrib.sessions.middleware.SessionMiddleware', 'django.middleware.common.CommonMiddleware', # 'django.middleware.csrf.CsrfViewMiddleware', # 'django.contrib.auth.middleware.AuthenticationMiddleware', # 'django.contrib.messages.middleware.MessageMiddleware', 'django.middleware.clickjacking.XFrameOptionsMiddleware', ] ROOT_URLCONF = 'day15.urls' TEMPLATES = [ { 'BACKEND': 'django.template.backends.django.DjangoTemplates', 'DIRS': [], 'APP_DIRS': True, 'OPTIONS': { 'context_processors': [ 'django.template.context_processors.debug', 'django.template.context_processors.request', # 'django.contrib.auth.context_processors.auth', # 'django.contrib.messages.context_processors.messages', ], }, }, ] WSGI_APPLICATION = 'day15.wsgi.application' # Database # https://docs.djangoproject.com/en/3.2/ref/settings/#databases DATABASES = { 'default': { 'ENGINE': 'django.db.backends.sqlite3', 'NAME': BASE_DIR / 'db.sqlite3', } } # Password validation # https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators AUTH_PASSWORD_VALIDATORS = [ { 'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator', }, { 'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator', }, { 'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator', }, { 'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator', }, ] # Internationalization # https://docs.djangoproject.com/en/3.2/topics/i18n/ LANGUAGE_CODE = 'en-us' TIME_ZONE = 'UTC' USE_I18N = True USE_L10N = True USE_TZ = True # Static files (CSS, JavaScript, Images) # https://docs.djangoproject.com/en/3.2/howto/static-files/ STATIC_URL = '/static/' # Default primary key field type # https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField' from rest_framework.request import Request REST_FRAMEWORK = { \"UNAUTHENTICATED_USER\": None } models.py from django.db import models class UserInfo(models.Model): username = models.CharField(verbose_name=\"\u7528\u6237\u540d\", max_length=32, db_index=True) password = models.CharField(verbose_name=\"\u5bc6\u7801\", max_length=64) token = models.CharField(verbose_name=\"TOKEN\", max_length=64, null=True, blank=True, db_index=True) class Blog(models.Model): category_choices = ((1, \"\u4e91\u8ba1\u7b97\"), (2, \"Python\u5168\u6808\"), (3, \"Go\u5f00\u53d1\")) category = models.IntegerField(verbose_name=\"\u5206\u7c7b\", choices=category_choices) image = models.CharField(verbose_name=\"\u5c01\u9762\", max_length=255) title = models.CharField(verbose_name=\"\u6807\u9898\", max_length=32) summary = models.CharField(verbose_name=\"\u7b80\u4ecb\", max_length=256) text = models.TextField(verbose_name=\"\u535a\u6587\") ctime = models.DateTimeField(verbose_name=\"\u521b\u5efa\u65f6\u95f4\", auto_now_add=True) creator = models.ForeignKey(verbose_name=\"\u521b\u5efa\u8005\", to=\"UserInfo\", on_delete=models.CASCADE) comment_count = models.PositiveIntegerField(verbose_name=\"\u8bc4\u8bba\u6570\", default=0) favor_count = models.PositiveIntegerField(verbose_name=\"\u8d5e\u6570\", default=0) class Favor(models.Model): \"\"\" \u8d5e \"\"\" blog = models.ForeignKey(verbose_name=\"\u535a\u5ba2\", to=\"Blog\", on_delete=models.CASCADE) user = models.ForeignKey(verbose_name=\"\u7528\u6237\", to=\"UserInfo\", on_delete=models.CASCADE) create_datetime = models.DateTimeField(verbose_name=\"\u521b\u5efa\u65f6\u95f4\", auto_now_add=True) class Meta: constraints = [ models.UniqueConstraint(fields=['blog', 'user'], name='uni_favor_blog_user') ] class Comment(models.Model): \"\"\" \u8bc4\u8bba\u8868 \"\"\" blog = models.ForeignKey(verbose_name=\"\u535a\u5ba2\", to=\"Blog\", on_delete=models.CASCADE) user = models.ForeignKey(verbose_name=\"\u7528\u6237\", to=\"UserInfo\", on_delete=models.CASCADE) content = models.CharField(verbose_name=\"\u5185\u5bb9\", max_length=150) create_datetime = models.DateTimeField(verbose_name=\"\u521b\u5efa\u65f6\u95f4\", auto_now_add=True) urls.py from django.urls import path from api import views urlpatterns = [ # path('admin/', admin.site.urls), # path('db/', views.db), path('api/blog/', views.BlogView.as_view()), path('api/blog/<int:pk>/', views.BlogDetailView.as_view()), path('api/comment/<int:blog_id>/', views.CommentView.as_view()), path('api/register/', views.RegisterView.as_view()), path('api/login/',views.LoginView.as_view()), path('api/favor/',views.FavorView.as_view()), path('api/cancelfavor/',views.CancelFavorView.as_view()), ] views.py from django.shortcuts import render, HttpResponse from api import models from rest_framework.request import Request from rest_framework.views import APIView from rest_framework import serializers from rest_framework.response import Response from ext.hook import NbHookSerializer from rest_framework import exceptions import uuid from ext.auth import BlogAuthentication, NoAuthentication ext.py \u251c\u2500\u2500 auth.py \u2514\u2500\u2500 hook.py auth.py from rest_framework.authentication import BaseAuthentication from api import models from rest_framework import exceptions class BlogAuthentication(BaseAuthentication): def authenticate(self, request): \"\"\" Authenticate the request and return a two-tuple of (user, token). \"\"\" token = request.query_params.get('token') if not token: return instance = models.UserInfo.objects.filter(token=token).first() if not instance: return return instance, token def authenticate_header(self, request): \"\"\" Return a string to be used as the value of the `WWW-Authenticate` header in a `401 Unauthenticated` response, or `None` if the authentication scheme should return `403 Permission Denied` responses. \"\"\" # \u8ba4\u8bc1\u5931\u8d25\u65f6\uff0c\u54cd\u5e94\u5934\u4e0d\u518d\u662f403\uff0c\u54cd\u5e94\u5934\u53d8\u6210401 return \"API\" class NoAuthentication(BaseAuthentication): def authenticate(self, request): \"\"\" Authenticate the request and return a two-tuple of (user, token). \"\"\" raise exceptions.AuthenticationFailed({\"status\": False, \"detail\": \"\u8ba4\u8bc1\u5931\u8d25(NoAuthentication)\"}) def authenticate_header(self, request): \"\"\" Return a string to be used as the value of the `WWW-Authenticate` header in a `401 Unauthenticated` response, or `None` if the authentication scheme should return `403 Permission Denied` responses. \"\"\" # \u8ba4\u8bc1\u5931\u8d25\u65f6\uff0c\u54cd\u5e94\u5934\u4e0d\u518d\u662f403\uff0c\u54cd\u5e94\u5934\u53d8\u6210401 return \"API\" hook.py from collections import OrderedDict from rest_framework.fields import SkipField from rest_framework.relations import PKOnlyObject class NbHookSerializer(object): def to_representation(self, instance): ret = OrderedDict() fields = self._readable_fields for field in fields: if hasattr(self, 'nb_%s' % field.field_name): value = getattr(self, 'nb_%s' % field.field_name)(instance) ret[field.field_name] = value else: try: attribute = field.get_attribute(instance) except SkipField: continue check_for_none = attribute.pk if isinstance(attribute, PKOnlyObject) else attribute if check_for_none is None: ret[field.field_name] = None else: ret[field.field_name] = field.to_representation(attribute) return ret","title":"2.\u914d\u7f6e\u4fe1\u606f\u4e0e\u8868\u7ed3\u6784"},{"location":"Django/restframework_practice/restframework_blog/#4","text":"\"\"\"\u83b7\u53d6\u535a\u5ba2\u5217\u8868\"\"\" class BlogUserSerializers(serializers.ModelSerializer): class Meta: model = models.UserInfo fields = [\"id\", \"username\"] class BlogSerializers(NbHookSerializer, serializers.ModelSerializer): ctime = serializers.DateTimeField(format=\"%Y-%m-%d\", read_only=True) creator = BlogUserSerializers(read_only=True) class Meta: model = models.Blog fields = ['id', \"category\", \"image\", \"title\", \"text\", \"summary\", \"ctime\", \"comment_count\", \"favor_count\", \"creator\"] extra_kwargs = { \"comment_count\": {\"read_only\": True}, \"favor_count\": {\"read_only\": True}, \"text\": {\"write_only\": True}, } def nb_category(self, obj): return obj.get_category_display() class BlogView(APIView): authentication_classes = [BlogAuthentication, ] def get(self, request, *args, **kwargs): \"\"\" \u535a\u5ba2\u5217\u8868 \"\"\" # 1.\u8bfb\u53d6\u6570\u636e\u5e93\u4e2d\u7684\u535a\u5ba2\u4fe1\u606f queryset = models.Blog.objects.all().order_by(\"-id\") # 2.\u5e8f\u5217\u5316 ser = BlogSerializers(instance=queryset, many=True) # 3.\u8fd4\u56de context = {\"code\": 1000, 'data': ser.data} return Response(context) def post(self, request): if not request.user: return Response({\"code\": 3000, 'error': \"\u8ba4\u8bc1\u5931\u8d25\"}) ser = BlogSerializers(data=request.data) if not ser.is_valid(): return Response({\"code\": 1002, 'error': \"\u6821\u9a8c\u5931\u8d25\", 'detail': ser.errors}) ser.save(creator=request.user) return Response({\"code\": 1000, \"data\": ser.data}) \u5d4c\u5957\u4e24\u4e2a\u5e8f\u5217\u5316\u5668\u7c7b \u5bf9creator\u4fe1\u606f\u7684\u5e8f\u5217\u5316 \u5bf9\u535a\u5ba2\u4fe1\u606f\u7684\u5e8f\u5217\u5316 \u8bfb\u53d6\u535a\u5ba2\u5217\u8868(get)\u548c\u65b0\u5efa\u535a\u5ba2(post)\u7684\u529f\u80fd\u653e\u5728\u4e00\u4e2a\u89c6\u56fe\u7c7b\u4e2d \u5728postman\u4e2d\u6d4b\u8bd5\uff1a \u67e5\u770b\u535a\u5ba2\u5217\u8868 { \"code\": 1000, \"data\": [ { \"id\": 13, \"category\": \"Python\u5168\u6808\", \"image\": \"xxx.jpg\", \"title\": \"title\", \"summary\": \"summary\", \"ctime\": \"2022-10-01\", \"comment_count\": 0, \"favor_count\": 0, \"creator\": { \"id\": 1, \"username\": \"wupeiqi\" } }, { \"id\": 12, \"category\": \"Python\u5168\u6808\", \"image\": \"xxx.jpg\", \"title\": \"title\", \"summary\": \"summary\", \"ctime\": \"2022-10-01\", \"comment_count\": 0, \"favor_count\": 0, \"creator\": { \"id\": 1, \"username\": \"wupeiqi\" } }, ] } \u65b0\u5efa\u535a\u5ba2 http://127.0.0.1:8000/api/blog/?token=6622d344-abea-4a71-9605-3635e4f13f3f { \"code\": 1000, \"data\": { \"id\": 14, \"category\": \"Python\u5168\u6808\", \"image\": \"xxx.jpg\", \"title\": \"title\", \"summary\": \"summary\", \"ctime\": \"2022-10-01\", \"comment_count\": 0, \"favor_count\": 0, \"creator\": { \"id\": 1, \"username\": \"wupeiqi\" } } }","title":"4.\u535a\u5ba2\u5217\u8868\u5c55\u793a\u548c\u65b0\u5efa\u6587\u7ae0"},{"location":"Django/restframework_practice/restframework_blog/#5","text":"class BlogDetailSerializer(serializers.ModelSerializer): category = serializers.CharField(source=\"get_category_display\") ctime = serializers.DateTimeField(format=\"%Y-%m-%d\") creator = serializers.CharField(source='creator.username') class Meta: model = models.Blog fields = \"__all__\" class BlogDetailView(APIView): def get(self, request, *args, **kwargs): # \u83b7\u53d6id pk = kwargs.get('pk') # \u6839\u636eid\u83b7\u53d6\u5bf9\u8c61 instance = models.Blog.objects.filter(id=pk).first() if not instance: return Response({\"status\": False, \"detail\": None}) ser = BlogDetailSerializer(instance=instance) context = {\"status\": True, \"data\": ser.data} return Response(context) \u67e5\u770b\u54ea\u4e00\u7247\u535a\u5ba2\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u535a\u5ba2id\u7684\u53c2\u6570\u5728url\u4e2d\u4f20\u9012 http://127.0.0.1:8000/api/blog/1/ \u53c2\u8003\u8def\u7531\u4e2d\u53c2\u6570\u9884\u7559\u7684\u4f4d\u7f6e path('api/blog/<int:pk>/', views.BlogDetailView.as_view()), \u5728postman\u4e2d\u6d4b\u8bd5\uff1a http://127.0.0.1:8000/api/blog/1/ { \"status\": true, \"data\": { \"id\": 1, \"category\": \"\u4e91\u8ba1\u7b97\", \"ctime\": \"2022-10-01\", \"creator\": \"wupeiqi\", \"image\": \"xxxx/xxxxx.png\", \"title\": \"\u90d1\u7ecf\u7406\", \"summary\": \"....\", \"text\": \"\u5361\u5c01\u5efa\u65f6\u4ee3\uff1bif\u53ef\u7ed3\u6848\u65f6\uff1b\u4e86\u591a\u5f00\u51e0\u4efd\uff1b\u57c3\u91cc\u514b\u68ee\u7684\u673a\u623f\", \"comment_count\": 0, \"favor_count\": 0 } }","title":"5.\u535a\u5ba2\u8be6\u7ec6"},{"location":"Django/restframework_practice/restframework_blog/#6","text":"\u540c\u6837\u662f\u5c06\u4e24\u4e2a\u529f\u80fd\u5199\u5728\u540c\u4e00\u4e2a\u89c6\u56fe\u7c7b\u4e2d \u8bc4\u8bba\u5217\u8868(get) \u53d1\u5e03\u8bc4\u8bba(post)\uff0c\u53d1\u5e03\u8bc4\u8bba\u8981\u6c42\u901a\u8fc7\u8ba4\u8bc1\u7ec4\u4ef6\uff0c\uff08token\uff09 class CommentSerializer(NbHookSerializer, serializers.ModelSerializer): class Meta: model = models.Comment fields = ['id', 'content', 'user'] extra_kwargs = { \"id\": {\"read_only\": True}, \"user\": {\"read_only\": True}, } def nb_user(self, obj): return obj.user.username class CommentView(APIView): authentication_classes = [BlogAuthentication] def get(self, request, *args, **kwargs): \"\"\" \u8bc4\u8bba\u5217\u8868\"\"\" blog_id = kwargs.get('blog_id') print(blog_id) queryset = models.Comment.objects.filter(blog_id=blog_id) # \u518d\u6b21\u5e8f\u5217\u5316 ser = CommentSerializer(instance=queryset, many=True) context = { \"status\": True, \"details\": ser.data } return Response(context) def post(self, request, *args, **kwargs): \"\"\" - \u8ba4\u8bc1\u6210\u529f\u4e4b\u540e\u624d\u80fd\u767b\u9646\uff0c\u8ba4\u8bc1\u7ec4\u4ef6\uff0c\u9a8c\u8bc1token - \u5199\u5728\u54ea\u4e2a\u4f4d\u7f6e\uff1f \"\"\" \"\"\" \u53d1\u5e03\u8bc4\u8bba\uff0c\u540c\u65f6\u643a\u5e26blog_id url\u4e2d /api/comment/1/ \u8bf7\u6c42\u4f53\u4e2d {\"content\":\"\u535a\u5ba2\u6b63\u6587\u5185\u5bb9\"} \"\"\" blog_id = kwargs.get('blog_id') # \u9a8c\u8bc1\u7528\u6237\u662f\u5426\u5df2\u767b\u9646 if not request.user: return Response({\"status\": False, \"detail\": \"\u8bf7\u767b\u9646\u540e\u518d\u8bc4\u8bba\"}) blog_obj = models.Blog.objects.filter(id=blog_id).first() if not blog_obj: return Response({\"status\": False, \"detail\": \"\u535a\u5ba2\u4e0d\u5b58\u5728\"}) ser = CommentSerializer(data=request.data) if not ser.is_valid(): return Response({\"status\": False, \"detail\": \"\u6821\u9a8c\u5931\u8d25\", 'errors': ser.errors}) ser.save(blog=blog_obj, user=request.user) return Response({\"status\": True, \"detail\": \"\u8bc4\u8bba\u53d1\u5e03\u6210\u529f\", 'data': ser.data}) \u5728postman\u4e2d\u7684\u6d4b\u8bd5 \u5bf9\u4e8e\u67e5\u770b\u8bc4\u8bba\uff0c\u9700\u8981\u4f20\u5165\u535a\u5ba2id\uff0c\u6765\u67e5\u8be2\u5177\u4f53\u662f\u54ea\u4e00\u7bc7\u535a\u5ba2\u7684\u8bc4\u8bba\u4fe1\u606f url \u4e2d\u7684\u53c2\u6570\u9884\u7559 path('api/comment/<int:blog_id>/', views.CommentView.as_view()), \u67e5\u770b\u8bc4\u8bba http://127.0.0.1:8000/api/comment/1/ { \"status\": true, \"details\": [ { \"id\": 1, \"content\": \"x1asdf\", \"user\": \"wupeiqi\" }, { \"id\": 2, \"content\": \"x1ffff\", \"user\": \"cxr\" }, { \"id\": 3, \"content\": \"nice\", \"user\": \"wupeiqi\" }, { \"id\": 4, \"content\": \"nice\", \"user\": \"wupeiqi\" } ] } \u53d1\u5e03\u8bc4\u8bba http://127.0.0.1:8000/api/comment/1/?token=6622d344-abea-4a71-9605-3635e4f13f3f { \"status\": true, \"detail\": \"\u8bc4\u8bba\u53d1\u5e03\u6210\u529f\", \"data\": { \"id\": 5, \"content\": \"nice\", \"user\": \"wupeiqi\" } }","title":"6.\u8bc4\u8bba\u5217\u8868\u4e0e\u53d1\u5e03\u8bc4\u8bba"},{"location":"Django/restframework_practice/restframework_blog/#7","text":"class RegisterSerializer(serializers.ModelSerializer): confirm_password = serializers.CharField(write_only=True) class Meta: model = models.UserInfo fields = ['id', 'username', 'password', 'confirm_password'] extra_kwargs = { 'password': {\"write_only\": True}, 'id': {\"read_only\": True} } \"\"\" def validate_password(self, value): return value \"\"\" def validate_confirm_password(self, value): password = self.initial_data.get('password') if password != value: raise exceptions.ValidationError(\"\u5bc6\u7801\u4e0d\u4e00\u81f4\") return value class RegisterView(APIView): def post(self, request): \"\"\" \u63d0\u4ea4\u6570\u636e - username : xx - password : xx - confirm_password :xx \"\"\" ser = RegisterSerializer(data=request.data) if ser.is_valid(): confirm_password = ser.validated_data.pop(\"confirm_password\") ser.save() return Response({\"status\": True, \"errors\": None, \"detail\": ser.data}) else: return Response({\"status\": False, \"errors\": \"\u6ce8\u518c\u5931\u8d25\", \"detail\": ser.errors}) \u5728postman\u4e2d\u7684\u6d4b\u8bd5 http://127.0.0.1:8000/api/register/ {\"username\":\"uic\",\"password\":\"123\",\"confirm_password\":\"123\"} { \"status\": true, \"errors\": null, \"detail\": { \"id\": 9, \"username\": \"uic\" } }","title":"7.\u6ce8\u518c"},{"location":"Django/restframework_practice/restframework_blog/#8","text":"class LoginSerializer(serializers.ModelSerializer): class Meta: model = models.UserInfo fields = ['username', 'password'] class LoginView(APIView): def post(self, request): request.data # {\"username\":xx,\"password\":xxx} ser = LoginSerializer(data=request.data) if not ser.is_valid(): return Response({\"status\": False, \"detail\": \"login unsuccess\"}) instance = models.UserInfo.objects.filter(**ser.validated_data).first() if not instance: return Response({\"status\": False, \"detail\": \"\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef\"}) token = str(uuid.uuid4()) instance.token = token instance.save() return Response({\"status\": True, \"detail\": {\"login\": \"\u767b\u9646\u6210\u529f\", \"token\": token}}) \u5728postman\u4e2d\u7684\u6d4b\u8bd5 http://127.0.0.1:8000/api/login/ { \"status\": true, \"detail\": { \"login\": \"\u767b\u9646\u6210\u529f\", \"token\": \"f08618aa-2a4e-4d7d-8216-e544c3483250\" } }","title":"8.\u767b\u9646"},{"location":"Django/restframework_practice/restframework_blog/#9","text":"class FavorSerializer(serializers.ModelSerializer): class Meta: model = models.Favor fields = ['blog'] class FavorView(APIView): \"\"\" - \u7ed9\u54ea\u7bc7\u535a\u5ba2\u70b9\u8d5e - \u70b9\u8d5e\u7684\u7528\u6237 - \u67e5\u8be2->\u4e0d\u5b58\u5728\u8d5e\u7684\u8bb0\u5f55->\u6dfb\u52a0 - \u5982\u679c\u5df2\u7ecf\u5b58\u5728\u8bb0\u5f55\uff0c\u4e0d\u8fdb\u884c\u589e\u52a0\u8d5e \"\"\" authentication_classes = [BlogAuthentication, NoAuthentication] def post(self, request): ser = FavorSerializer(data=request.data) if not ser.is_valid(): return Response({\"status\": False, \"detail\": \"\u6821\u9a8c\u5931\u8d25\", \"errors\": ser.errors}) # \u67e5\u8be2\uff0c\u5b58\u5728\u7684\u8bdd\u5c31\u4e0d\u518d\u70b9\u8d5e res = models.Favor.objects.filter(user=request.user, blog=ser.validated_data.get(\"blog\")).exists() if res: return Response({\"status\": False, \"detail\": \"\u5df2\u7ecf\u70b9\u8d5e\"}) # models.Favor.objects.filter(user=request.user, **ser.validated_data) ser.save(user=request.user) return Response({\"status\": True, \"data\": ser.data, \"detail\": \"\u70b9\u8d5e\u6210\u529f\"}) \u5728postman\u4e2d\u7684\u6d4b\u8bd5 http://127.0.0.1:8000/api/favor/?token=f08618aa-2a4e-4d7d-8216-e544c3483250 { \"status\": false, \"detail\": \"\u5df2\u7ecf\u70b9\u8d5e\" }","title":"9.\u70b9\u8d5e"},{"location":"Django/restframework_practice/restframework_blog/#10","text":"class CancelFavorSerializer(serializers.ModelSerializer): class Meta: model = models.Favor fields = ['blog'] class CancelFavorView(APIView): authentication_classes = [BlogAuthentication, NoAuthentication] def post(self, request): ser = CancelFavorSerializer(data=request.data) if not ser.is_valid(): return Response({\"status\": False, \"detail\": \"\u6821\u9a8c\u5931\u8d25\", \"errors\": ser.errors}) res = models.Favor.objects.filter(user=request.user, blog=ser.validated_data.get(\"blog\")).exists() if not res: return Response({\"status\": False, \"detail\": \"\u8fd8\u672a\u70b9\u8d5e\"}) models.Favor.objects.filter(blog=ser.validated_data.get(\"blog\"), user=request.user).delete() return Response({\"status\": True, \"detail\": \"\u70b9\u8d5e\u5df2\u53d6\u6d88\"}) \u5728postman\u4e2d\u7684\u6d4b\u8bd5 http://127.0.0.1:8000/api/cancelfavor/?token=f08618aa-2a4e-4d7d-8216-e544c3483250 { \"status\": true, \"detail\": \"\u70b9\u8d5e\u5df2\u53d6\u6d88\" }","title":"10.\u53d6\u6d88\u8d5e"},{"location":"Django/restframework_practice/restframework_blog/#11","text":". \u251c\u2500\u2500 api \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 __pycache__ \u2502 \u2502 \u251c\u2500\u2500 __init__.cpython-310.pyc \u2502 \u2502 \u251c\u2500\u2500 apps.cpython-310.pyc \u2502 \u2502 \u251c\u2500\u2500 models.cpython-310.pyc \u2502 \u2502 \u2514\u2500\u2500 views.cpython-310.pyc \u2502 \u251c\u2500\u2500 admin.py \u2502 \u251c\u2500\u2500 apps.py \u2502 \u251c\u2500\u2500 migrations \u2502 \u2502 \u251c\u2500\u2500 0001_initial.py \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u2514\u2500\u2500 __pycache__ \u2502 \u2502 \u251c\u2500\u2500 0001_initial.cpython-310.pyc \u2502 \u2502 \u2514\u2500\u2500 __init__.cpython-310.pyc \u2502 \u251c\u2500\u2500 models.py \u2502 \u251c\u2500\u2500 tests.py \u2502 \u2514\u2500\u2500 views.py \u251c\u2500\u2500 day15 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 __pycache__ \u2502 \u2502 \u251c\u2500\u2500 __init__.cpython-310.pyc \u2502 \u2502 \u251c\u2500\u2500 settings.cpython-310.pyc \u2502 \u2502 \u251c\u2500\u2500 urls.cpython-310.pyc \u2502 \u2502 \u2514\u2500\u2500 wsgi.cpython-310.pyc \u2502 \u251c\u2500\u2500 asgi.py \u2502 \u251c\u2500\u2500 settings.py \u2502 \u251c\u2500\u2500 urls.py \u2502 \u2514\u2500\u2500 wsgi.py \u251c\u2500\u2500 db.sqlite3 \u251c\u2500\u2500 ext \u2502 \u251c\u2500\u2500 __pycache__ \u2502 \u2502 \u251c\u2500\u2500 auth.cpython-310.pyc \u2502 \u2502 \u2514\u2500\u2500 hook.cpython-310.pyc \u2502 \u251c\u2500\u2500 auth.py \u2502 \u2514\u2500\u2500 hook.py \u2514\u2500\u2500 manage.py","title":"11.\u6574\u4f53\u9879\u76ee\u7ed3\u6784"},{"location":"Vue/Vue_01/Vue_01/","text":"Vue\u57fa\u7840 \u5b98\u65b9\u7f51\u7ad9\ud83c\udf88 \u7ec4\u4ef6\u5316\u5f00\u53d1 \u5355\u9875\u9762\u5f00\u53d1\u4e2d\u7ec4\u4ef6\u7684\u66ff\u6362 1.\u63d2\u503c\u8bed\u6cd5 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>\u63d2\u503c</title> <script src=\"https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.min.js\"></script> </head> <body> <div id=\"box\"> <ul> <li>\u5b57\u7b26\u4e32\uff1a{{name}}</li> <li>\u6570\u503c\uff1a{{age}}</li> <li>\u6570\u7ec4\uff1a{{list1}}</li> <li>\u5bf9\u8c61\uff1a{{obj1}}</li> <li>\u5b57\u7b26\u4e32\uff1a{{link1}}</li> <li>\u8fd0\u7b97\uff1a{{10+20+30+40}}</li> <li>\u4e09\u76ee\u8fd0\u7b97\u7b26\uff1a{{10>20?'\u662f':'\u5426'}}</li> </ul> </div> </body> <script> let vm = new Vue({ el: '#box', // \u5728box\u8fd9\u4e2adiv\u4e2d\u53ef\u4ee5\u5199 vue\u7684\u8bed\u6cd5 data: { name: 'Darker', // \u5b57\u7b26\u4e32 age: 18, // \u6570\u503c list1: [1,2,3,4], // \u6570\u7ec4 obj1: {name: 'Darker', age: 19}, // \u5bf9\u8c61 link1: '<a href=\"https://www.baidu.com\">\u767e\u5ea6\u4e00\u4e0b \u4f60\u5c31\u77e5\u9053</a>' } }) </script> </html> 2.\u6587\u672c\u6307\u4ee4 v-html \u8ba9HTML\u6e32\u67d3\u6210\u9875\u9762 v-text \u6807\u7b7e\u5185\u5bb9\u663e\u793a\u5bf9\u5e94\u7684\u6587\u672c v-show \u653e\u5165bool\u7c7b\u578b\uff0c\u63a7\u5236\u663e\u793a\u4e0e\u5426 v-if \u653e\u5165bool\u7c7b\u578b\uff0c\u63a7\u5236\u663e\u793a\u4e0e\u5426 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <script src=\"/js/vue.js\"></script> <link rel=\"stylesheet\" href=\"static/plugins/bootstrap/css/bootstrap.css\"> <title>Title</title> </head> <body> <div id=\"app\"> <div class=\"container\"> <div> <h3>1.v-html</h3> <div>div \u6e32\u67d3</div> <div v-html=\"s\"></div> <div>p\u6807\u7b7e \u6e32\u67d3</div> <p v-html=\"s\"></p> <h3> \u628a\u53d8\u91cf\u7684\u5185\u5bb9\u5f53\u4f5chtml\u6807\u7b7e\u6e32\u67d3\u5230\u9875\u9762\u4e2d </h3> <hr> <h3>2.v-text</h3> <div v-text=\"s\"></div> <div>\u5f53\u4f5c\u6587\u672c\u6e32\u67d3 \uff0c\u5982\u679c\u539f\u6765\u6807\u7b7e\u6709\u5185\u5bb9\uff0cv-text\u4f1a\u8986\u76d6\u539f\u6765\u6807\u7b7e\u7684\u5185\u5bb9</div> </div> <hr> <div> <h3> 3. v-show & v-if </h3> <div> \u53ea\u80fd\u8ddftrue\u6216\u8005false\uff0c\u8fd0\u7b97\u7ed3\u679c\u662fbool\u7c7b\u578b\uff0c\u63a7\u5236\u6807\u7b7e\u7684\u663e\u793a\u4e0e\u5426 </div> <div v-show=\"res1\">apple</div> <div v-show=\"res2\">apple</div> <div v-show=\"res1\">pear</div> <div v-show=\"res2\">pear</div> <div>v-show \u5373\u4f7f\u7ed3\u679c\u4e3afalse\uff0c\u4e5f\u4f1a\u5b58\u5728\u8be5\u6807\u7b7e\uff0c\u53ea\u662f\u4e0d\u663e\u793a</div> <div v-text=\"text\"></div> <div>\u5bf9\u4e8ev-if\uff0c\u5982\u679c\u4e3afalse\uff0c\u6807\u7b7e\u6839\u672c\u4e0d\u4f1a\u5b58\u5728 \uff0c\u6548\u7387\u6bd4\u8f83\u4f4e</div> </div> </div> </div> </body> <script> new Vue({ el: '#app', data: { s: \"<input type='text'>\", res1: true, res2: false, text: \"<div style=\\\"display: none;\\\">apple</div>\", } }) </script> </html> 3.\u4e8b\u4ef6\u6307\u4ee4 \u4f7f\u7528 @ \u7b26\u53f7\u89e6\u53d1\u4e8b\u4ef6 @click @click=\"function\" ... methods: { function(){ ... } } <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <script src=\"/js/vue.js\"></script> <link rel=\"stylesheet\" href=\"static/plugins/bootstrap/css/bootstrap.css\"> </head> <body> <div id=\"app\"> <button type=\"submit\" class=\"btn btn-default\" @click=\"handleClick\">Login</button> <div v-show=\"display\"> <p>hello world</p> </div> </div> </body> <script> var vm = new Vue({ el: \"#app\", data: { display: false, }, methods: { handleClick() { console.log(\"handleClick\"); this.display = !this.display; } } }) </script> </html> 4.\u5c5e\u6027\u6307\u4ee4 v-bind:class=\"js\u53d8\u91cf\" \u53ef\u4ee5\u7b80\u5199\u4e3a :class=\"js\u53d8\u91cf\" <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <script src=\"/js/vue.js\"></script> <link rel=\"stylesheet\" href=\"static/plugins/bootstrap/css/bootstrap.css\"> <style> .red{ border: solid 1px red; } .yellow{ border: solid 1px yellow; } </style> </head> <body> <div id=\"app\"> <button type=\"submit\" class=\"btn btn-default\" @click=\"handlerClick\">\u70b9\u6211\u53d8\u8272</button> <div :class=\"color\" style=\"width: 100px;height: 100px\"></div> </div> </body> <script> var vm = new Vue({ el: \"#app\", data: { color:'red', }, methods: { handlerClick(){ this.color= \"yellow\" } } }) </script> </html> 5.style & class :\u5c5e\u6027\u540d=js\u53d8\u91cf/js\u8bed\u6cd5 :class=\"js\u53d8\u91cf,\u6570\u7ec4,\u5b57\u7b26\u4e32\" :style=\"js\u53d8\u91cf,\u6570\u7ec4,\u5b57\u7b26\u4e32\" <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <script src=\"/js/vue.js\"></script> <link rel=\"stylesheet\" href=\"static/plugins/bootstrap/css/bootstrap.css\"> </head> <body> <div id=\"app\"> <button type=\"submit\" class=\"btn btn-default\" @click=\"handlerClick\">\u70b9\u6211\u53d8\u5927</button> <div :style=\"style_obj\"> <div>hello world</div> </div> </div> </body> <script> var vm = new Vue({ el: \"#app\", data: { style_obj :{ height:'200px', width:'200px', border:\"solid 1px red\", fontSize:\"30px\", } }, methods: { handlerClick(){ this.style_obj.fontSize=\"40px\" } } }) </script> </html> 6.\u6761\u4ef6\u6e32\u67d3 v-if v-else v-else-if <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <script src=\"/js/vue.js\"></script> <link rel=\"stylesheet\" href=\"static/plugins/bootstrap/css/bootstrap.css\"> </head> <body> <div id=\"app\"> <button type=\"submit\" class=\"btn btn-default\" @click=\"handlerClick\">\u70b9\u6211\u53d8\u6362</button> <div> <div v-if=\"score>90\">\u4f18\u79c0</div> <div v-if=\"score>80 && score <= 90\">\u4e0d\u4f18\u79c0</div> </div> </div> </body> <script> var vm = new Vue({ el: \"#app\", data: { score:91 }, methods: { handlerClick(){ this.score=82; } } }) </script> </html> 7.\u5217\u8868\u6e32\u67d3 v-for\u6307\u4ee4 - \u5faa\u73af\u6570\u7ec4 v-for=\"(url,index) in urls\" - \u5faa\u73af\u5bf9\u8c61 v-for=\"(value,key) in obj\" - \u5faa\u73af\u6570\u5b57\uff0c\u4ece1\u5f00\u59cb\u5faa\u73af\u5230\u6570\u5b57\u7684\u4e2a\u6570 v-for=\"i in num\" <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <script src=\"/js/vue.js\"></script> <link rel=\"stylesheet\" href=\"static/plugins/bootstrap/css/bootstrap.css\"> </head> <body> <div id=\"app\"> <button type=\"submit\" class=\"btn btn-default\" @click=\"handlClick\">\u70b9\u6211\u51f8\u5934</button> <ul v-for=\"item in li\"> <li>\u6bcf\u5929\u90fd\u5728->{{item}}</li> </ul> </div> </body> <script> var vm = new Vue({ el: \"#app\", data: { li:[\"\u5403\u996d\",\"\u7761\u89c9\",\"\u6253\u8c46\u8c46\"] }, methods: { handlClick(){ this.li.push(\"\u51f8\u5934\") console.log(this.li) } } }) </script> </html> 8.\u4e8b\u4ef6\u5904\u7406 input \u5f53\u8f93\u5165\u6846\u8fdb\u884c\u8f93\u5165\u65f6\u89e6\u53d1\u7684\u4e8b\u4ef6 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <script src=\"/js/vue.js\"></script> <link rel=\"stylesheet\" href=\"static/plugins/bootstrap/css/bootstrap.css\"> </head> <body> <div id=\"app\"> <button type=\"submit\" class=\"btn btn-default\" @click=\"handleInput\">\u70b9\u6211change</button> <p>\u8f93\u5165\u4f60\u7684\u60f3\u6cd5<input type=\"text\" v-model=\"name\" @input=\"Input\"></p>---->{{name}} </div> </body> <script> var vm = new Vue({ el: \"#app\", data: { name: \"wupeiqi\" }, methods: { handleInput() { this.name = \"wusir\" }, Input(){ alert(\"input\") } } }) </script> </html> change \u5f53\u5143\u7d20\u7684\u503c\u53d1\u751f\u6539\u53d8\u65f6\u89e6\u53d1\u7684\u4e8b\u4ef6 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <script src=\"/js/vue.js\"></script> <link rel=\"stylesheet\" href=\"static/plugins/bootstrap/css/bootstrap.css\"> </head> <body> <div id=\"app\"> <button type=\"submit\" class=\"btn btn-default\" @click=\"handleInput\">\u70b9\u6211change</button> <p>change<input type=\"text\" v-model=\"name\" @change=\"changefunc\"></p>---->{{name}} </div> </body> <script> var vm = new Vue({ el: \"#app\", data: { name: \"wupeiqi\" }, methods: { handleInput() { this.name = \"wusir\" }, changefunc(){ alert(\"change\") } } }) </script> </html> blur \u5f53\u8f93\u5165\u6846\u5931\u53bb\u7126\u70b9\u65f6\u89e6\u53d1\u7684\u4e8b\u4ef6 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <script src=\"/js/vue.js\"></script> <link rel=\"stylesheet\" href=\"static/plugins/bootstrap/css/bootstrap.css\"> </head> <body> <div id=\"app\"> <!-- <button type=\"submit\" class=\"btn btn-default\" @click=\"handleInput\">\u70b9\u6211change</button>--> <p>change<input type=\"text\" v-model=\"name\" @blur=\"blurfunc\"></p>---->{{name}} </div> </body> <script> var vm = new Vue({ el: \"#app\", data: { name: \"wupeiqi\" }, methods: { blurfunc() { alert(\"blur~~~\") } } }) </script> </html> change\u548cblur\u6700\u672c\u8d28\u7684\u533a\u522b\u662f\uff1a \u5982\u679c\u8f93\u5165\u6846\u4e3a\u7a7a\uff0c\u5931\u53bb\u7126\u70b9\u540e\uff0cchange\u4e0d\u4f1a\u51fa\u53d1\uff0c\u4f46\u662fblur\u4f1a\u51fa\u53d1 9.\u8fc7\u6ee4\u6848\u4f8b \u76d1\u542cinput\u4e8b\u4ef6 \u524d\u620f js\u6570\u7ec4\u5185\u7f6e\u8fc7\u6ee4\u65b9\u6cd5filter var l=['a', 'apple', 'atom', 'b', 'banana', 'csrf', 'cii', 'dd', 'dogge'] var newList = l.filter(function(item){ return true }) <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <script src=\"/js/vue.js\"></script> <link rel=\"stylesheet\" href=\"static/plugins/bootstrap/css/bootstrap.css\"> </head> <body> <div id=\"app\"> <h2 style=\"margin-left: 20px\">\u8fc7\u6ee4\u6848\u4f8b</h2> <div class=\"container\" style=\"margin-top: 30px\"> <p>\u67e5\u8be2 <input type=\"text\" v-model=\"search\" @input=\"handleInput\"></p> <ul v-for=\"data in newList\"> <li>{{data}}</li> </ul> </div> </div> </body> <script> var vm = new Vue({ el: \"#app\", data: { search: '', dataList: ['a', 'apple', 'atom', 'b', 'banana', 'csrf', 'cii', 'dd', 'dogge'], newList: ['a', 'apple', 'atom', 'b', 'banana', 'csrf', 'cii', 'dd', 'dogge'] }, methods: { handleInput() { this.newList = this.dataList.filter(item=>{ return item.indexOf(this.search)>-1 }) } } }) </script> </html> 10.\u8868\u5355\u63a7\u5236 checkbox\u9009\u4e2d <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <script src=\"/js/vue.js\"></script> <link rel=\"stylesheet\" href=\"static/plugins/bootstrap/css/bootstrap.css\"> </head> <body> <div id=\"box\"> <input type=\"text\" placeholder=\"\u8bf7\u8f93\u5165\u7528\u6237\u540d\uff1a\"><br> <input type=\"password\" placeholder=\"\u8bf7\u8f93\u5165\u5bc6\u7801\uff1a\"><br> <input type=\"checkbox\" v-model=\"radio\">\u8bb0\u4f4f\u7528\u6237\u540d </div> </body> <script> var vm = new Vue({ el: '#box', data: { myText: '', textBig: '', radio: false, }, }) </script> </html> \u5355\u9009&\u591a\u9009 - \u5355\u9009 \u4f7f\u7528input\u6807\u7b7e\uff0c\u7528v-model\uff0cvalue\u662f\u63d0\u4ea4\u7684\u6570\u636e <input type=\"radio\" v-model=\"sradio\" value=\"\u7537\">\u7537 - \u591a\u9009 \u4f7f\u7528input\u6807\u7b7e\uff0cv-model=\"many\"\uff0c\u6b64\u5904\u5fc5\u987b\u662fmany\uff0c\u6765\u7ed1\u5b9a\u591a\u9009\u7c7b\u578b <input type=\"checkbox\" v-model=\"many\" value=\"\u7bee\u7403\">\u7bee\u7403 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <script src=\"/js/vue.js\"></script> <link rel=\"stylesheet\" href=\"static/plugins/bootstrap/css/bootstrap.css\"> </head> <body> <div id=\"box\"> <div class=\"container\"> <hr> <div> <h2>checkbox</h2> <input type=\"text\" placeholder=\"\u8bf7\u8f93\u5165\u7528\u6237\u540d\uff1a\"><br> <input type=\"password\" placeholder=\"\u8bf7\u8f93\u5165\u5bc6\u7801\uff1a\"><br> <input type=\"checkbox\" v-model=\"radio\">\u8bb0\u4f4f\u7528\u6237\u540d radio\u72b6\u6001--->{{radio}} </div> <hr> <div> <h2>\u5355\u9009</h2> <input type=\"radio\" v-model=\"sradio\" value=\"\u7537\">\u7537 <input type=\"radio\" v-model=\"sradio\" value=\"\u5973\">\u5973 <input type=\"radio\" v-model=\"sradio\" value=\"\u4fdd\u5bc6\">\u4fdd\u5bc6 <br><br>\u60a8\u9009\u62e9\u7684\u6027\u522b\uff1a{{sradio}} </div> <hr> <div> <h2>\u591a\u9009</h2> <input type=\"checkbox\" v-model=\"many\" value=\"\u7bee\u7403\">\u7bee\u7403 <input type=\"checkbox\" v-model=\"many\" value=\"\u8db3\u7403\">\u8db3\u7403 <input type=\"checkbox\" v-model=\"many\" value=\"\u68d2\u7403\">\u68d2\u7403 <input type=\"checkbox\" v-model=\"many\" value=\"\u684c\u7403\">\u684c\u7403 <br><br>\u60a8\u559c\u6b22\u7684\u7403\u7c7b\uff1a{{many}} </div> </div> </div> </body> <script> var vm = new Vue({ el: '#box', data: { myText: '', textBig: '', radio: false, sradio: '', many:[], }, }) </script> </html> 11.\u8d2d\u7269\u8f66\u6848\u4f8b \u524d\u620f\uff1ajs\u5faa\u73af\u7684\u5b9e\u73b0 \u57fa\u7840\u7248\u672c for(let i=0;i>3;i++){ console.log(i); } in \u5faa\u73af es5\u8bed\u6cd5 for(let member in obj){ ... } for ... of... \u5faa\u73af es6\u8bed\u6cd5 for(item of arr){ console.log(\"item-->\",item); } \u5bf9\u4e8e\u6570\u7ec4\u7684for each\u5faa\u73af $.each(\u53ef\u8fed\u4ee3\u5bf9\u8c61,function(ket,val){ ...; }) var a=[11,22,33] var obj = { name:\"wupeiqi\", age:19, } $.each(a,function(key,val){ console.log(key); console.log(val); }) \u57fa\u7840\u7248\u672c \u53ea\u505a\u8d2d\u7269\u8f66\u7684\u9009\u62e9\uff0c\u5c55\u793a\u9009\u62e9\u7684\u5546\u54c1&\u603b\u4ef7 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <script src=\"/js/vue.js\"></script> <link rel=\"stylesheet\" href=\"static/plugins/bootstrap/css/bootstrap.css\"> </head> <body> <div class=\"app\"> <div class=\"container-fluid\"> <div class=\"row\"> <div class=\"col-md-6 col-md-offset-3\"> <div style=\"margin-top: 30px\"> <h1>\u8d2d\u7269\u8f66\u6848\u4f8b</h1> <table class=\"table table-bordered\"> <thead> <tr> <th>\u5546\u54c1id</th> <th>\u5546\u54c1\u540d\u5b57</th> <th>\u5546\u54c1\u4ef7\u683c</th> <th>\u5546\u54c1\u6570\u91cf</th> </tr> </thead> <tbody> <tr v-for=\"good in goodList\"> <th>{{good.id}}</th> <td>{{good.name}}</td> <td>{{good.price}}</td> <td>{{good.count}}</td> <td><input type=\"checkbox\" v-model=\"buyGoods\" :value=\"good\"></td> </tr> </tbody> </table> <hr> \u9009\u4e2d\u7684\u5546\u54c1:{{buyGoods}} <hr> \u603b\u4ef7\u683c\u662f\uff1a{{getPrice()}} </div> </div> </div> </div> </div> </body> <script> var vm = new Vue({ el: '.app', data: { goodList: [ {id: '1', name: '\u5c0f\u6c7d\u8f66', price: 150000, count: 2}, {id: '2', name: '\u9e21\u86cb', price: 2, count: 1}, {id: '3', name: '\u997c\u5e72', price: 10, count: 6}, {id: '4', name: '\u94a2\u7b14', price: 15, count: 5}, {id: '5', name: '\u8138\u76c6', price: 30, count: 3}, ], buyGoods:[], }, methods:{ getPrice(){ var total=0 for (item of this.buyGoods){ total+=item.price*item.count } return total } } }) </script> </html> \u8d2d\u7269\u8f66\u62d3\u5c55\u5168\u9009\u529f\u80fd \u901a\u8fc7\u5224\u65ad\u5546\u54c1\u5217\u8868\u548c\u5df2\u9009\u62e9\u7684\u5217\u8868\u957f\u5ea6\u662f\u5426\u4e00\u81f4 handleCheckAll(){ if(this.checkAll){ this.buyGoods = this.goodList; }else{ this.buyGoods = []; } }, handleCheckOne(){ if(this.buyGoods.length == this.goodList.length){ this.checkAll=true; }else{ this.checkAll=false; } } <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <script src=\"/js/vue.js\"></script> <link rel=\"stylesheet\" href=\"static/plugins/bootstrap/css/bootstrap.css\"> <style> .Mycontainer{ height: 2000px; margin-top: 50px; } </style> </head> <body> <div class=\"app\"> <div class=\"container-fluid\"> <div class=\"col-md-6 col-md-offset-3 Mycontainer\"> <table class=\"table table-bordered\"> <thead> <tr> <th>\u5546\u54c1id</th> <th>Name</th> <th>Price</th> <th>count</th> <th><input type=\"checkbox\" v-model=\"checkAll\" @change=\"handleCheckAll\"></th> </tr> </thead> <tbody> <tr v-for=\"good in goodList\"> <td>{{good.id}}</td> <td>{{good.name}}</td> <td>{{good.price}}</td> <td>{{good.count}}</td> <td><input type=\"checkbox\" v-model=\"buyGoods\" :value=\"good\" @change=\"handleCheckOne\"></td> </tr> </tbody> </table> <hr> <p>\u52a0\u5165\u8d2d\u7269\u8f66\u7684\u5546\u54c1\u6709-->{{buyGoods}}</p> <hr> <p>\u603b\u4ef7\u683c\u662f--->{{getPrice()}}</p> </div> </div> </div> </body> <script> var vm = new Vue({ el: '.app', data: { goodList: [ {id: '1', name: '\u5c0f\u6c7d\u8f66', price: 150000, count: 2}, {id: '2', name: '\u9e21\u86cb', price: 2, count: 1}, {id: '3', name: '\u997c\u5e72', price: 10, count: 6}, {id: '4', name: '\u94a2\u7b14', price: 15, count: 5}, {id: '5', name: '\u8138\u76c6', price: 30, count: 3}, ], buyGoods:[], checkAll:false, }, methods:{ getPrice(){ var total_money = 0; for(item of this.buyGoods){ total_money += item.price * item.count; } return total_money }, handleCheckAll(){ if(this.checkAll){ this.buyGoods = this.goodList; }else{ this.buyGoods = []; } }, handleCheckOne(){ if(this.buyGoods.length == this.goodList.length){ this.checkAll=true; }else{ this.checkAll=false; } } } }) </script> </html> \u8d2d\u7269\u8f66\u62d3\u5c55\u52a0\u51cf\u529f\u80fd \u5728\u8868\u683c\u7684\u6570\u91cf\u5de6\u53f3\u589e\u52a0\u4e24\u4e2a button \u6309\u94ae\uff0c\u5206\u522b\u7ed1\u5b9a\u4e24\u4e2a\u70b9\u51fb\u4e8b\u4ef6 \u7ed1\u5b9a\u70b9\u51fb\u4e8b\u4ef6\u7684\u540c\u65f6\uff0c\u8981\u4f20\u5165\u5f53\u524d\u5546\u54c1 good \u8fd9\u4e2a\u53c2\u6570 \u7136\u540e\u5728 methods \u4e2d\u5206\u522b\u5b9e\u73b0\u4e24\u4e2a\u5904\u7406\u6570\u91cf\u7684\u51fd\u6570 \uff0c\u6765\u5b9e\u73b0\u52a0\u51cf\u529f\u80fd handlePlus(item){ item.count++; }, handleMinus(item){ if(item.count<=1){ alert(\"\u592a\u5c11\u4e86\"); }else{ item.count--; } } \u5b9e\u73b0\u4ee3\u7801 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <script src=\"/js/vue.js\"></script> <link rel=\"stylesheet\" href=\"static/plugins/bootstrap/css/bootstrap.css\"> <style> .Mycontainer{ height: 2000px; margin-top: 50px; } </style> </head> <body> <div class=\"app\"> <div class=\"container-fluid\"> <div class=\"col-md-6 col-md-offset-3 Mycontainer\"> <table class=\"table table-bordered\"> <thead> <tr> <th>\u5546\u54c1id</th> <th>Name</th> <th>Price</th> <th>count</th> <th><input type=\"checkbox\" v-model=\"checkAll\" @change=\"handleCheckAll\"></th> </tr> </thead> <tbody> <tr v-for=\"good in goodList\"> <td>{{good.id}}</td> <td>{{good.name}}</td> <td>{{good.price}}</td> <td><button @click=\"handleMinus(good)\">-</button>{{good.count}}<button @click=\"handlePlus(good)\">+</button></td> <td><input type=\"checkbox\" v-model=\"buyGoods\" :value=\"good\" @change=\"handleCheckOne\"></td> </tr> </tbody> </table> <hr> <p>\u52a0\u5165\u8d2d\u7269\u8f66\u7684\u5546\u54c1\u6709-->{{buyGoods}}</p> <hr> <p>\u603b\u4ef7\u683c\u662f--->{{getPrice()}}</p> </div> </div> </div> </body> <script> var vm = new Vue({ el: '.app', data: { goodList: [ {id: '1', name: '\u5c0f\u6c7d\u8f66', price: 150000, count: 2}, {id: '2', name: '\u9e21\u86cb', price: 2, count: 1}, {id: '3', name: '\u997c\u5e72', price: 10, count: 6}, {id: '4', name: '\u94a2\u7b14', price: 15, count: 5}, {id: '5', name: '\u8138\u76c6', price: 30, count: 3}, ], buyGoods:[], checkAll:false, }, methods:{ getPrice(){ var total_money = 0; for(item of this.buyGoods){ total_money += item.price * item.count; } return total_money }, handleCheckAll(){ if(this.checkAll){ this.buyGoods = this.goodList; }else{ this.buyGoods = []; } }, handleCheckOne(){ if(this.buyGoods.length == this.goodList.length){ this.checkAll=true; }else{ this.checkAll=false; } }, handlePlus(item){ item.count++; }, handleMinus(item){ if(item.count<=1){ alert(\"\u592a\u5c11\u4e86\"); }else{ item.count--; } } } }) </script> </html> 12.v-model \u62d3\u5c55 lazy \u7b49\u5f85input\u6846\u7684\u6570\u636e\u7ed1\u5b9a\u5931\u53bb\u7126\u70b9\u4e4b\u540e\u518d\u53d8\u5316 number \u6570\u7ec4\u5f00\u5934\uff0c\u53ea\u4fdd\u7559\u6570\u5b57\uff0c\u540e\u9762\u7684\u5b57\u6bcd\u4e0d\u4fdd\u7559 \uff1b\u5b57\u6bcd\u5f00\u5934\u7684\u8bdd\uff0c\u5168\u90e8\u4fdd\u7559 trim \u53bb\u9664\u9996\u4f4d\u7684\u7a7a\u683c <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <script src=\"/js/vue.js\"></script> <link rel=\"stylesheet\" href=\"static/plugins/bootstrap/css/bootstrap.css\"> </head> <body> <div id=\"app\"> <div class=\"container\"> <h2>lazy</h2> <p><input type=\"text\" v-model.lazy=\"a\">{{a}}</p> <h2>number</h2> <p><input type=\"text\" v-model.number=\"b\">{{b}}</p> <h2>trim</h2> <p><input type=\"text\" v-model.trim=\"c\">{{c}}</p> </div> </div> </body> <script> new Vue({ el: '#app', data: { a: '', b: '', c: '', }, methods: {}, }) </script> </html>","title":"1.Vue\u57fa\u7840"},{"location":"Vue/Vue_01/Vue_01/#vue","text":"\u5b98\u65b9\u7f51\u7ad9\ud83c\udf88 \u7ec4\u4ef6\u5316\u5f00\u53d1 \u5355\u9875\u9762\u5f00\u53d1\u4e2d\u7ec4\u4ef6\u7684\u66ff\u6362","title":"Vue\u57fa\u7840"},{"location":"Vue/Vue_01/Vue_01/#1","text":"<!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>\u63d2\u503c</title> <script src=\"https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.min.js\"></script> </head> <body> <div id=\"box\"> <ul> <li>\u5b57\u7b26\u4e32\uff1a{{name}}</li> <li>\u6570\u503c\uff1a{{age}}</li> <li>\u6570\u7ec4\uff1a{{list1}}</li> <li>\u5bf9\u8c61\uff1a{{obj1}}</li> <li>\u5b57\u7b26\u4e32\uff1a{{link1}}</li> <li>\u8fd0\u7b97\uff1a{{10+20+30+40}}</li> <li>\u4e09\u76ee\u8fd0\u7b97\u7b26\uff1a{{10>20?'\u662f':'\u5426'}}</li> </ul> </div> </body> <script> let vm = new Vue({ el: '#box', // \u5728box\u8fd9\u4e2adiv\u4e2d\u53ef\u4ee5\u5199 vue\u7684\u8bed\u6cd5 data: { name: 'Darker', // \u5b57\u7b26\u4e32 age: 18, // \u6570\u503c list1: [1,2,3,4], // \u6570\u7ec4 obj1: {name: 'Darker', age: 19}, // \u5bf9\u8c61 link1: '<a href=\"https://www.baidu.com\">\u767e\u5ea6\u4e00\u4e0b \u4f60\u5c31\u77e5\u9053</a>' } }) </script> </html>","title":"1.\u63d2\u503c\u8bed\u6cd5"},{"location":"Vue/Vue_01/Vue_01/#2","text":"v-html \u8ba9HTML\u6e32\u67d3\u6210\u9875\u9762 v-text \u6807\u7b7e\u5185\u5bb9\u663e\u793a\u5bf9\u5e94\u7684\u6587\u672c v-show \u653e\u5165bool\u7c7b\u578b\uff0c\u63a7\u5236\u663e\u793a\u4e0e\u5426 v-if \u653e\u5165bool\u7c7b\u578b\uff0c\u63a7\u5236\u663e\u793a\u4e0e\u5426 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <script src=\"/js/vue.js\"></script> <link rel=\"stylesheet\" href=\"static/plugins/bootstrap/css/bootstrap.css\"> <title>Title</title> </head> <body> <div id=\"app\"> <div class=\"container\"> <div> <h3>1.v-html</h3> <div>div \u6e32\u67d3</div> <div v-html=\"s\"></div> <div>p\u6807\u7b7e \u6e32\u67d3</div> <p v-html=\"s\"></p> <h3> \u628a\u53d8\u91cf\u7684\u5185\u5bb9\u5f53\u4f5chtml\u6807\u7b7e\u6e32\u67d3\u5230\u9875\u9762\u4e2d </h3> <hr> <h3>2.v-text</h3> <div v-text=\"s\"></div> <div>\u5f53\u4f5c\u6587\u672c\u6e32\u67d3 \uff0c\u5982\u679c\u539f\u6765\u6807\u7b7e\u6709\u5185\u5bb9\uff0cv-text\u4f1a\u8986\u76d6\u539f\u6765\u6807\u7b7e\u7684\u5185\u5bb9</div> </div> <hr> <div> <h3> 3. v-show & v-if </h3> <div> \u53ea\u80fd\u8ddftrue\u6216\u8005false\uff0c\u8fd0\u7b97\u7ed3\u679c\u662fbool\u7c7b\u578b\uff0c\u63a7\u5236\u6807\u7b7e\u7684\u663e\u793a\u4e0e\u5426 </div> <div v-show=\"res1\">apple</div> <div v-show=\"res2\">apple</div> <div v-show=\"res1\">pear</div> <div v-show=\"res2\">pear</div> <div>v-show \u5373\u4f7f\u7ed3\u679c\u4e3afalse\uff0c\u4e5f\u4f1a\u5b58\u5728\u8be5\u6807\u7b7e\uff0c\u53ea\u662f\u4e0d\u663e\u793a</div> <div v-text=\"text\"></div> <div>\u5bf9\u4e8ev-if\uff0c\u5982\u679c\u4e3afalse\uff0c\u6807\u7b7e\u6839\u672c\u4e0d\u4f1a\u5b58\u5728 \uff0c\u6548\u7387\u6bd4\u8f83\u4f4e</div> </div> </div> </div> </body> <script> new Vue({ el: '#app', data: { s: \"<input type='text'>\", res1: true, res2: false, text: \"<div style=\\\"display: none;\\\">apple</div>\", } }) </script> </html>","title":"2.\u6587\u672c\u6307\u4ee4"},{"location":"Vue/Vue_01/Vue_01/#3","text":"\u4f7f\u7528 @ \u7b26\u53f7\u89e6\u53d1\u4e8b\u4ef6 @click @click=\"function\" ... methods: { function(){ ... } } <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <script src=\"/js/vue.js\"></script> <link rel=\"stylesheet\" href=\"static/plugins/bootstrap/css/bootstrap.css\"> </head> <body> <div id=\"app\"> <button type=\"submit\" class=\"btn btn-default\" @click=\"handleClick\">Login</button> <div v-show=\"display\"> <p>hello world</p> </div> </div> </body> <script> var vm = new Vue({ el: \"#app\", data: { display: false, }, methods: { handleClick() { console.log(\"handleClick\"); this.display = !this.display; } } }) </script> </html>","title":"3.\u4e8b\u4ef6\u6307\u4ee4"},{"location":"Vue/Vue_01/Vue_01/#4","text":"v-bind:class=\"js\u53d8\u91cf\" \u53ef\u4ee5\u7b80\u5199\u4e3a :class=\"js\u53d8\u91cf\" <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <script src=\"/js/vue.js\"></script> <link rel=\"stylesheet\" href=\"static/plugins/bootstrap/css/bootstrap.css\"> <style> .red{ border: solid 1px red; } .yellow{ border: solid 1px yellow; } </style> </head> <body> <div id=\"app\"> <button type=\"submit\" class=\"btn btn-default\" @click=\"handlerClick\">\u70b9\u6211\u53d8\u8272</button> <div :class=\"color\" style=\"width: 100px;height: 100px\"></div> </div> </body> <script> var vm = new Vue({ el: \"#app\", data: { color:'red', }, methods: { handlerClick(){ this.color= \"yellow\" } } }) </script> </html>","title":"4.\u5c5e\u6027\u6307\u4ee4"},{"location":"Vue/Vue_01/Vue_01/#5style-class","text":":\u5c5e\u6027\u540d=js\u53d8\u91cf/js\u8bed\u6cd5 :class=\"js\u53d8\u91cf,\u6570\u7ec4,\u5b57\u7b26\u4e32\" :style=\"js\u53d8\u91cf,\u6570\u7ec4,\u5b57\u7b26\u4e32\" <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <script src=\"/js/vue.js\"></script> <link rel=\"stylesheet\" href=\"static/plugins/bootstrap/css/bootstrap.css\"> </head> <body> <div id=\"app\"> <button type=\"submit\" class=\"btn btn-default\" @click=\"handlerClick\">\u70b9\u6211\u53d8\u5927</button> <div :style=\"style_obj\"> <div>hello world</div> </div> </div> </body> <script> var vm = new Vue({ el: \"#app\", data: { style_obj :{ height:'200px', width:'200px', border:\"solid 1px red\", fontSize:\"30px\", } }, methods: { handlerClick(){ this.style_obj.fontSize=\"40px\" } } }) </script> </html>","title":"5.style &amp; class"},{"location":"Vue/Vue_01/Vue_01/#6","text":"v-if v-else v-else-if <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <script src=\"/js/vue.js\"></script> <link rel=\"stylesheet\" href=\"static/plugins/bootstrap/css/bootstrap.css\"> </head> <body> <div id=\"app\"> <button type=\"submit\" class=\"btn btn-default\" @click=\"handlerClick\">\u70b9\u6211\u53d8\u6362</button> <div> <div v-if=\"score>90\">\u4f18\u79c0</div> <div v-if=\"score>80 && score <= 90\">\u4e0d\u4f18\u79c0</div> </div> </div> </body> <script> var vm = new Vue({ el: \"#app\", data: { score:91 }, methods: { handlerClick(){ this.score=82; } } }) </script> </html>","title":"6.\u6761\u4ef6\u6e32\u67d3"},{"location":"Vue/Vue_01/Vue_01/#7","text":"v-for\u6307\u4ee4 - \u5faa\u73af\u6570\u7ec4 v-for=\"(url,index) in urls\" - \u5faa\u73af\u5bf9\u8c61 v-for=\"(value,key) in obj\" - \u5faa\u73af\u6570\u5b57\uff0c\u4ece1\u5f00\u59cb\u5faa\u73af\u5230\u6570\u5b57\u7684\u4e2a\u6570 v-for=\"i in num\" <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <script src=\"/js/vue.js\"></script> <link rel=\"stylesheet\" href=\"static/plugins/bootstrap/css/bootstrap.css\"> </head> <body> <div id=\"app\"> <button type=\"submit\" class=\"btn btn-default\" @click=\"handlClick\">\u70b9\u6211\u51f8\u5934</button> <ul v-for=\"item in li\"> <li>\u6bcf\u5929\u90fd\u5728->{{item}}</li> </ul> </div> </body> <script> var vm = new Vue({ el: \"#app\", data: { li:[\"\u5403\u996d\",\"\u7761\u89c9\",\"\u6253\u8c46\u8c46\"] }, methods: { handlClick(){ this.li.push(\"\u51f8\u5934\") console.log(this.li) } } }) </script> </html>","title":"7.\u5217\u8868\u6e32\u67d3"},{"location":"Vue/Vue_01/Vue_01/#8","text":"input \u5f53\u8f93\u5165\u6846\u8fdb\u884c\u8f93\u5165\u65f6\u89e6\u53d1\u7684\u4e8b\u4ef6 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <script src=\"/js/vue.js\"></script> <link rel=\"stylesheet\" href=\"static/plugins/bootstrap/css/bootstrap.css\"> </head> <body> <div id=\"app\"> <button type=\"submit\" class=\"btn btn-default\" @click=\"handleInput\">\u70b9\u6211change</button> <p>\u8f93\u5165\u4f60\u7684\u60f3\u6cd5<input type=\"text\" v-model=\"name\" @input=\"Input\"></p>---->{{name}} </div> </body> <script> var vm = new Vue({ el: \"#app\", data: { name: \"wupeiqi\" }, methods: { handleInput() { this.name = \"wusir\" }, Input(){ alert(\"input\") } } }) </script> </html> change \u5f53\u5143\u7d20\u7684\u503c\u53d1\u751f\u6539\u53d8\u65f6\u89e6\u53d1\u7684\u4e8b\u4ef6 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <script src=\"/js/vue.js\"></script> <link rel=\"stylesheet\" href=\"static/plugins/bootstrap/css/bootstrap.css\"> </head> <body> <div id=\"app\"> <button type=\"submit\" class=\"btn btn-default\" @click=\"handleInput\">\u70b9\u6211change</button> <p>change<input type=\"text\" v-model=\"name\" @change=\"changefunc\"></p>---->{{name}} </div> </body> <script> var vm = new Vue({ el: \"#app\", data: { name: \"wupeiqi\" }, methods: { handleInput() { this.name = \"wusir\" }, changefunc(){ alert(\"change\") } } }) </script> </html> blur \u5f53\u8f93\u5165\u6846\u5931\u53bb\u7126\u70b9\u65f6\u89e6\u53d1\u7684\u4e8b\u4ef6 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <script src=\"/js/vue.js\"></script> <link rel=\"stylesheet\" href=\"static/plugins/bootstrap/css/bootstrap.css\"> </head> <body> <div id=\"app\"> <!-- <button type=\"submit\" class=\"btn btn-default\" @click=\"handleInput\">\u70b9\u6211change</button>--> <p>change<input type=\"text\" v-model=\"name\" @blur=\"blurfunc\"></p>---->{{name}} </div> </body> <script> var vm = new Vue({ el: \"#app\", data: { name: \"wupeiqi\" }, methods: { blurfunc() { alert(\"blur~~~\") } } }) </script> </html> change\u548cblur\u6700\u672c\u8d28\u7684\u533a\u522b\u662f\uff1a \u5982\u679c\u8f93\u5165\u6846\u4e3a\u7a7a\uff0c\u5931\u53bb\u7126\u70b9\u540e\uff0cchange\u4e0d\u4f1a\u51fa\u53d1\uff0c\u4f46\u662fblur\u4f1a\u51fa\u53d1","title":"8.\u4e8b\u4ef6\u5904\u7406"},{"location":"Vue/Vue_01/Vue_01/#9","text":"\u76d1\u542cinput\u4e8b\u4ef6 \u524d\u620f js\u6570\u7ec4\u5185\u7f6e\u8fc7\u6ee4\u65b9\u6cd5filter var l=['a', 'apple', 'atom', 'b', 'banana', 'csrf', 'cii', 'dd', 'dogge'] var newList = l.filter(function(item){ return true }) <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <script src=\"/js/vue.js\"></script> <link rel=\"stylesheet\" href=\"static/plugins/bootstrap/css/bootstrap.css\"> </head> <body> <div id=\"app\"> <h2 style=\"margin-left: 20px\">\u8fc7\u6ee4\u6848\u4f8b</h2> <div class=\"container\" style=\"margin-top: 30px\"> <p>\u67e5\u8be2 <input type=\"text\" v-model=\"search\" @input=\"handleInput\"></p> <ul v-for=\"data in newList\"> <li>{{data}}</li> </ul> </div> </div> </body> <script> var vm = new Vue({ el: \"#app\", data: { search: '', dataList: ['a', 'apple', 'atom', 'b', 'banana', 'csrf', 'cii', 'dd', 'dogge'], newList: ['a', 'apple', 'atom', 'b', 'banana', 'csrf', 'cii', 'dd', 'dogge'] }, methods: { handleInput() { this.newList = this.dataList.filter(item=>{ return item.indexOf(this.search)>-1 }) } } }) </script> </html>","title":"9.\u8fc7\u6ee4\u6848\u4f8b"},{"location":"Vue/Vue_01/Vue_01/#10","text":"checkbox\u9009\u4e2d <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <script src=\"/js/vue.js\"></script> <link rel=\"stylesheet\" href=\"static/plugins/bootstrap/css/bootstrap.css\"> </head> <body> <div id=\"box\"> <input type=\"text\" placeholder=\"\u8bf7\u8f93\u5165\u7528\u6237\u540d\uff1a\"><br> <input type=\"password\" placeholder=\"\u8bf7\u8f93\u5165\u5bc6\u7801\uff1a\"><br> <input type=\"checkbox\" v-model=\"radio\">\u8bb0\u4f4f\u7528\u6237\u540d </div> </body> <script> var vm = new Vue({ el: '#box', data: { myText: '', textBig: '', radio: false, }, }) </script> </html> \u5355\u9009&\u591a\u9009 - \u5355\u9009 \u4f7f\u7528input\u6807\u7b7e\uff0c\u7528v-model\uff0cvalue\u662f\u63d0\u4ea4\u7684\u6570\u636e <input type=\"radio\" v-model=\"sradio\" value=\"\u7537\">\u7537 - \u591a\u9009 \u4f7f\u7528input\u6807\u7b7e\uff0cv-model=\"many\"\uff0c\u6b64\u5904\u5fc5\u987b\u662fmany\uff0c\u6765\u7ed1\u5b9a\u591a\u9009\u7c7b\u578b <input type=\"checkbox\" v-model=\"many\" value=\"\u7bee\u7403\">\u7bee\u7403 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <script src=\"/js/vue.js\"></script> <link rel=\"stylesheet\" href=\"static/plugins/bootstrap/css/bootstrap.css\"> </head> <body> <div id=\"box\"> <div class=\"container\"> <hr> <div> <h2>checkbox</h2> <input type=\"text\" placeholder=\"\u8bf7\u8f93\u5165\u7528\u6237\u540d\uff1a\"><br> <input type=\"password\" placeholder=\"\u8bf7\u8f93\u5165\u5bc6\u7801\uff1a\"><br> <input type=\"checkbox\" v-model=\"radio\">\u8bb0\u4f4f\u7528\u6237\u540d radio\u72b6\u6001--->{{radio}} </div> <hr> <div> <h2>\u5355\u9009</h2> <input type=\"radio\" v-model=\"sradio\" value=\"\u7537\">\u7537 <input type=\"radio\" v-model=\"sradio\" value=\"\u5973\">\u5973 <input type=\"radio\" v-model=\"sradio\" value=\"\u4fdd\u5bc6\">\u4fdd\u5bc6 <br><br>\u60a8\u9009\u62e9\u7684\u6027\u522b\uff1a{{sradio}} </div> <hr> <div> <h2>\u591a\u9009</h2> <input type=\"checkbox\" v-model=\"many\" value=\"\u7bee\u7403\">\u7bee\u7403 <input type=\"checkbox\" v-model=\"many\" value=\"\u8db3\u7403\">\u8db3\u7403 <input type=\"checkbox\" v-model=\"many\" value=\"\u68d2\u7403\">\u68d2\u7403 <input type=\"checkbox\" v-model=\"many\" value=\"\u684c\u7403\">\u684c\u7403 <br><br>\u60a8\u559c\u6b22\u7684\u7403\u7c7b\uff1a{{many}} </div> </div> </div> </body> <script> var vm = new Vue({ el: '#box', data: { myText: '', textBig: '', radio: false, sradio: '', many:[], }, }) </script> </html>","title":"10.\u8868\u5355\u63a7\u5236"},{"location":"Vue/Vue_01/Vue_01/#11","text":"\u524d\u620f\uff1ajs\u5faa\u73af\u7684\u5b9e\u73b0 \u57fa\u7840\u7248\u672c for(let i=0;i>3;i++){ console.log(i); } in \u5faa\u73af es5\u8bed\u6cd5 for(let member in obj){ ... } for ... of... \u5faa\u73af es6\u8bed\u6cd5 for(item of arr){ console.log(\"item-->\",item); } \u5bf9\u4e8e\u6570\u7ec4\u7684for each\u5faa\u73af $.each(\u53ef\u8fed\u4ee3\u5bf9\u8c61,function(ket,val){ ...; }) var a=[11,22,33] var obj = { name:\"wupeiqi\", age:19, } $.each(a,function(key,val){ console.log(key); console.log(val); })","title":"11.\u8d2d\u7269\u8f66\u6848\u4f8b"},{"location":"Vue/Vue_01/Vue_01/#_1","text":"\u53ea\u505a\u8d2d\u7269\u8f66\u7684\u9009\u62e9\uff0c\u5c55\u793a\u9009\u62e9\u7684\u5546\u54c1&\u603b\u4ef7 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <script src=\"/js/vue.js\"></script> <link rel=\"stylesheet\" href=\"static/plugins/bootstrap/css/bootstrap.css\"> </head> <body> <div class=\"app\"> <div class=\"container-fluid\"> <div class=\"row\"> <div class=\"col-md-6 col-md-offset-3\"> <div style=\"margin-top: 30px\"> <h1>\u8d2d\u7269\u8f66\u6848\u4f8b</h1> <table class=\"table table-bordered\"> <thead> <tr> <th>\u5546\u54c1id</th> <th>\u5546\u54c1\u540d\u5b57</th> <th>\u5546\u54c1\u4ef7\u683c</th> <th>\u5546\u54c1\u6570\u91cf</th> </tr> </thead> <tbody> <tr v-for=\"good in goodList\"> <th>{{good.id}}</th> <td>{{good.name}}</td> <td>{{good.price}}</td> <td>{{good.count}}</td> <td><input type=\"checkbox\" v-model=\"buyGoods\" :value=\"good\"></td> </tr> </tbody> </table> <hr> \u9009\u4e2d\u7684\u5546\u54c1:{{buyGoods}} <hr> \u603b\u4ef7\u683c\u662f\uff1a{{getPrice()}} </div> </div> </div> </div> </div> </body> <script> var vm = new Vue({ el: '.app', data: { goodList: [ {id: '1', name: '\u5c0f\u6c7d\u8f66', price: 150000, count: 2}, {id: '2', name: '\u9e21\u86cb', price: 2, count: 1}, {id: '3', name: '\u997c\u5e72', price: 10, count: 6}, {id: '4', name: '\u94a2\u7b14', price: 15, count: 5}, {id: '5', name: '\u8138\u76c6', price: 30, count: 3}, ], buyGoods:[], }, methods:{ getPrice(){ var total=0 for (item of this.buyGoods){ total+=item.price*item.count } return total } } }) </script> </html>","title":"\u57fa\u7840\u7248\u672c"},{"location":"Vue/Vue_01/Vue_01/#_2","text":"\u901a\u8fc7\u5224\u65ad\u5546\u54c1\u5217\u8868\u548c\u5df2\u9009\u62e9\u7684\u5217\u8868\u957f\u5ea6\u662f\u5426\u4e00\u81f4 handleCheckAll(){ if(this.checkAll){ this.buyGoods = this.goodList; }else{ this.buyGoods = []; } }, handleCheckOne(){ if(this.buyGoods.length == this.goodList.length){ this.checkAll=true; }else{ this.checkAll=false; } } <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <script src=\"/js/vue.js\"></script> <link rel=\"stylesheet\" href=\"static/plugins/bootstrap/css/bootstrap.css\"> <style> .Mycontainer{ height: 2000px; margin-top: 50px; } </style> </head> <body> <div class=\"app\"> <div class=\"container-fluid\"> <div class=\"col-md-6 col-md-offset-3 Mycontainer\"> <table class=\"table table-bordered\"> <thead> <tr> <th>\u5546\u54c1id</th> <th>Name</th> <th>Price</th> <th>count</th> <th><input type=\"checkbox\" v-model=\"checkAll\" @change=\"handleCheckAll\"></th> </tr> </thead> <tbody> <tr v-for=\"good in goodList\"> <td>{{good.id}}</td> <td>{{good.name}}</td> <td>{{good.price}}</td> <td>{{good.count}}</td> <td><input type=\"checkbox\" v-model=\"buyGoods\" :value=\"good\" @change=\"handleCheckOne\"></td> </tr> </tbody> </table> <hr> <p>\u52a0\u5165\u8d2d\u7269\u8f66\u7684\u5546\u54c1\u6709-->{{buyGoods}}</p> <hr> <p>\u603b\u4ef7\u683c\u662f--->{{getPrice()}}</p> </div> </div> </div> </body> <script> var vm = new Vue({ el: '.app', data: { goodList: [ {id: '1', name: '\u5c0f\u6c7d\u8f66', price: 150000, count: 2}, {id: '2', name: '\u9e21\u86cb', price: 2, count: 1}, {id: '3', name: '\u997c\u5e72', price: 10, count: 6}, {id: '4', name: '\u94a2\u7b14', price: 15, count: 5}, {id: '5', name: '\u8138\u76c6', price: 30, count: 3}, ], buyGoods:[], checkAll:false, }, methods:{ getPrice(){ var total_money = 0; for(item of this.buyGoods){ total_money += item.price * item.count; } return total_money }, handleCheckAll(){ if(this.checkAll){ this.buyGoods = this.goodList; }else{ this.buyGoods = []; } }, handleCheckOne(){ if(this.buyGoods.length == this.goodList.length){ this.checkAll=true; }else{ this.checkAll=false; } } } }) </script> </html>","title":"\u8d2d\u7269\u8f66\u62d3\u5c55\u5168\u9009\u529f\u80fd"},{"location":"Vue/Vue_01/Vue_01/#_3","text":"\u5728\u8868\u683c\u7684\u6570\u91cf\u5de6\u53f3\u589e\u52a0\u4e24\u4e2a button \u6309\u94ae\uff0c\u5206\u522b\u7ed1\u5b9a\u4e24\u4e2a\u70b9\u51fb\u4e8b\u4ef6 \u7ed1\u5b9a\u70b9\u51fb\u4e8b\u4ef6\u7684\u540c\u65f6\uff0c\u8981\u4f20\u5165\u5f53\u524d\u5546\u54c1 good \u8fd9\u4e2a\u53c2\u6570 \u7136\u540e\u5728 methods \u4e2d\u5206\u522b\u5b9e\u73b0\u4e24\u4e2a\u5904\u7406\u6570\u91cf\u7684\u51fd\u6570 \uff0c\u6765\u5b9e\u73b0\u52a0\u51cf\u529f\u80fd handlePlus(item){ item.count++; }, handleMinus(item){ if(item.count<=1){ alert(\"\u592a\u5c11\u4e86\"); }else{ item.count--; } } \u5b9e\u73b0\u4ee3\u7801 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <script src=\"/js/vue.js\"></script> <link rel=\"stylesheet\" href=\"static/plugins/bootstrap/css/bootstrap.css\"> <style> .Mycontainer{ height: 2000px; margin-top: 50px; } </style> </head> <body> <div class=\"app\"> <div class=\"container-fluid\"> <div class=\"col-md-6 col-md-offset-3 Mycontainer\"> <table class=\"table table-bordered\"> <thead> <tr> <th>\u5546\u54c1id</th> <th>Name</th> <th>Price</th> <th>count</th> <th><input type=\"checkbox\" v-model=\"checkAll\" @change=\"handleCheckAll\"></th> </tr> </thead> <tbody> <tr v-for=\"good in goodList\"> <td>{{good.id}}</td> <td>{{good.name}}</td> <td>{{good.price}}</td> <td><button @click=\"handleMinus(good)\">-</button>{{good.count}}<button @click=\"handlePlus(good)\">+</button></td> <td><input type=\"checkbox\" v-model=\"buyGoods\" :value=\"good\" @change=\"handleCheckOne\"></td> </tr> </tbody> </table> <hr> <p>\u52a0\u5165\u8d2d\u7269\u8f66\u7684\u5546\u54c1\u6709-->{{buyGoods}}</p> <hr> <p>\u603b\u4ef7\u683c\u662f--->{{getPrice()}}</p> </div> </div> </div> </body> <script> var vm = new Vue({ el: '.app', data: { goodList: [ {id: '1', name: '\u5c0f\u6c7d\u8f66', price: 150000, count: 2}, {id: '2', name: '\u9e21\u86cb', price: 2, count: 1}, {id: '3', name: '\u997c\u5e72', price: 10, count: 6}, {id: '4', name: '\u94a2\u7b14', price: 15, count: 5}, {id: '5', name: '\u8138\u76c6', price: 30, count: 3}, ], buyGoods:[], checkAll:false, }, methods:{ getPrice(){ var total_money = 0; for(item of this.buyGoods){ total_money += item.price * item.count; } return total_money }, handleCheckAll(){ if(this.checkAll){ this.buyGoods = this.goodList; }else{ this.buyGoods = []; } }, handleCheckOne(){ if(this.buyGoods.length == this.goodList.length){ this.checkAll=true; }else{ this.checkAll=false; } }, handlePlus(item){ item.count++; }, handleMinus(item){ if(item.count<=1){ alert(\"\u592a\u5c11\u4e86\"); }else{ item.count--; } } } }) </script> </html>","title":"\u8d2d\u7269\u8f66\u62d3\u5c55\u52a0\u51cf\u529f\u80fd"},{"location":"Vue/Vue_01/Vue_01/#12v-model","text":"lazy \u7b49\u5f85input\u6846\u7684\u6570\u636e\u7ed1\u5b9a\u5931\u53bb\u7126\u70b9\u4e4b\u540e\u518d\u53d8\u5316 number \u6570\u7ec4\u5f00\u5934\uff0c\u53ea\u4fdd\u7559\u6570\u5b57\uff0c\u540e\u9762\u7684\u5b57\u6bcd\u4e0d\u4fdd\u7559 \uff1b\u5b57\u6bcd\u5f00\u5934\u7684\u8bdd\uff0c\u5168\u90e8\u4fdd\u7559 trim \u53bb\u9664\u9996\u4f4d\u7684\u7a7a\u683c <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <script src=\"/js/vue.js\"></script> <link rel=\"stylesheet\" href=\"static/plugins/bootstrap/css/bootstrap.css\"> </head> <body> <div id=\"app\"> <div class=\"container\"> <h2>lazy</h2> <p><input type=\"text\" v-model.lazy=\"a\">{{a}}</p> <h2>number</h2> <p><input type=\"text\" v-model.number=\"b\">{{b}}</p> <h2>trim</h2> <p><input type=\"text\" v-model.trim=\"c\">{{c}}</p> </div> </div> </body> <script> new Vue({ el: '#app', data: { a: '', b: '', c: '', }, methods: {}, }) </script> </html>","title":"12.v-model \u62d3\u5c55"},{"location":"project/tables/tables/","text":"1.\u8868\u7ed3\u6784\u8bbe\u8ba1\u6d4b\u8bd5\uff08v1\uff09 \u6240\u6709\u8868\u7ed3\u6784\u4e0d\u6d89\u53ca\u7269\u7406\u5220\u9664 class ActiveBaseModel(models.Model): active = models.SmallIntegerField(verbose_name='\u72b6\u6001', default=1, choices=((1, '\u6fc0\u6d3b'), (0, '\u5220\u9664'),)) class Meta: abstract = True \u8fd9\u91cc\u7684 ActiveBaseModel \u7c7b\u7ee7\u627f\u4e86 models.Model \u4e4b\u540e\u7684\u5efa\u8868\u7684\u7c7b\u5c06\u7ee7\u627f ActiveBaseModel \u7c7b\uff0c\u540c\u65f6\u7ee7\u627f models.Model \u548c ActiveBaseModel \u4e2d\u7684\u65b9\u6cd5\u548c\u5c5e\u6027 \u7ba1\u7406\u5458 class Administrator(models.Model): username = models.CharField(verbose_name='\u7ba1\u7406\u5458\u7528\u6237\u540d', max_length=32, db_index=True) password = models.CharField(verbose_name='\u7ba1\u7406\u5458\u5bc6\u7801', max_length=64) mobile = models.CharField(verbose_name='\u624b\u673a\u53f7', max_length=11) email = models.CharField(verbose_name='\u90ae\u7bb1', max_length=32, null=True, blank=True) create_date = models.DateTimeField(verbose_name='\u521b\u5efa\u65e5\u671f', auto_now_add=True) def __str__(self): return self.username \u7528\u6237 class Customer(ActiveBaseModel): username = models.CharField(verbose_name='\u7528\u6237\u540d', max_length=32, db_index=True) password = models.CharField(verbose_name='\u5bc6\u7801', max_length=64) mobile = models.CharField(verbose_name='\u624b\u673a\u53f7', max_length=11) create_date = models.DateTimeField(verbose_name='\u521b\u5efa\u65e5\u671f', auto_now_add=True) def __str__(self): return self.username \u6587\u7ae0 class Article(ActiveBaseModel): title = models.CharField(verbose_name=\"\u6807\u9898\", max_length=64) author = models.ForeignKey(verbose_name='\u4f5c\u8005', to=\"Customer\", on_delete=models.CASCADE) create_date = models.DateTimeField(verbose_name='\u521b\u5efa\u65e5\u671f', auto_now_add=True) content = models.CharField(verbose_name='\u5185\u5bb9', null=True, blank=True, max_length=256) media_path = models.CharField(verbose_name='\u5a92\u4f53\u8def\u5f84', max_length=128) def __str__(self): return self.title \u5728\u6b64\u5904\u5148\u8bbe\u8ba1\u7b80\u5355\u7684\u8868\u7ed3\u6784\uff0c \u6d4b\u8bd5\u7248\u672c\u4e2d\uff0c\u9700\u8981\u6ee1\u8db3\u7684\u9700\u6c42\u5305\u62ec \u7528\u6237\u767b\u9646/\u6ce8\u518c \u7528\u6237&\u7ba1\u7406\u5458\u5bf9\u5185\u5bb9\u7684\u589e\u5220\u6539\u67e5 \u7ba1\u7406\u5458\u6570\u636e\u67e5\u8be2","title":"1.\u8868\u7ed3\u6784\u8bbe\u8ba1\u6d4b\u8bd5\uff08v1\uff09"},{"location":"project/tables/tables/#1v1","text":"\u6240\u6709\u8868\u7ed3\u6784\u4e0d\u6d89\u53ca\u7269\u7406\u5220\u9664 class ActiveBaseModel(models.Model): active = models.SmallIntegerField(verbose_name='\u72b6\u6001', default=1, choices=((1, '\u6fc0\u6d3b'), (0, '\u5220\u9664'),)) class Meta: abstract = True \u8fd9\u91cc\u7684 ActiveBaseModel \u7c7b\u7ee7\u627f\u4e86 models.Model \u4e4b\u540e\u7684\u5efa\u8868\u7684\u7c7b\u5c06\u7ee7\u627f ActiveBaseModel \u7c7b\uff0c\u540c\u65f6\u7ee7\u627f models.Model \u548c ActiveBaseModel \u4e2d\u7684\u65b9\u6cd5\u548c\u5c5e\u6027 \u7ba1\u7406\u5458 class Administrator(models.Model): username = models.CharField(verbose_name='\u7ba1\u7406\u5458\u7528\u6237\u540d', max_length=32, db_index=True) password = models.CharField(verbose_name='\u7ba1\u7406\u5458\u5bc6\u7801', max_length=64) mobile = models.CharField(verbose_name='\u624b\u673a\u53f7', max_length=11) email = models.CharField(verbose_name='\u90ae\u7bb1', max_length=32, null=True, blank=True) create_date = models.DateTimeField(verbose_name='\u521b\u5efa\u65e5\u671f', auto_now_add=True) def __str__(self): return self.username \u7528\u6237 class Customer(ActiveBaseModel): username = models.CharField(verbose_name='\u7528\u6237\u540d', max_length=32, db_index=True) password = models.CharField(verbose_name='\u5bc6\u7801', max_length=64) mobile = models.CharField(verbose_name='\u624b\u673a\u53f7', max_length=11) create_date = models.DateTimeField(verbose_name='\u521b\u5efa\u65e5\u671f', auto_now_add=True) def __str__(self): return self.username \u6587\u7ae0 class Article(ActiveBaseModel): title = models.CharField(verbose_name=\"\u6807\u9898\", max_length=64) author = models.ForeignKey(verbose_name='\u4f5c\u8005', to=\"Customer\", on_delete=models.CASCADE) create_date = models.DateTimeField(verbose_name='\u521b\u5efa\u65e5\u671f', auto_now_add=True) content = models.CharField(verbose_name='\u5185\u5bb9', null=True, blank=True, max_length=256) media_path = models.CharField(verbose_name='\u5a92\u4f53\u8def\u5f84', max_length=128) def __str__(self): return self.title \u5728\u6b64\u5904\u5148\u8bbe\u8ba1\u7b80\u5355\u7684\u8868\u7ed3\u6784\uff0c \u6d4b\u8bd5\u7248\u672c\u4e2d\uff0c\u9700\u8981\u6ee1\u8db3\u7684\u9700\u6c42\u5305\u62ec \u7528\u6237\u767b\u9646/\u6ce8\u518c \u7528\u6237&\u7ba1\u7406\u5458\u5bf9\u5185\u5bb9\u7684\u589e\u5220\u6539\u67e5 \u7ba1\u7406\u5458\u6570\u636e\u67e5\u8be2","title":"1.\u8868\u7ed3\u6784\u8bbe\u8ba1\u6d4b\u8bd5\uff08v1\uff09"}]}